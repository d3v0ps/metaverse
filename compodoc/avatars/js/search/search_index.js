var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Appearance.html",[0,0.688,1,0.956]],["body/interfaces/Appearance.html",[0,0.796,1,1.589,2,1.661,3,0.393,4,0.345,5,0.345,6,3.127,7,1.982,8,3.127,9,0.549,10,1.03,11,3.517,12,1.682,13,3.315,14,2.75,15,3.517,16,2.229,17,0.885,18,0.031,19,6.381,20,3.527,21,2.13,22,5.882,23,4.049,24,4.049,25,3.68,26,0.393,27,4.049,28,4.049,29,4.049,30,0.023,31,0.023]],["title/injectables/AvailableAvatarsState.html",[32,1.713,33,2.354]],["body/injectables/AvailableAvatarsState.html",[3,0.356,4,0.312,5,0.312,9,0.498,10,0.966,12,1.777,17,0.803,18,0.032,26,0.356,30,0.022,31,0.022,32,2.406,33,3.307,34,2.47,35,4.765,36,2.835,37,1.898,38,4.272,39,4.571,40,2.406,41,4.571,42,2.197,43,2.47,44,4.272,45,1.898,46,4.539,47,1.506,48,0.926,49,3.39,50,1.506,51,1.642,52,1.385,53,0.926,54,1.185,55,4.279,56,3.39,57,4.279,58,0.861,59,0.498,60,1.577,61,2.47,62,2.197,63,2.835,64,3.796,65,3.307,66,2.47,67,2.197,68,2.197,69,2.835,70,2.835,71,0.477,72,1.979,73,2.197,74,2.197,75,0.401,76,2.47,77,2.835,78,2.47,79,2.835,80,2.197,81,2.47,82,2.47,83,3.39,84,4.279,85,2.835,86,3.796,87,2.835,88,2.835,89,2.835,90,3.39,91,3.39,92,3.39]],["title/interfaces/Avatar.html",[0,0.688,71,0.339]],["body/interfaces/Avatar.html",[0,0.646,1,1.804,2,1.348,3,0.319,4,0.28,5,0.28,7,1.609,8,5.443,9,0.446,10,0.896,12,1.813,16,2.158,17,0.919,18,0.032,26,0.319,30,0.02,31,0.02,48,1.549,58,0.71,71,0.548,93,2.538,94,3.311,95,4.364,96,3.675,97,3.675,98,4.364,99,3.675,100,3.311,101,4.364,102,3.382,103,4.744,104,3.52,105,1.904,106,4.209,107,2.655,108,3.52,109,2.727,110,2.727,111,4.209,112,4.209,113,4.209]],["title/components/AvatarAppearancesComponent.html",[114,0.576,115,0.956]],["body/components/AvatarAppearancesComponent.html",[0,0.812,1,1.752,3,0.278,4,0.244,5,0.244,9,0.388,10,0.812,11,2.864,12,1.326,13,2.228,14,1.28,15,1.543,17,0.764,18,0.032,21,1.704,25,2.904,26,0.515,30,0.018,31,0.018,37,0.918,40,2.024,45,1.808,47,1.696,48,1.34,50,1.696,51,1.849,52,1.08,53,1.224,54,1.351,58,0.658,59,0.388,71,0.587,75,0.313,94,3.537,114,0.798,115,1.452,116,1.849,117,1.28,118,1.402,119,0.879,120,1.256,121,2.626,122,1.543,123,1.28,124,1.694,125,1.835,126,1.13,127,3.264,128,1.831,129,3.818,130,2.024,131,2.228,132,3.264,133,3.818,134,2.781,135,2.644,136,2.005,137,2.376,138,2.644,139,2.644,140,2.644,141,2.644,142,1.224,143,2.474,144,1.08,145,0.995,146,0.995,147,1.713,148,2.474,149,2.228,150,1.926,151,1.543,152,0.995,153,1.926,154,1.926,155,1.543,156,1.926,157,0.848,158,1.926,159,1.926,160,1.926,161,1.926,162,1.926,163,1.926,164,1.926,165,1.926,166,1.926,167,1.713,168,1.926,169,1.926,170,1.926,171,1.402,172,1.849,173,2.024,174,1.402,175,2.601,176,1.402,177,1.402,178,0.848,179,1.402,180,0.918,181,1.402,182,0.848,183,1.402,184,0.848,185,1.402,186,0.918,187,1.402,188,1.402]],["title/interfaces/AvatarAppearancesForm.html",[0,0.688,151,1.886]],["body/interfaces/AvatarAppearancesForm.html",[0,0.993,1,1.645,2,1.571,3,0.371,4,0.326,5,0.326,9,0.519,10,0.993,11,2.725,13,2.725,14,1.712,15,2.064,17,0.767,18,0.032,21,1.228,25,2.291,26,0.584,30,0.022,31,0.022,53,0.966,54,1.402,58,0.767,59,0.519,71,0.371,75,0.418,94,3.532,114,0.832,115,1.046,119,0.573,120,0.819,121,1.712,122,2.064,124,1.046,125,1.134,126,1.046,127,2.576,128,1.445,132,2.576,134,2.576,136,2.135,137,2.531,142,1.497,143,3.025,144,1.445,145,1.331,146,1.331,147,2.291,148,3.025,149,3.244,150,2.576,151,2.725,152,1.331,153,2.576,154,2.576,155,2.064,156,2.576,157,1.134,158,2.576,159,2.576,160,2.576,161,2.576,162,2.576,163,2.576,164,2.576,165,2.576,166,2.576,167,2.291,168,2.576,169,2.576,170,2.576]],["title/modules/AvatarAppearancesModule.html",[189,1.713,190,2.094]],["body/modules/AvatarAppearancesModule.html",[3,0.393,4,0.345,5,0.345,18,0.032,21,1.299,26,0.393,30,0.023,31,0.023,58,0.913,59,0.549,60,1.682,71,0.564,75,0.443,115,1.9,119,0.606,120,0.866,121,1.811,190,4.071,191,1.528,192,1.978,193,3.127,194,3.127,195,3.127,196,3.127,197,3.517,198,2.345,199,1.811,200,1.528,201,3.739,202,2.567,203,2.567,204,2.567,205,2.567,206,1.811,207,2.567,208,3.527,209,2.423,210,2.423,211,3.137,212,2.182,213,2.826,214,2.826,215,2.182,216,3.137,217,2.423,218,2.423,219,2.423,220,2.182,221,3.739,222,3.739]],["title/components/AvatarOverviewComponent.html",[114,0.576,178,1.036]],["body/components/AvatarOverviewComponent.html",[0,0.569,1,0.792,3,0.281,4,0.247,5,0.247,9,0.393,10,0.819,12,0.929,14,2.637,16,1.816,17,0.725,18,0.032,20,1.949,21,0.929,26,0.404,30,0.018,31,0.018,37,0.929,45,1.714,47,1.189,48,1.658,50,1.189,51,1.296,52,1.573,53,1.347,54,1.375,58,0.662,59,0.393,71,0.653,72,1.562,75,0.317,100,3.178,102,3.528,109,2.923,110,2.923,114,0.804,115,0.792,116,1.865,117,1.296,118,1.419,119,0.848,120,1.211,123,1.296,124,1.699,125,1.841,126,1.14,128,1.843,130,2.041,131,2.248,136,1.843,142,1.235,144,2.389,145,1.007,146,1.007,152,1.007,157,0.858,171,1.419,172,1.865,173,2.041,174,1.419,175,2.616,176,1.419,177,1.419,178,1.582,179,1.419,180,0.929,181,1.419,182,0.858,183,1.419,184,0.858,185,1.419,186,0.929,187,1.419,188,1.419,223,3.052,224,1.949,225,2.495,226,3.773,227,3.773,228,3.773,229,3.851,230,4.183,231,2.676,232,2.676,233,2.676,234,1.734,235,2.238,236,2.238,237,2.238,238,2.238,239,2.238,240,2.238,241,1.734,242,2.238]],["title/interfaces/AvatarOverviewInput.html",[0,0.688,234,2.094]],["body/interfaces/AvatarOverviewInput.html",[0,0.737,2,1.539,3,0.364,4,0.319,5,0.319,9,0.509,10,0.98,14,2.916,16,2.217,17,0.843,18,0.032,26,0.484,30,0.022,31,0.022,48,1.67,53,0.946,54,1.33,58,0.76,59,0.509,71,0.543,72,2.023,75,0.41,100,3.515,102,3.902,109,2.245,110,2.245,114,0.82,119,0.562,120,0.803,124,1.026,125,1.111,126,1.026,128,1.416,136,1.882,142,1.477,144,2.345,145,1.305,146,1.305,152,1.305,157,1.111,178,1.111,223,2.023,224,2.524,225,2.245,226,2.898,227,2.898,228,2.898,230,4.016,234,2.985,235,2.898,236,2.898,237,2.898,238,2.898,239,2.898,240,2.898,241,2.245,242,2.898]],["title/modules/AvatarOverviewModule.html",[189,1.713,243,2.094]],["body/modules/AvatarOverviewModule.html",[3,0.411,4,0.361,5,0.361,18,0.032,26,0.411,30,0.024,31,0.024,58,0.91,59,0.575,60,1.733,71,0.411,75,0.464,119,0.635,120,0.907,178,2.071,191,1.6,192,2.038,198,2.416,199,1.897,200,1.6,202,2.645,203,2.077,204,2.645,205,2.645,206,1.897,207,2.645,208,3.634,209,2.538,210,2.538,211,3.232,212,2.286,213,2.912,214,2.912,215,2.286,216,3.232,217,2.538,218,2.538,219,2.538,223,2.286,243,4.017,244,3.276,245,3.276,246,3.276,247,3.917,248,3.917]],["title/components/AvatarScopesComponent.html",[114,0.576,182,1.036]],["body/components/AvatarScopesComponent.html",[1,0.781,3,0.277,4,0.243,5,0.243,9,0.388,10,0.811,12,1.324,17,0.72,18,0.032,21,0.917,26,0.4,30,0.018,31,0.018,37,0.917,40,2.022,45,1.806,47,1.694,48,1.339,50,1.694,51,1.847,52,1.078,53,1.222,54,1.325,58,0.657,59,0.388,71,0.587,75,0.451,97,3.925,105,2.168,114,0.797,115,0.781,116,1.847,117,1.278,118,1.399,119,0.879,120,1.256,123,1.278,124,1.693,125,1.834,126,1.129,128,1.829,130,2.022,131,2.226,136,2.003,137,2.375,142,1.223,144,1.078,145,0.994,146,0.994,152,0.994,155,1.541,157,0.846,171,1.399,172,1.847,173,2.022,174,1.399,175,2.599,176,1.399,177,1.399,178,0.846,179,1.399,180,0.917,181,1.399,182,1.572,183,1.399,184,0.846,185,1.399,186,0.917,187,1.399,188,1.399,249,3.163,250,1.923,251,3.744,252,3.744,253,3.744,254,3.177,255,2.375,256,2.613,257,3.744,258,3.189,259,3.744,260,3.813,261,3.189,262,2.639,263,2.639,264,2.639,265,2.639,266,2.639,267,2.207,268,1.71,269,2.207,270,2.207,271,2.207,272,2.207,273,2.207,274,2.207,275,2.207,276,2.207]],["title/classes/AvatarScopesInput.html",[75,0.382,268,2.094]],["body/classes/AvatarScopesInput.html",[3,0.383,4,0.337,5,0.337,9,0.536,10,1.015,17,0.7,18,0.032,26,0.501,30,0.023,31,0.023,45,1.268,53,0.997,54,1.387,58,0.78,59,0.536,71,0.383,75,0.564,97,3.88,105,2.148,114,0.849,119,0.773,120,1.104,124,1.081,125,1.171,126,1.081,128,1.492,136,2.169,137,2.571,142,1.529,144,1.492,145,1.375,146,1.375,152,1.375,155,2.131,157,1.171,182,1.171,249,2.783,250,2.66,251,3.054,252,3.054,253,3.054,254,3.089,255,2.309,256,2.131,257,3.054,259,3.054,261,3.054,267,3.054,268,3.089,269,3.054,270,3.054,271,3.054,272,3.054,273,3.054,274,3.054,275,3.054,276,3.054,277,2.66,278,3.652]],["title/modules/AvatarScopesModule.html",[189,1.713,279,2.094]],["body/modules/AvatarScopesModule.html",[3,0.421,4,0.369,5,0.369,18,0.031,26,0.421,30,0.024,31,0.024,58,0.901,59,0.589,60,1.758,71,0.421,75,0.474,119,0.65,120,0.928,182,2.078,191,1.637,192,2.068,198,2.451,199,1.941,200,1.637,202,2.683,203,2.125,204,2.683,205,2.683,206,1.941,207,2.683,211,3.279,212,2.339,213,2.954,214,2.954,215,2.339,216,3.279,217,2.597,218,2.597,219,2.597,249,2.339,279,4.038,280,3.352,281,3.352,282,3.352,283,4.008,284,4.008]],["title/components/AvatarSkillsComponent.html",[114,0.576,184,1.036]],["body/components/AvatarSkillsComponent.html",[1,0.735,3,0.261,4,0.229,5,0.229,9,0.365,10,0.776,12,1.267,16,1.267,17,0.779,18,0.032,20,1.81,21,0.863,26,0.383,30,0.017,31,0.017,37,0.863,40,1.934,45,1.843,47,1.621,48,1.301,50,1.621,51,1.767,52,1.491,53,1.301,54,1.303,58,0.635,59,0.365,71,0.576,75,0.432,99,3.981,105,1.655,107,2.928,114,0.77,115,0.735,116,1.767,117,1.203,118,1.317,119,0.889,120,1.27,123,1.203,124,1.665,125,1.804,126,1.08,128,1.767,130,1.934,131,2.129,136,1.947,137,2.308,142,1.17,144,1.015,145,0.935,146,0.935,152,0.935,157,0.796,171,1.317,172,1.767,173,1.934,174,1.317,175,2.526,176,1.317,177,1.317,178,0.796,179,1.317,180,0.863,181,1.317,182,0.796,183,1.317,184,1.528,185,1.317,186,0.863,187,1.317,188,1.317,241,1.61,255,2.308,256,2.524,258,3.051,285,3.201,286,1.81,287,3.616,288,3.616,289,3.15,290,3.616,291,3.616,292,3.648,293,3.051,294,2.484,295,2.484,296,3.088,297,3.866,298,3.051,299,2.364,300,2.658,301,2.658,302,3.051,303,2.484,304,2.484,305,2.484,306,2.484,307,2.078,308,1.61,309,2.078,310,2.078,311,2.078,312,2.078,313,2.078,314,2.078,315,2.078,316,2.078,317,2.078,318,2.078]],["title/classes/AvatarSkillsInput.html",[75,0.382,308,2.094]],["body/classes/AvatarSkillsInput.html",[3,0.369,4,0.324,5,0.324,9,0.516,10,0.989,16,1.614,17,0.682,18,0.032,26,0.488,30,0.022,31,0.022,45,1.22,53,0.959,54,1.372,58,0.765,59,0.516,71,0.369,75,0.55,99,3.915,105,1.614,107,2.926,114,0.828,119,0.753,120,1.077,124,1.039,125,1.126,126,1.039,128,1.435,136,2.128,137,2.522,142,1.49,144,1.435,145,1.322,146,1.322,152,1.322,157,1.126,184,1.126,241,2.276,255,2.251,256,2.05,277,2.559,285,2.712,286,2.559,287,2.937,288,2.937,289,2.559,290,2.937,291,2.937,293,2.937,296,3.011,297,3.794,298,2.937,299,2.276,300,2.559,301,2.559,302,2.937,307,2.937,308,3.011,309,2.937,310,2.937,311,2.937,312,2.937,313,2.937,314,2.937,315,2.937,316,2.937,317,2.937,318,2.937,319,3.512]],["title/modules/AvatarSkillsModule.html",[189,1.713,320,2.094]],["body/modules/AvatarSkillsModule.html",[3,0.411,4,0.361,5,0.361,18,0.032,26,0.411,30,0.024,31,0.024,58,0.91,59,0.575,60,1.733,71,0.411,75,0.464,119,0.635,120,0.907,184,2.071,191,1.6,192,2.038,198,2.416,199,1.897,200,1.6,202,2.645,203,2.077,204,2.645,205,2.645,206,1.897,207,2.645,208,3.634,209,2.538,210,2.538,211,3.232,212,2.286,213,2.912,214,2.912,215,2.286,216,3.232,217,2.538,218,2.538,219,2.538,285,2.286,320,4.017,321,3.276,322,3.276,323,3.276,324,3.917,325,3.917]],["title/components/AvatarsCarouselComponent.html",[114,0.576,180,1.122]],["body/components/AvatarsCarouselComponent.html",[1,1.026,3,0.364,4,0.319,5,0.319,9,0.509,17,0.76,18,0.032,21,1.204,26,0.364,30,0.022,31,0.022,37,2.05,45,1.6,48,1.258,52,1.416,53,0.946,54,0.803,58,0.676,59,0.509,71,0.642,72,2.023,75,0.41,114,0.922,115,1.026,116,2.231,117,1.678,118,1.837,119,0.839,123,1.678,124,1.81,125,1.961,126,1.363,130,2.442,142,1.477,171,1.837,172,2.231,173,2.442,174,1.837,175,2.923,176,1.837,177,1.837,178,1.111,179,1.837,180,1.915,181,1.837,182,1.111,183,1.837,184,1.111,185,1.837,186,1.204,187,1.837,188,1.837,326,3.352,327,3.352,328,2.898,329,4.606,330,5.174,331,4.606,332,5.174,333,3.465,334,5.174,335,3.465,336,3.852]],["title/modules/AvatarsCarouselModule.html",[189,1.713,337,2.094]],["body/modules/AvatarsCarouselModule.html",[3,0.439,4,0.385,5,0.385,18,0.031,26,0.439,30,0.025,31,0.025,37,1.452,58,0.869,59,0.614,60,1.452,75,0.495,119,0.677,180,2.264,191,1.707,192,2.123,198,2.516,199,2.024,200,1.707,202,2.755,203,2.216,204,2.755,205,2.755,206,2.024,207,2.755,213,3.033,214,2.439,215,2.439,326,2.708,327,2.708,337,4.075,338,3.495,339,3.495,340,3.495,341,4.179,342,4.179]],["title/interfaces/FormAppearance.html",[0,0.688,149,1.886]],["body/interfaces/FormAppearance.html",[0,0.987,1,1.705,2,1.557,3,0.368,4,0.323,5,0.323,9,0.515,10,0.987,11,2.708,12,1.612,13,3.362,14,1.697,15,2.045,17,0.764,18,0.032,21,1.217,25,2.271,26,0.581,30,0.022,31,0.022,53,0.957,54,1.399,58,0.764,59,0.515,71,0.368,75,0.415,94,3.232,114,0.827,115,1.037,119,0.568,120,0.812,121,1.697,122,2.045,124,1.037,125,1.123,126,1.037,127,2.553,128,1.432,132,2.553,134,2.553,136,2.125,137,2.519,142,1.488,143,3.007,144,1.432,145,1.319,146,1.319,147,2.271,148,3.588,149,3.036,150,3.38,151,2.045,152,1.319,153,2.553,154,2.553,155,2.045,156,2.553,157,1.123,158,2.553,159,2.553,160,2.553,161,2.553,162,2.553,163,2.553,164,2.553,165,2.553,166,2.553,167,2.271,168,2.553,169,2.553,170,2.553]],["title/guards/IsAvatarSelectedGuard.html",[343,2.354,344,2.354]],["body/guards/IsAvatarSelectedGuard.html",[3,0.351,4,0.308,5,0.308,9,0.491,12,1.162,16,1.766,17,0.661,18,0.032,26,0.472,30,0.021,31,0.021,32,2.386,37,1.162,38,3.704,40,2.386,42,2.916,43,2.438,44,4.256,45,1.563,47,1.486,48,0.914,50,1.486,54,0.775,58,0.833,59,0.491,60,1.563,61,2.438,62,2.168,65,2.438,66,2.438,67,2.168,71,0.571,73,2.916,74,2.916,75,0.396,78,2.438,81,2.438,82,2.438,96,2.168,124,0.99,157,1.073,230,2.438,344,3.278,345,3.346,346,3.704,347,2.438,348,4.252,349,5.842,350,5.969,351,5.084,352,3.346,353,3.346,354,5.084,355,3.346,356,3.763,357,2.799,358,2.799,359,2.799,360,2.799,361,3.346,362,3.346,363,2.438,364,2.799,365,2.168,366,2.438,367,3.346,368,3.346,369,3.346,370,3.346,371,2.799,372,3.346,373,3.346,374,2.799,375,3.346,376,3.346,377,3.346,378,2.799,379,3.346,380,3.346,381,3.346]],["title/components/PreviewAvatarAppearanceComponent.html",[114,0.576,186,1.122]],["body/components/PreviewAvatarAppearanceComponent.html",[1,1.802,3,0.299,4,0.263,5,0.263,9,0.419,10,0.858,12,1.4,16,1.4,17,0.817,18,0.031,21,1.764,26,0.299,30,0.019,31,0.019,37,0.99,42,1.848,45,1.932,47,1.79,48,1.387,50,1.267,51,1.381,52,1.646,53,1.387,58,0.746,59,0.419,71,0.678,75,0.337,76,2.077,114,0.832,115,0.844,116,1.952,117,1.381,118,1.512,119,0.927,123,1.381,124,1.728,125,1.872,126,1.193,130,2.136,131,2.352,142,1.628,147,1.848,152,1.074,157,0.914,171,1.512,172,1.952,173,2.136,174,1.512,175,2.692,176,1.512,177,1.512,178,0.914,179,1.512,180,0.99,181,1.512,182,0.914,183,1.512,184,0.914,185,1.512,186,1.764,187,1.512,188,1.512,220,3.337,382,3.704,383,2.385,384,4.673,385,3.908,386,3.908,387,2.852,388,5.079,389,4.03,390,4.03,391,4.03,392,4.03,393,2.852,394,2.936,395,4.673,396,2.852,397,2.852,398,2.385,399,2.077,400,2.077,401,2.077,402,2.385,403,2.852,404,2.852,405,2.852,406,2.852,407,2.852,408,2.852]],["title/modules/PreviewAvatarAppearanceModule.html",[189,1.713,197,1.886]],["body/modules/PreviewAvatarAppearanceModule.html",[3,0.441,4,0.387,5,0.387,18,0.031,21,1.459,26,0.441,30,0.025,31,0.025,58,0.87,59,0.617,71,0.595,75,0.497,119,0.681,186,2.265,191,1.717,192,2.13,197,3.675,198,2.525,199,2.035,200,1.717,202,2.764,203,2.228,204,2.764,205,2.764,206,2.035,207,2.764,220,2.452,382,2.723,409,3.514,410,3.514,411,3.514,412,4.202,413,4.202,414,4.202]],["title/interfaces/Scope.html",[0,0.688,105,1.122]],["body/interfaces/Scope.html",[0,0.916,2,1.913,3,0.452,4,0.397,5,0.397,7,2.283,9,0.632,10,1.126,16,2.237,17,0.842,18,0.031,26,0.452,30,0.025,31,0.025,48,1.445,105,2.281,254,4.048,255,3.025,415,3.601]],["title/injectables/SelectedAvatarState.html",[32,1.713,416,2.354]],["body/injectables/SelectedAvatarState.html",[3,0.293,4,0.257,5,0.257,9,0.41,10,0.844,12,1.918,17,0.834,18,0.032,26,0.293,30,0.019,31,0.019,32,2.104,34,2.033,37,1.378,38,4.304,39,4.444,40,2.104,41,4.206,42,1.808,43,2.033,44,4.023,45,1.918,47,1.763,48,1.084,50,1.763,51,1.351,52,1.14,53,1.084,54,1.165,55,2.334,57,4.444,58,0.834,59,0.41,60,1.604,61,2.033,62,1.808,63,2.334,64,3.319,65,2.891,66,2.033,67,1.808,68,1.808,69,2.334,70,2.334,71,0.62,72,1.629,73,1.808,74,1.808,75,0.33,76,2.033,77,2.334,78,2.891,79,3.319,80,1.808,81,2.891,82,2.891,84,3.862,85,2.334,86,3.319,87,2.334,88,3.319,89,3.319,96,2.992,124,1.174,157,1.613,358,2.334,359,2.334,360,2.334,371,2.334,374,3.319,416,2.891,417,4.751,418,2.334,419,5.029,420,3.968,421,3.968,422,3.968,423,2.79,424,2.79,425,3.968,426,2.79,427,2.79,428,3.968,429,2.79,430,5.029,431,2.79,432,2.79,433,2.79,434,2.79,435,2.79,436,2.79,437,2.79,438,2.79,439,2.79,440,2.79]],["title/interfaces/Skill.html",[0,0.688,107,1.565]],["body/interfaces/Skill.html",[0,0.916,2,1.913,3,0.452,4,0.397,5,0.397,7,2.283,9,0.632,10,1.126,16,2.237,17,0.842,18,0.031,26,0.452,30,0.025,31,0.025,48,1.445,105,2.17,107,3.065,255,3.025,441,3.601,442,6.247]],["title/contributing.html",[443,1.971,444,1.971,445,2.263]],["body/contributing.html",[7,0.879,18,0.021,23,1.387,24,1.387,30,0.013,31,0.013,54,0.619,60,1.336,62,1.075,100,0.968,105,0.576,142,0.532,200,1.723,256,1.559,289,1.208,296,1.075,336,1.387,348,1.387,394,1.208,445,2.806,446,3.217,447,3.217,448,3.847,449,1.658,450,1.658,451,2.234,452,4.217,453,1.658,454,2.672,455,1.658,456,1.658,457,4.217,458,2.234,459,2.672,460,1.658,461,2.672,462,4.217,463,2.672,464,5.678,465,1.658,466,3.847,467,4.931,468,4.507,469,3.847,470,3.355,471,3.847,472,3.847,473,1.658,474,3.355,475,1.658,476,1.658,477,2.672,478,1.658,479,1.658,480,1.658,481,2.806,482,1.658,483,1.658,484,1.658,485,1.658,486,1.658,487,1.658,488,2.234,489,1.658,490,1.658,491,1.658,492,1.658,493,1.658,494,1.658,495,1.658,496,2.672,497,1.658,498,1.658,499,1.658,500,1.658,501,2.672,502,1.658,503,3.964,504,3.355,505,4.507,506,4.74,507,2.672,508,4.507,509,2.672,510,2.672,511,2.672,512,3.072,513,2.672,514,2.672,515,2.672,516,2.672,517,4.507,518,1.658,519,2.672,520,1.658,521,2.672,522,1.658,523,4.74,524,1.658,525,4.217,526,4.507,527,1.658,528,1.658,529,1.658,530,3.847,531,3.847,532,3.847,533,3.355,534,1.658,535,1.658,536,5.973,537,2.672,538,3.355,539,2.672,540,1.658,541,1.658,542,2.672,543,1.658,544,1.658,545,1.658,546,2.806,547,2.234,548,3.527,549,2.672,550,2.672,551,2.672,552,1.658,553,2.672,554,2.672,555,1.658,556,1.658,557,1.658,558,2.672,559,2.672,560,1.658,561,1.658,562,1.658,563,3.847,564,1.658,565,1.387,566,1.658,567,1.658,568,3.355,569,1.658,570,1.387,571,2.234,572,1.658,573,1.208,574,3.355,575,5.53,576,3.847,577,1.658,578,1.658,579,1.658,580,1.658,581,1.658,582,2.672,583,3.847,584,1.658,585,1.658,586,2.672,587,2.672,588,3.355,589,1.658,590,1.658,591,4.507,592,1.658,593,2.672,594,1.658,595,1.658,596,3.355,597,2.672,598,3.217,599,1.658,600,1.658,601,2.672,602,1.658,603,1.658,604,1.658,605,2.672,606,1.658,607,1.658,608,2.672,609,4.217,610,1.658,611,1.658,612,3.847,613,2.672,614,1.658,615,1.658,616,2.672,617,2.234,618,2.672,619,1.658,620,1.658,621,3.355,622,1.658,623,1.658,624,1.658,625,1.658,626,2.672,627,2.672,628,2.672,629,1.658,630,1.658,631,1.658,632,1.658,633,1.658,634,1.658,635,1.387,636,2.672,637,1.658,638,4.217,639,1.658,640,2.672,641,1.658,642,1.658,643,3.355,644,1.658,645,1.658,646,3.355,647,1.658,648,1.658,649,1.658,650,2.806,651,1.658,652,1.658,653,1.387,654,1.658,655,3.847,656,2.234,657,1.658,658,2.672,659,3.355,660,1.658,661,1.658,662,2.672,663,2.672,664,1.658,665,1.658,666,1.658,667,1.387,668,1.658,669,1.658,670,1.658,671,1.658,672,1.658,673,1.658,674,1.658,675,1.658,676,2.672,677,1.658,678,1.658,679,1.658,680,1.658,681,1.658,682,1.658,683,1.658,684,1.658,685,3.355,686,2.672,687,1.658,688,1.658,689,1.658,690,1.658,691,1.658,692,1.658,693,1.658,694,1.658,695,1.658,696,1.658,697,1.658,698,1.658,699,1.658,700,4.74,701,4.217,702,1.658,703,2.672,704,1.658,705,1.658,706,2.672,707,1.658,708,1.658,709,3.355,710,2.672,711,1.658,712,1.658,713,1.658,714,1.658,715,2.672,716,1.658,717,1.658,718,1.658,719,1.658,720,1.658,721,1.658,722,1.658,723,1.658,724,1.658,725,1.658,726,1.658,727,1.658,728,1.658,729,2.672,730,1.658,731,1.658,732,1.658,733,1.658,734,1.658,735,1.658,736,1.658,737,1.658,738,1.658,739,1.658,740,1.658,741,1.658,742,2.672,743,1.658,744,1.658,745,1.658,746,1.658,747,1.658,748,1.658,749,1.658,750,2.672,751,1.658,752,1.658,753,3.355,754,1.658,755,1.658,756,1.658,757,1.387,758,1.658,759,1.658,760,1.658,761,1.658,762,1.658]],["title/coverage.html",[763,3.675]],["body/coverage.html",[0,1.093,1,0.604,5,0.188,6,1.708,17,0.3,18,0.031,30,0.015,31,0.015,32,1.669,33,1.488,35,1.708,36,1.708,54,0.473,71,0.61,75,0.373,80,1.323,93,1.708,105,0.709,107,0.989,114,0.878,115,0.604,119,1.032,120,1.43,121,2.386,122,2.242,126,1.458,149,1.192,151,1.192,178,0.655,180,0.709,182,0.655,184,0.655,186,0.709,220,2.722,223,2.722,224,2.294,234,1.323,249,2.722,250,2.294,268,1.323,285,2.722,286,2.294,308,1.323,326,2.797,327,2.797,328,1.708,343,1.488,344,1.488,346,2.294,347,2.294,363,1.488,382,3.022,383,1.708,394,3.145,400,1.488,401,1.488,415,1.708,416,1.488,417,1.708,418,1.708,441,1.708,458,1.708,512,1.488,763,1.708,764,2.042,765,2.042,766,2.799,767,2.799,768,6.474,769,1.708,770,5.497,771,6.474,772,1.708,773,1.708,774,2.633,775,2.633,776,1.708,777,2.633,778,1.708,779,1.708,780,3.61,781,1.708,782,1.708,783,1.708,784,1.708,785,3.61,786,1.708,787,1.708,788,1.708,789,1.708,790,3.61,791,1.708,792,1.708,793,1.708,794,1.708,795,3.148,796,2.042,797,2.042,798,3.148,799,3.842,800,2.042,801,3.213,802,4.12,803,4.12,804,3.842,805,4.317,806,3.213,807,3.213,808,3.213,809,3.213,810,1.708,811,3.213,812,2.042,813,2.042]],["title/dependencies.html",[192,1.586,635,2.263]],["body/dependencies.html",[18,0.032,30,0.023,31,0.023,59,0.556,67,2.452,117,1.833,123,1.833,145,1.837,146,1.425,192,1.546,206,1.833,209,2.452,210,2.452,212,2.209,357,3.165,366,2.757,398,4.081,399,3.555,814,3.784,815,6.232,816,3.784,817,3.784,818,3.784,819,3.784,820,3.784,821,3.784,822,3.784,823,5.4,824,4.879,825,3.784,826,3.784,827,3.784,828,3.784,829,3.784,830,3.784,831,3.784,832,3.784,833,5.4,834,3.784,835,3.784,836,3.165,837,3.784,838,3.784,839,3.784,840,3.784,841,3.784,842,3.784,843,3.784,844,3.784,845,3.784,846,3.784,847,3.784,848,3.784,849,3.784,850,4.879,851,4.879,852,3.784,853,3.784,854,3.784,855,3.784,856,3.784,857,3.784,858,3.784,859,3.784,860,3.784,861,3.784]],["title/index.html",[9,0.397,443,1.971,444,1.971]],["body/index.html",[4,0.42,18,0.029,30,0.026,31,0.026,60,2.04,167,2.953,365,2.953,446,4.582,447,4.913,481,3.811,503,3.811,547,3.811,653,4.582,667,3.811,757,4.913,862,5.478,863,4.557,864,4.557,865,4.557,866,4.557,867,3.811,868,4.557,869,3.32,870,4.557,871,4.557,872,5.478,873,4.557,874,5.478,875,5.478,876,4.557]],["title/license.html",[443,1.971,444,1.971,573,1.971]],["body/license.html",[18,0.024,30,0.024,31,0.024,60,1.374,200,1.617,299,2.564,365,2.564,512,2.883,546,3.309,565,4.199,570,3.309,571,3.309,573,2.883,617,4.199,650,4.199,656,3.309,836,3.309,867,3.309,869,4.624,877,5.515,878,3.957,879,3.957,880,5.02,881,3.957,882,3.957,883,3.957,884,3.957,885,3.957,886,3.957,887,5.02,888,3.957,889,3.957,890,3.957,891,5.515,892,3.957,893,3.957,894,3.957,895,3.957,896,3.957,897,3.957,898,3.957,899,3.957,900,3.957,901,5.02,902,3.957,903,3.957,904,3.957,905,3.957,906,3.957,907,3.957,908,5.02,909,3.957,910,3.957,911,3.957,912,3.957,913,3.957,914,3.957,915,3.957,916,3.957,917,3.957,918,3.957,919,3.957,920,3.957,921,3.957,922,3.957,923,3.957,924,3.957,925,3.957,926,3.957,927,3.957,928,3.957,929,3.957,930,3.957,931,3.957,932,3.957,933,3.957,934,3.957]],["title/modules.html",[191,1.795]],["body/modules.html",[18,0.026,30,0.026,31,0.026,190,3.042,191,1.918,197,2.74,243,3.042,279,3.042,320,3.042,337,3.042,399,4.644,488,5.331,935,6.374,936,6.374]],["title/overview.html",[225,2.847]],["body/overview.html",[2,1.622,18,0.031,30,0.023,31,0.023,34,2.66,115,1.805,116,1.768,178,1.955,180,2.118,182,1.955,184,1.955,186,2.118,190,3.952,191,1.492,192,1.948,193,3.054,194,3.054,195,3.054,196,3.054,197,3.495,198,2.309,199,1.768,200,1.492,225,2.366,243,3.783,244,3.054,245,3.054,246,3.054,277,2.66,279,3.783,280,3.054,281,3.054,282,3.054,320,3.783,321,3.054,322,3.054,323,3.054,337,3.783,338,3.054,339,3.054,340,3.054,343,2.66,409,3.054,410,3.054,411,3.054,937,4.768,938,3.987,939,3.054,940,3.652]],["title/miscellaneous/typealiases.html",[941,1.753,942,3.882]],["body/miscellaneous/typealiases.html",[9,0.691,17,0.691,18,0.027,30,0.027,31,0.027,68,3.62,71,0.494,119,0.763,120,1.091,121,2.28,122,3.26,143,3.051,148,3.62,766,3.43,767,4.488,941,3.051,943,4.708,944,3.938,945,4.981,946,5.586,947,5.586,948,4.708,949,4.708]],["title/miscellaneous/variables.html",[941,1.753,950,3.246]],["body/miscellaneous/variables.html",[1,0.972,7,2.757,9,0.156,10,0.699,11,2.94,13,1.697,14,2.343,15,2.824,16,1.874,17,0.911,18,0.032,27,2.431,28,2.431,29,2.431,30,0.009,31,0.009,37,0.64,48,1.214,52,2.461,53,1.645,54,0.247,68,0.69,71,0.529,73,0.69,74,0.69,80,2.129,94,2.384,95,0.891,96,2.771,97,2.647,98,3.229,99,2.647,100,2.496,101,0.891,102,2.502,103,1.542,104,0.891,105,1.874,107,2.287,108,0.891,109,0.69,110,0.69,114,0.641,115,0.546,119,0.626,120,0.673,121,0.516,125,0.591,126,1.398,172,0.516,178,0.591,180,0.64,182,0.591,184,0.591,186,0.64,220,1.076,223,0.622,249,0.622,254,2.647,255,2.481,285,0.622,296,1.884,297,1.343,299,1.195,300,1.343,301,1.343,326,0.69,327,0.69,346,0.776,347,1.343,356,0.891,363,1.343,364,0.891,365,0.69,366,0.776,378,2.431,382,1.195,385,2.039,386,2.039,400,1.343,401,1.343,402,0.891,451,1.542,548,1.542,598,0.891,766,0.776,767,2.118,769,2.431,770,3.949,772,1.542,773,2.039,774,0.891,775,2.039,776,1.542,777,0.891,778,2.039,779,2.431,780,0.891,781,2.039,782,2.039,783,2.039,784,1.542,785,0.891,786,2.039,787,2.039,788,2.039,789,2.039,790,0.891,791,2.039,792,2.039,793,2.039,794,2.039,801,2.431,802,3.949,803,3.949,806,2.431,807,2.431,808,2.431,809,2.431,810,1.542,811,2.431,869,2.622,938,1.542,939,2.748,941,0.69,944,3.949,945,2.748,950,0.891,951,1.844,952,2.907,953,2.907,954,2.907,955,2.438,956,2.907,957,1.065,958,3.599,959,1.844,960,1.065,961,1.844,962,1.065,963,1.065,964,1.844,965,1.065,966,1.844,967,1.065,968,1.065,969,2.438,970,2.438,971,2.438,972,1.844,973,2.907,974,2.907,975,2.907,976,1.844,977,1.844,978,5.452,979,4.722,980,2.438,981,2.438,982,2.438,983,3.599,984,3.599,985,1.844,986,3.599,987,3.861,988,4.277,989,1.844,990,1.844,991,1.844,992,2.907,993,4.722,994,1.844,995,1.844,996,1.844,997,4.722,998,3.599,999,4.722,1000,3.599,1001,1.844,1002,1.065,1003,1.065,1004,1.065,1005,1.065,1006,1.065,1007,1.065,1008,1.844,1009,1.844,1010,1.844,1011,1.065,1012,1.065,1013,1.065,1014,1.065,1015,1.065]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":939,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.1",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.6.21",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["10.5.4",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":394,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"contributing.html":{},"coverage.html":{}}}],["11/11",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["12.0.0",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["12.2.0",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["13.0.2",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["13.1.3",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["144.png",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.8.4",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":938,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["2021",{"_index":879,"title":{},"body":{"license.html":{}}}],["3",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300px",{"_index":392,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["4/4",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["4542",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e51",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.5.3",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["557dfe0db7ab.glb",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["557dfe0db7ab/ed4aa425",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":937,"title":{},"body":{"overview.html":{}}}],["6.4.95",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":940,"title":{},"body":{"overview.html":{}}}],["7.2.2",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["8.1.1",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["8.2.4",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["9e13",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e8a",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9f2c",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":907,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":131,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["accordingly",{"_index":678,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":928,"title":{},"body":{"license.html":{}}}],["actual",{"_index":661,"title":{},"body":{"contributing.html":{}}}],["actual_component",{"_index":188,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["adapter",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":256,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"contributing.html":{}}}],["addappearance",{"_index":129,"title":{},"body":{"components/AvatarAppearancesComponent.html":{}}}],["addappearance(appearance",{"_index":134,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["addressed",{"_index":688,"title":{},"body":{"contributing.html":{}}}],["addscope",{"_index":258,"title":{},"body":{"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{}}}],["addscope(scope",{"_index":261,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["addscope(skill",{"_index":293,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["advance",{"_index":592,"title":{},"body":{"contributing.html":{}}}],["advisable",{"_index":541,"title":{},"body":{"contributing.html":{}}}],["aframe",{"_index":413,"title":{},"body":{"modules/PreviewAvatarAppearanceModule.html":{}}}],["agree",{"_index":566,"title":{},"body":{"contributing.html":{}}}],["aims",{"_index":721,"title":{},"body":{"contributing.html":{}}}],["aliases",{"_index":943,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alpha.70",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":612,"title":{},"body":{"contributing.html":{}}}],["alternatives",{"_index":745,"title":{},"body":{"contributing.html":{}}}],["and/or",{"_index":899,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":206,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"injectables/SelectedAvatarState.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":209,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarSkillsModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":212,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":398,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":357,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"dependencies.html":{}}}],["animated",{"_index":749,"title":{},"body":{"contributing.html":{}}}],["another",{"_index":257,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["answers",{"_index":543,"title":{},"body":{"contributing.html":{}}}],["app",{"_index":873,"title":{},"body":{"index.html":{}}}],["appearance",{"_index":1,"title":{"interfaces/Appearance.html":{}},"body":{"interfaces/Appearance.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance's",{"_index":19,"title":{},"body":{"interfaces/Appearance.html":{}}}],["appearance(value",{"_index":403,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["appearance.aframe",{"_index":401,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance.component",{"_index":414,"title":{},"body":{"modules/PreviewAvatarAppearanceModule.html":{}}}],["appearance.component.stories.ts",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance.component.ts",{"_index":383,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{}}}],["appearance.component.ts:17",{"_index":391,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["appearance.component.ts:27",{"_index":396,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["appearance.component.ts:29",{"_index":393,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["appearance.component.ts:30",{"_index":389,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["appearance.module",{"_index":221,"title":{},"body":{"modules/AvatarAppearancesModule.html":{}}}],["appearance.module.ts",{"_index":412,"title":{},"body":{"modules/PreviewAvatarAppearanceModule.html":{}}}],["appearance.value.format",{"_index":127,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["appearance/preview",{"_index":220,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearancepreviewcameracontrol",{"_index":148,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"miscellaneous/typealiases.html":{}}}],["appearances",{"_index":94,"title":{},"body":{"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"miscellaneous/variables.html":{}}}],["appearances'},{'name",{"_index":177,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["appearances(value",{"_index":153,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["appearances.component",{"_index":222,"title":{},"body":{"modules/AvatarAppearancesModule.html":{}}}],["appearances.component.stories.ts",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearances.component.ts",{"_index":122,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["appearances.component.ts:100",{"_index":135,"title":{},"body":{"components/AvatarAppearancesComponent.html":{}}}],["appearances.component.ts:83",{"_index":133,"title":{},"body":{"components/AvatarAppearancesComponent.html":{}}}],["appearances.component.ts:92",{"_index":138,"title":{},"body":{"components/AvatarAppearancesComponent.html":{}}}],["appearances.component.ts:96",{"_index":141,"title":{},"body":{"components/AvatarAppearancesComponent.html":{}}}],["appearances.module.ts",{"_index":201,"title":{},"body":{"modules/AvatarAppearancesModule.html":{}}}],["appearances/avatar",{"_index":121,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"interfaces/FormAppearance.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["appearanceschema",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearancesform",{"_index":132,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["appearancesmocks",{"_index":778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appreciation",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["apps",{"_index":871,"title":{},"body":{"index.html":{}}}],["args",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":932,"title":{},"body":{"license.html":{}}}],["arm",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["array",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ask",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["assets",{"_index":301,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"miscellaneous/variables.html":{}}}],["assets/avatar",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/avatars/samples/65989f77",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/avatars/samples/ed4aa425",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":888,"title":{},"body":{"license.html":{}}}],["assume",{"_index":527,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":759,"title":{},"body":{"contributing.html":{}}}],["authored",{"_index":567,"title":{},"body":{"contributing.html":{}}}],["authors",{"_index":922,"title":{},"body":{"license.html":{}}}],["available",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["availableavatarsstate",{"_index":33,"title":{"injectables/AvailableAvatarsState.html":{}},"body":{"injectables/AvailableAvatarsState.html":{},"coverage.html":{}}}],["avatar",{"_index":71,"title":{"interfaces/Avatar.html":{}},"body":{"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"injectables/SelectedAvatarState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["avatar's",{"_index":8,"title":{},"body":{"interfaces/Appearance.html":{},"interfaces/Avatar.html":{}}}],["avatar(value",{"_index":235,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["avatar.id",{"_index":432,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["avatar.name",{"_index":330,"title":{},"body":{"components/AvatarsCarouselComponent.html":{}}}],["avatar.state.ts",{"_index":418,"title":{},"body":{"injectables/SelectedAvatarState.html":{},"coverage.html":{}}}],["avatar.state.ts:20",{"_index":426,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["avatar.state.ts:22",{"_index":427,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["avatar.state.ts:23",{"_index":421,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["avatar.state.ts:50",{"_index":423,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["avatar.state.ts:61",{"_index":424,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["avatarappearancescomponent",{"_index":115,"title":{"components/AvatarAppearancesComponent.html":{}},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["avatarappearancesform",{"_index":151,"title":{"interfaces/AvatarAppearancesForm.html":{}},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"coverage.html":{}}}],["avatarappearancesmodule",{"_index":190,"title":{"modules/AvatarAppearancesModule.html":{}},"body":{"modules/AvatarAppearancesModule.html":{},"modules.html":{},"overview.html":{}}}],["avatarclick",{"_index":332,"title":{},"body":{"components/AvatarsCarouselComponent.html":{}}}],["avatarmock1",{"_index":781,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["avatarmock2",{"_index":782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["avatarmock3",{"_index":783,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["avataroverviewcomponent",{"_index":178,"title":{"components/AvatarOverviewComponent.html":{}},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["avataroverviewinput",{"_index":234,"title":{"interfaces/AvatarOverviewInput.html":{}},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"coverage.html":{}}}],["avataroverviewmodule",{"_index":243,"title":{"modules/AvatarOverviewModule.html":{}},"body":{"modules/AvatarOverviewModule.html":{},"modules.html":{},"overview.html":{}}}],["avatars",{"_index":37,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{},"miscellaneous/variables.html":{}}}],["avatars.collection",{"_index":70,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["avatars.collection.ts",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["avatars.data.ts",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["avatars.state.ts",{"_index":36,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"coverage.html":{}}}],["avatars.state.ts:12",{"_index":56,"title":{},"body":{"injectables/AvailableAvatarsState.html":{}}}],["avatars.state.ts:14",{"_index":46,"title":{},"body":{"injectables/AvailableAvatarsState.html":{}}}],["avatars.state.ts:36",{"_index":49,"title":{},"body":{"injectables/AvailableAvatarsState.html":{}}}],["avatarscarouselcomponent",{"_index":180,"title":{"components/AvatarsCarouselComponent.html":{}},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["avatarscarouselmodule",{"_index":337,"title":{"modules/AvatarsCarouselModule.html":{}},"body":{"modules/AvatarsCarouselModule.html":{},"modules.html":{},"overview.html":{}}}],["avatarscopescomponent",{"_index":182,"title":{"components/AvatarScopesComponent.html":{}},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["avatarscopesinput",{"_index":268,"title":{"classes/AvatarScopesInput.html":{}},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"coverage.html":{}}}],["avatarscopesmodule",{"_index":279,"title":{"modules/AvatarScopesModule.html":{}},"body":{"modules/AvatarScopesModule.html":{},"modules.html":{},"overview.html":{}}}],["avatarskillscomponent",{"_index":184,"title":{"components/AvatarSkillsComponent.html":{}},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["avatarskillsinput",{"_index":308,"title":{"classes/AvatarSkillsInput.html":{}},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"coverage.html":{}}}],["avatarskillsmodule",{"_index":320,"title":{"modules/AvatarSkillsModule.html":{}},"body":{"modules/AvatarSkillsModule.html":{},"modules.html":{},"overview.html":{}}}],["avatarsmocks",{"_index":784,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":761,"title":{},"body":{"contributing.html":{}}}],["before",{"_index":472,"title":{},"body":{"contributing.html":{}}}],["behavior",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["behaviorsubject",{"_index":55,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["behaviorsubject(undefined",{"_index":425,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["bemmodule",{"_index":213,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{}}}],["best",{"_index":529,"title":{},"body":{"contributing.html":{}}}],["beta.35",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":756,"title":{},"body":{"contributing.html":{}}}],["body",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":242,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["browse",{"_index":936,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":399,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["bug",{"_index":575,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":508,"title":{},"body":{"contributing.html":{}}}],["c",{"_index":878,"title":{},"body":{"license.html":{}}}],["c8bf",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calendar",{"_index":297,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"miscellaneous/variables.html":{}}}],["calendars",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["camera",{"_index":22,"title":{},"body":{"interfaces/Appearance.html":{}}}],["can't",{"_index":654,"title":{},"body":{"contributing.html":{}}}],["canactivate",{"_index":349,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["care",{"_index":561,"title":{},"body":{"contributing.html":{}}}],["carefully",{"_index":586,"title":{},"body":{"contributing.html":{}}}],["carousel",{"_index":329,"title":{},"body":{"components/AvatarsCarouselComponent.html":{}}}],["carousel'},{'name",{"_index":181,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["carousel.component",{"_index":342,"title":{},"body":{"modules/AvatarsCarouselModule.html":{}}}],["carousel.component.stories.ts",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["carousel.component.ts",{"_index":328,"title":{},"body":{"components/AvatarsCarouselComponent.html":{},"coverage.html":{}}}],["carousel.component.ts:21",{"_index":333,"title":{},"body":{"components/AvatarsCarouselComponent.html":{}}}],["carousel.component.ts:23",{"_index":335,"title":{},"body":{"components/AvatarsCarouselComponent.html":{}}}],["carousel.module.ts",{"_index":341,"title":{},"body":{"modules/AvatarsCarouselModule.html":{}}}],["carousel/avatars",{"_index":327,"title":{},"body":{"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["central",{"_index":60,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{},"contributing.html":{},"index.html":{},"license.html":{}}}],["centralfactorymanagecalendarsscopemock",{"_index":786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cf",{"_index":125,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"miscellaneous/variables.html":{}}}],["charge",{"_index":884,"title":{},"body":{"license.html":{}}}],["chase",{"_index":581,"title":{},"body":{"contributing.html":{}}}],["check",{"_index":608,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":925,"title":{},"body":{"license.html":{}}}],["clarification",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":75,"title":{"classes/AvatarScopesInput.html":{},"classes/AvatarSkillsInput.html":{}},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"injectables/SelectedAvatarState.html":{},"coverage.html":{}}}],["classes",{"_index":277,"title":{},"body":{"classes/AvatarScopesInput.html":{},"classes/AvatarSkillsInput.html":{},"overview.html":{}}}],["classic",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["clear",{"_index":739,"title":{},"body":{"contributing.html":{}}}],["clsx",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["cluster_avatarappearancesmodule",{"_index":193,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"overview.html":{}}}],["cluster_avatarappearancesmodule_declarations",{"_index":194,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"overview.html":{}}}],["cluster_avatarappearancesmodule_exports",{"_index":196,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"overview.html":{}}}],["cluster_avatarappearancesmodule_imports",{"_index":195,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"overview.html":{}}}],["cluster_avataroverviewmodule",{"_index":244,"title":{},"body":{"modules/AvatarOverviewModule.html":{},"overview.html":{}}}],["cluster_avataroverviewmodule_declarations",{"_index":246,"title":{},"body":{"modules/AvatarOverviewModule.html":{},"overview.html":{}}}],["cluster_avataroverviewmodule_exports",{"_index":245,"title":{},"body":{"modules/AvatarOverviewModule.html":{},"overview.html":{}}}],["cluster_avatarscarouselmodule",{"_index":338,"title":{},"body":{"modules/AvatarsCarouselModule.html":{},"overview.html":{}}}],["cluster_avatarscarouselmodule_declarations",{"_index":340,"title":{},"body":{"modules/AvatarsCarouselModule.html":{},"overview.html":{}}}],["cluster_avatarscarouselmodule_exports",{"_index":339,"title":{},"body":{"modules/AvatarsCarouselModule.html":{},"overview.html":{}}}],["cluster_avatarscopesmodule",{"_index":280,"title":{},"body":{"modules/AvatarScopesModule.html":{},"overview.html":{}}}],["cluster_avatarscopesmodule_declarations",{"_index":282,"title":{},"body":{"modules/AvatarScopesModule.html":{},"overview.html":{}}}],["cluster_avatarscopesmodule_exports",{"_index":281,"title":{},"body":{"modules/AvatarScopesModule.html":{},"overview.html":{}}}],["cluster_avatarskillsmodule",{"_index":321,"title":{},"body":{"modules/AvatarSkillsModule.html":{},"overview.html":{}}}],["cluster_avatarskillsmodule_declarations",{"_index":322,"title":{},"body":{"modules/AvatarSkillsModule.html":{},"overview.html":{}}}],["cluster_avatarskillsmodule_exports",{"_index":323,"title":{},"body":{"modules/AvatarSkillsModule.html":{},"overview.html":{}}}],["cluster_previewavatarappearancemodule",{"_index":409,"title":{},"body":{"modules/PreviewAvatarAppearanceModule.html":{},"overview.html":{}}}],["cluster_previewavatarappearancemodule_declarations",{"_index":410,"title":{},"body":{"modules/PreviewAvatarAppearanceModule.html":{},"overview.html":{}}}],["cluster_previewavatarappearancemodule_exports",{"_index":411,"title":{},"body":{"modules/PreviewAvatarAppearanceModule.html":{},"overview.html":{}}}],["code",{"_index":503,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["codex",{"_index":875,"title":{},"body":{"index.html":{}}}],["collect",{"_index":587,"title":{},"body":{"contributing.html":{}}}],["collected",{"_index":673,"title":{},"body":{"contributing.html":{}}}],["collections/user",{"_index":69,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["com.central",{"_index":81,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["comment",{"_index":716,"title":{},"body":{"contributing.html":{}}}],["commit",{"_index":514,"title":{},"body":{"contributing.html":{}}}],["commonmodule",{"_index":205,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{}}}],["community",{"_index":481,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["compiler",{"_index":632,"title":{},"body":{"contributing.html":{}}}],["complete",{"_index":590,"title":{},"body":{"contributing.html":{}}}],["completely",{"_index":702,"title":{},"body":{"contributing.html":{}}}],["component",{"_index":114,"title":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":176,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["components",{"_index":116,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"overview.html":{}}}],["components/angular/avatar",{"_index":120,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"interfaces/FormAppearance.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["components/angular/avatars",{"_index":326,"title":{},"body":{"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/angular/bem/bem.module",{"_index":215,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{}}}],["components/angular/preview",{"_index":382,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["components/angular/svg",{"_index":217,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{}}}],["components/versions",{"_index":606,"title":{},"body":{"contributing.html":{}}}],["conditions",{"_index":906,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["configuration",{"_index":23,"title":{},"body":{"interfaces/Appearance.html":{},"contributing.html":{}}}],["connection",{"_index":933,"title":{},"body":{"license.html":{}}}],["consider",{"_index":734,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":362,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["constructor(entitymanager",{"_index":43,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["constructor(private",{"_index":76,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["constructor(sanitizer",{"_index":387,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["content",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["contents",{"_index":459,"title":{},"body":{"contributing.html":{}}}],["context",{"_index":550,"title":{},"body":{"contributing.html":{}}}],["contract",{"_index":929,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":452,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":445,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contribution",{"_index":474,"title":{},"body":{"contributing.html":{}}}],["contributions",{"_index":454,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":143,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"miscellaneous/typealiases.html":{}}}],["convince",{"_index":723,"title":{},"body":{"contributing.html":{}}}],["copies",{"_index":901,"title":{},"body":{"license.html":{}}}],["copy",{"_index":887,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":877,"title":{},"body":{"license.html":{}}}],["core",{"_index":863,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":763,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":711,"title":{},"body":{"contributing.html":{}}}],["create",{"_index":296,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["createcalendarskill",{"_index":791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":104,"title":{},"body":{"interfaces/Avatar.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":95,"title":{},"body":{"interfaces/Avatar.html":{},"miscellaneous/variables.html":{}}}],["createeventskill",{"_index":792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["creator",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["critical",{"_index":695,"title":{},"body":{"contributing.html":{}}}],["current",{"_index":744,"title":{},"body":{"contributing.html":{}}}],["d0f39eb76662.glb",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d0f39eb76662/65989f77",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":926,"title":{},"body":{"license.html":{}}}],["data",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":103,"title":{},"body":{"interfaces/Avatar.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":890,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":934,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":202,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{}}}],["default",{"_index":52,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":45,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["demonstrate",{"_index":751,"title":{},"body":{"contributing.html":{}}}],["dependencies",{"_index":192,"title":{"dependencies.html":{}},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":558,"title":{},"body":{"contributing.html":{}}}],["describe",{"_index":588,"title":{},"body":{"contributing.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/Appearance.html":{},"interfaces/Avatar.html":{},"interfaces/Scope.html":{},"interfaces/Skill.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["descriptive",{"_index":740,"title":{},"body":{"contributing.html":{}}}],["detail",{"_index":589,"title":{},"body":{"contributing.html":{}}}],["details",{"_index":463,"title":{},"body":{"contributing.html":{}}}],["determine",{"_index":599,"title":{},"body":{"contributing.html":{}}}],["developers",{"_index":724,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":870,"title":{},"body":{"index.html":{}}}],["different",{"_index":460,"title":{},"body":{"contributing.html":{}}}],["directive",{"_index":174,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["directives",{"_index":187,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["disable",{"_index":164,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["discussed",{"_index":622,"title":{},"body":{"contributing.html":{}}}],["distribute",{"_index":897,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":512,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["docusaurus/core",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["docusaurus/preset",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["dom",{"_index":117,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"dependencies.html":{}}}],["domain",{"_index":255,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/Scope.html":{},"interfaces/Skill.html":{},"miscellaneous/variables.html":{}}}],["domsanitizer",{"_index":388,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["don't",{"_index":484,"title":{},"body":{"contributing.html":{}}}],["dynamic",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":603,"title":{},"body":{"contributing.html":{}}}],["easier",{"_index":476,"title":{},"body":{"contributing.html":{}}}],["easy",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["edit",{"_index":298,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["editing",{"_index":228,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["editions",{"_index":864,"title":{},"body":{"index.html":{}}}],["element",{"_index":173,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["elsewhere",{"_index":645,"title":{},"body":{"contributing.html":{}}}],["email",{"_index":649,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["encouraged",{"_index":455,"title":{},"body":{"contributing.html":{}}}],["endregion",{"_index":309,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["engineer",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enhancement",{"_index":700,"title":{},"body":{"contributing.html":{}}}],["enhancements",{"_index":510,"title":{},"body":{"contributing.html":{}}}],["entity_manager_base_collections_token",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity_manager_initial_data_token",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitymanager",{"_index":44,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["environment",{"_index":605,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":601,"title":{},"body":{"contributing.html":{}}}],["error('repositories",{"_index":88,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["errors",{"_index":652,"title":{},"body":{"contributing.html":{}}}],["eslint",{"_index":163,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["eslint/no",{"_index":168,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["etc",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":299,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":334,"title":{},"body":{"components/AvatarsCarouselComponent.html":{}}}],["everyone",{"_index":518,"title":{},"body":{"contributing.html":{}}}],["existing",{"_index":531,"title":{},"body":{"contributing.html":{}}}],["expect",{"_index":660,"title":{},"body":{"contributing.html":{}}}],["expected",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":479,"title":{},"body":{"contributing.html":{}}}],["experienced",{"_index":610,"title":{},"body":{"contributing.html":{}}}],["explain",{"_index":659,"title":{},"body":{"contributing.html":{}}}],["explicit",{"_index":169,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{}}}],["exports",{"_index":204,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{}}}],["express",{"_index":836,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":150,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["factory",{"_index":365,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["factory's",{"_index":446,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["factory.user",{"_index":82,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["factory/persistence/services/entity",{"_index":61,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["factory/persistence/services/repository",{"_index":63,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["factory/preferences/collections/user",{"_index":359,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["factory/web",{"_index":214,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{}}}],["failureredirectto",{"_index":351,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["faker",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":230,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"guards/IsAvatarSelectedGuard.html":{}}}],["fast",{"_index":595,"title":{},"body":{"contributing.html":{}}}],["feature",{"_index":726,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":703,"title":{},"body":{"contributing.html":{}}}],["feel",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{},"coverage.html":{}}}],["filed",{"_index":677,"title":{},"body":{"contributing.html":{}}}],["files",{"_index":889,"title":{},"body":{"license.html":{}}}],["filled",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["find",{"_index":709,"title":{},"body":{"contributing.html":{}}}],["fine",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["first",{"_index":448,"title":{},"body":{"contributing.html":{}}}],["fitness",{"_index":918,"title":{},"body":{"license.html":{}}}],["fits",{"_index":720,"title":{},"body":{"contributing.html":{}}}],["fix",{"_index":593,"title":{},"body":{"contributing.html":{}}}],["flexlayoutmodule",{"_index":208,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarSkillsModule.html":{}}}],["follow",{"_index":664,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":546,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["forkjoin",{"_index":64,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["form",{"_index":128,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/FormAppearance.html":{}}}],["form.value.name",{"_index":227,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["form.value.welcomemessage",{"_index":226,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["formappearance",{"_index":149,"title":{"interfaces/FormAppearance.html":{}},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"coverage.html":{}}}],["formarray",{"_index":137,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/FormAppearance.html":{}}}],["format",{"_index":11,"title":{},"body":{"interfaces/Appearance.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"miscellaneous/variables.html":{}}}],["formcontrol",{"_index":144,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/FormAppearance.html":{}}}],["formcontrol(appearance.format",{"_index":160,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["formcontrol(appearance.previewcamera",{"_index":170,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["formcontrol(appearance.smallpreviewurl",{"_index":161,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["formcontrol(appearance.src",{"_index":162,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["formcontrol(scope.domain",{"_index":274,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["formcontrol(scope.integration",{"_index":275,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["formcontrol(scope.scope",{"_index":276,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["formcontrol(skill.domain",{"_index":316,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["formcontrol(skill.scope",{"_index":317,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["formcontrol(skill.skill",{"_index":318,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["formgroup",{"_index":136,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/FormAppearance.html":{}}}],["forward",{"_index":483,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":534,"title":{},"body":{"contributing.html":{}}}],["foundation",{"_index":866,"title":{},"body":{"index.html":{}}}],["framedoc",{"_index":384,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["free",{"_index":883,"title":{},"body":{"license.html":{}}}],["friends/colleagues",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["functionality",{"_index":706,"title":{},"body":{"contributing.html":{}}}],["furnished",{"_index":904,"title":{},"body":{"license.html":{}}}],["gen",{"_index":762,"title":{},"body":{"contributing.html":{}}}],["getappearancesform",{"_index":140,"title":{},"body":{"components/AvatarAppearancesComponent.html":{}}}],["getrepository",{"_index":370,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["getscopesform",{"_index":265,"title":{},"body":{"components/AvatarScopesComponent.html":{}}}],["getskillsform",{"_index":305,"title":{},"body":{"components/AvatarSkillsComponent.html":{}}}],["getting",{"_index":443,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["gifs",{"_index":750,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["gltf",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gltfappearancemock",{"_index":779,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["good",{"_index":576,"title":{},"body":{"contributing.html":{}}}],["google",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemanagecalendarsscopemock",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["governed",{"_index":520,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":882,"title":{},"body":{"license.html":{}}}],["guard",{"_index":343,"title":{"guards/IsAvatarSelectedGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":345,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["guide",{"_index":760,"title":{},"body":{"contributing.html":{}}}],["guidelines",{"_index":707,"title":{},"body":{"contributing.html":{}}}],["guides",{"_index":698,"title":{},"body":{"contributing.html":{}}}],["handles",{"_index":465,"title":{},"body":{"contributing.html":{}}}],["happy",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["having",{"_index":615,"title":{},"body":{"contributing.html":{}}}],["height",{"_index":385,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["help",{"_index":462,"title":{},"body":{"contributing.html":{}}}],["hereby",{"_index":881,"title":{},"body":{"license.html":{}}}],["holders",{"_index":923,"title":{},"body":{"license.html":{}}}],["html",{"_index":172,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"miscellaneous/variables.html":{}}}],["icon.module",{"_index":219,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{}}}],["icon/svg",{"_index":218,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{}}}],["id",{"_index":96,"title":{},"body":{"interfaces/Avatar.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{},"miscellaneous/variables.html":{}}}],["idb",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["idea",{"_index":719,"title":{},"body":{"contributing.html":{}}}],["identifier",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":741,"title":{},"body":{"contributing.html":{}}}],["implemented",{"_index":697,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":367,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["implied",{"_index":914,"title":{},"body":{"license.html":{}}}],["import",{"_index":58,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"injectables/SelectedAvatarState.html":{}}}],["imports",{"_index":203,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{}}}],["improvements",{"_index":705,"title":{},"body":{"contributing.html":{}}}],["improving",{"_index":511,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":747,"title":{},"body":{"contributing.html":{}}}],["included",{"_index":909,"title":{},"body":{"license.html":{}}}],["includes",{"_index":667,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["including",{"_index":617,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["incompatible",{"_index":604,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":713,"title":{},"body":{"contributing.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{}}}],["information",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["initialized",{"_index":89,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["inject",{"_index":355,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["inject(on_avatar_selected_guard_failure_redirect_token",{"_index":368,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["injectable",{"_index":32,"title":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{},"coverage.html":{}}}],["injectables",{"_index":34,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{},"overview.html":{}}}],["injectiontoken",{"_index":356,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":142,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"contributing.html":{}}}],["inputs",{"_index":130,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["inspiration",{"_index":758,"title":{},"body":{"contributing.html":{}}}],["instead",{"_index":646,"title":{},"body":{"contributing.html":{}}}],["integration",{"_index":254,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"interfaces/Scope.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Appearance.html":{},"interfaces/Avatar.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/AvatarOverviewInput.html":{},"interfaces/FormAppearance.html":{},"interfaces/Scope.html":{},"interfaces/Skill.html":{}},"body":{"interfaces/Appearance.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"interfaces/FormAppearance.html":{},"interfaces/Scope.html":{},"interfaces/Skill.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Appearance.html":{},"interfaces/Avatar.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/AvatarOverviewInput.html":{},"interfaces/FormAppearance.html":{},"interfaces/Scope.html":{},"interfaces/Skill.html":{},"overview.html":{}}}],["internet",{"_index":542,"title":{},"body":{"contributing.html":{}}}],["interpreter",{"_index":631,"title":{},"body":{"contributing.html":{}}}],["investigate",{"_index":585,"title":{},"body":{"contributing.html":{}}}],["involved",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["isavatarselected",{"_index":380,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["isavatarselectedguard",{"_index":344,"title":{"guards/IsAvatarSelectedGuard.html":{}},"body":{"guards/IsAvatarSelectedGuard.html":{},"coverage.html":{}}}],["isolate",{"_index":669,"title":{},"body":{"contributing.html":{}}}],["issue",{"_index":536,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":532,"title":{},"body":{"contributing.html":{}}}],["it's",{"_index":676,"title":{},"body":{"contributing.html":{}}}],["items",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john2",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["john3",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["js/react",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":727,"title":{},"body":{"contributing.html":{}}}],["key",{"_index":241,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["keycompression",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":913,"title":{},"body":{"license.html":{}}}],["label",{"_index":658,"title":{},"body":{"contributing.html":{}}}],["large.png",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["latest",{"_index":597,"title":{},"body":{"contributing.html":{}}}],["layout",{"_index":210,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarSkillsModule.html":{},"dependencies.html":{}}}],["leave",{"_index":578,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":696,"title":{},"body":{"contributing.html":{}}}],["legal",{"_index":564,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":171,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["liability",{"_index":927,"title":{},"body":{"license.html":{}}}],["liable",{"_index":924,"title":{},"body":{"license.html":{}}}],["library",{"_index":737,"title":{},"body":{"contributing.html":{}}}],["libs/.../appearances.ts",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../avatar",{"_index":944,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../avatars",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../avatars.ts",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../is",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../preview",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../scopes.ts",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../skills.ts",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user",{"_index":945,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/avatars/src/lib/collections/user",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/avatars/src/lib/data/mocks/user",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/avatars/src/lib/data/storybook/appearances.ts",{"_index":777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/avatars/src/lib/data/storybook/avatars.ts",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/avatars/src/lib/data/storybook/scopes.ts",{"_index":785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/avatars/src/lib/data/storybook/skills.ts",{"_index":790,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/avatars/src/lib/guards/is",{"_index":346,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/avatars/src/lib/models/appearance.ts",{"_index":6,"title":{},"body":{"interfaces/Appearance.html":{},"coverage.html":{}}}],["libs/avatars/src/lib/models/avatar.ts",{"_index":93,"title":{},"body":{"interfaces/Avatar.html":{},"coverage.html":{}}}],["libs/avatars/src/lib/models/scope.ts",{"_index":415,"title":{},"body":{"interfaces/Scope.html":{},"coverage.html":{}}}],["libs/avatars/src/lib/models/skill.ts",{"_index":441,"title":{},"body":{"interfaces/Skill.html":{},"coverage.html":{}}}],["libs/avatars/src/lib/states/available",{"_index":35,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"coverage.html":{}}}],["libs/avatars/src/lib/states/selected",{"_index":417,"title":{},"body":{"injectables/SelectedAvatarState.html":{},"coverage.html":{}}}],["libs/avatars/src/lib/web",{"_index":119,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":573,"title":{"license.html":{}},"body":{"contributing.html":{},"license.html":{}}}],["licensed",{"_index":868,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":893,"title":{},"body":{"license.html":{}}}],["limited",{"_index":915,"title":{},"body":{"license.html":{}}}],["line",{"_index":166,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["linux",{"_index":627,"title":{},"body":{"contributing.html":{}}}],["literal",{"_index":20,"title":{},"body":{"interfaces/Appearance.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarSkillsComponent.html":{}}}],["local",{"_index":499,"title":{},"body":{"contributing.html":{}}}],["looking",{"_index":607,"title":{},"body":{"contributing.html":{}}}],["looks",{"_index":482,"title":{},"body":{"contributing.html":{}}}],["lot",{"_index":475,"title":{},"body":{"contributing.html":{}}}],["macos",{"_index":628,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":477,"title":{},"body":{"contributing.html":{}}}],["majority",{"_index":730,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":467,"title":{},"body":{"contributing.html":{}}}],["making",{"_index":473,"title":{},"body":{"contributing.html":{}}}],["manage",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manager",{"_index":62,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{},"contributing.html":{}}}],["many",{"_index":743,"title":{},"body":{"contributing.html":{}}}],["map",{"_index":361,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["map((userpreference",{"_index":375,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["margin",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mark",{"_index":684,"title":{},"body":{"contributing.html":{}}}],["marked",{"_index":691,"title":{},"body":{"contributing.html":{}}}],["matching",{"_index":31,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":712,"title":{},"body":{"contributing.html":{}}}],["mdi/svg",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["mdx",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["meetups",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["member",{"_index":679,"title":{},"body":{"contributing.html":{}}}],["mention",{"_index":498,"title":{},"body":{"contributing.html":{}}}],["merchantability",{"_index":917,"title":{},"body":{"license.html":{}}}],["merge",{"_index":895,"title":{},"body":{"license.html":{}}}],["merits",{"_index":725,"title":{},"body":{"contributing.html":{}}}],["message",{"_index":110,"title":{},"body":{"interfaces/Avatar.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":515,"title":{},"body":{"contributing.html":{}}}],["meta",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"dependencies.html":{}}}],["metaverse",{"_index":447,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["methods",{"_index":40,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["mind",{"_index":728,"title":{},"body":{"contributing.html":{}}}],["minor",{"_index":704,"title":{},"body":{"contributing.html":{}}}],["minority",{"_index":733,"title":{},"body":{"contributing.html":{}}}],["miscellaneous",{"_index":941,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":867,"title":{},"body":{"index.html":{},"license.html":{}}}],["models/appearance",{"_index":147,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["models/avatar",{"_index":72,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarsCarouselComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["models/scope",{"_index":267,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["models/skill",{"_index":307,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["modify",{"_index":894,"title":{},"body":{"license.html":{}}}],["module",{"_index":189,"title":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{}},"body":{}}],["modules",{"_index":191,"title":{"modules.html":{}},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":289,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"contributing.html":{}}}],["much",{"_index":549,"title":{},"body":{"contributing.html":{}}}],["multi",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":48,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{},"miscellaneous/variables.html":{}}}],["necessary",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["needing",{"_index":580,"title":{},"body":{"contributing.html":{}}}],["needs",{"_index":685,"title":{},"body":{"contributing.html":{}}}],["nestjs/common",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["never",{"_index":641,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":54,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":165,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["nft",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nftmanagetokensscopemock",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":145,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/FormAppearance.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":207,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{}}}],["nodejs",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["noninfringement",{"_index":921,"title":{},"body":{"license.html":{}}}],["notice",{"_index":565,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["npm",{"_index":556,"title":{},"body":{"contributing.html":{}}}],["nrwl/angular",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["nvdia",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nx",{"_index":874,"title":{},"body":{"index.html":{}}}],["object",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":354,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["observe",{"_index":90,"title":{},"body":{"injectables/AvailableAvatarsState.html":{}}}],["observeone",{"_index":433,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["obtaining",{"_index":886,"title":{},"body":{"license.html":{}}}],["obvious",{"_index":681,"title":{},"body":{"contributing.html":{}}}],["of(undefined",{"_index":436,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["older",{"_index":639,"title":{},"body":{"contributing.html":{}}}],["omniverse",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on/plugin",{"_index":736,"title":{},"body":{"contributing.html":{}}}],["on_avatar_selected_guard_failure_redirect_token",{"_index":363,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["on_database_created_guard_failure_redirect_token",{"_index":364,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"miscellaneous/variables.html":{}}}],["once",{"_index":675,"title":{},"body":{"contributing.html":{}}}],["one",{"_index":718,"title":{},"body":{"contributing.html":{}}}],["open",{"_index":547,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["opening",{"_index":717,"title":{},"body":{"contributing.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["os",{"_index":625,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":931,"title":{},"body":{"license.html":{}}}],["out",{"_index":200,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"contributing.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":336,"title":{},"body":{"components/AvatarsCarouselComponent.html":{},"contributing.html":{}}}],["outputs",{"_index":331,"title":{},"body":{"components/AvatarsCarouselComponent.html":{}}}],["outside",{"_index":620,"title":{},"body":{"contributing.html":{}}}],["overflow",{"_index":619,"title":{},"body":{"contributing.html":{}}}],["overview",{"_index":225,"title":{"overview.html":{}},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":179,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["overview.component",{"_index":248,"title":{},"body":{"modules/AvatarOverviewModule.html":{}}}],["overview.component.stories.ts",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["overview.component.ts",{"_index":224,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"coverage.html":{}}}],["overview.component.ts:106",{"_index":232,"title":{},"body":{"components/AvatarOverviewComponent.html":{}}}],["overview.component.ts:84",{"_index":229,"title":{},"body":{"components/AvatarOverviewComponent.html":{}}}],["overview.component.ts:97",{"_index":231,"title":{},"body":{"components/AvatarOverviewComponent.html":{}}}],["overview.module.ts",{"_index":247,"title":{},"body":{"modules/AvatarOverviewModule.html":{}}}],["overview/avatar",{"_index":223,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":635,"title":{"dependencies.html":{}},"body":{"contributing.html":{}}}],["packages",{"_index":862,"title":{},"body":{"index.html":{}}}],["padding",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["part",{"_index":752,"title":{},"body":{"contributing.html":{}}}],["participating",{"_index":519,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":919,"title":{},"body":{"license.html":{}}}],["perform",{"_index":714,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":880,"title":{},"body":{"license.html":{}}}],["permit",{"_index":902,"title":{},"body":{"license.html":{}}}],["person",{"_index":885,"title":{},"body":{"license.html":{}}}],["persons",{"_index":903,"title":{},"body":{"license.html":{}}}],["physics",{"_index":111,"title":{},"body":{"interfaces/Avatar.html":{}}}],["pipe",{"_index":78,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["pipe(tap((avatars",{"_index":91,"title":{},"body":{"injectables/AvailableAvatarsState.html":{}}}],["platform",{"_index":553,"title":{},"body":{"contributing.html":{}}}],["please",{"_index":466,"title":{},"body":{"contributing.html":{}}}],["point",{"_index":655,"title":{},"body":{"contributing.html":{}}}],["portal",{"_index":872,"title":{},"body":{"index.html":{}}}],["portions",{"_index":911,"title":{},"body":{"license.html":{}}}],["position",{"_index":27,"title":{},"body":{"interfaces/Appearance.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["possibly",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["potential",{"_index":594,"title":{},"body":{"contributing.html":{}}}],["potentially",{"_index":611,"title":{},"body":{"contributing.html":{}}}],["pouchdb",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["preferences.collection",{"_index":360,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["preview",{"_index":21,"title":{},"body":{"interfaces/Appearance.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{}}}],["previewavatarappearanceaframescene",{"_index":400,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["previewavatarappearanceaframescene(value",{"_index":406,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["previewavatarappearancecomponent",{"_index":186,"title":{"components/PreviewAvatarAppearanceComponent.html":{}},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["previewavatarappearancemodule",{"_index":197,"title":{"modules/PreviewAvatarAppearanceModule.html":{}},"body":{"modules/AvatarAppearancesModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"modules.html":{},"overview.html":{}}}],["previewcamera",{"_index":13,"title":{},"body":{"interfaces/Appearance.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"miscellaneous/variables.html":{}}}],["previous",{"_index":674,"title":{},"body":{"contributing.html":{}}}],["primarykey",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":38,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["problem",{"_index":670,"title":{},"body":{"contributing.html":{}}}],["project",{"_index":464,"title":{},"body":{"contributing.html":{}}}],["project's",{"_index":496,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":755,"title":{},"body":{"contributing.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":865,"title":{},"body":{"index.html":{}}}],["props",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":548,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":571,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["providedin",{"_index":73,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":348,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"contributing.html":{}}}],["publish",{"_index":896,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":920,"title":{},"body":{"license.html":{}}}],["question",{"_index":505,"title":{},"body":{"contributing.html":{}}}],["react",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":211,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{}}}],["read",{"_index":469,"title":{},"body":{"contributing.html":{}}}],["readme",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["readyplayer.me",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["really",{"_index":600,"title":{},"body":{"contributing.html":{}}}],["recommend",{"_index":545,"title":{},"body":{"contributing.html":{}}}],["record",{"_index":754,"title":{},"body":{"contributing.html":{}}}],["recreate",{"_index":665,"title":{},"body":{"contributing.html":{}}}],["reduced",{"_index":671,"title":{},"body":{"contributing.html":{}}}],["refer",{"_index":495,"title":{},"body":{"contributing.html":{}}}],["reflect",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":643,"title":{},"body":{"contributing.html":{}}}],["relevant",{"_index":470,"title":{},"body":{"contributing.html":{}}}],["reliably",{"_index":637,"title":{},"body":{"contributing.html":{}}}],["report",{"_index":523,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["reports",{"_index":668,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":57,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["repository.findone",{"_index":373,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["repro",{"_index":686,"title":{},"body":{"contributing.html":{}}}],["reproduce",{"_index":638,"title":{},"body":{"contributing.html":{}}}],["reproduced",{"_index":690,"title":{},"body":{"contributing.html":{}}}],["reproduction",{"_index":662,"title":{},"body":{"contributing.html":{}}}],["reset",{"_index":199,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"overview.html":{}}}],["restriction",{"_index":892,"title":{},"body":{"license.html":{}}}],["results",{"_index":30,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":157,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["returns",{"_index":50,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["rights",{"_index":570,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["roles",{"_index":112,"title":{},"body":{"interfaces/Avatar.html":{}}}],["root",{"_index":74,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{},"miscellaneous/variables.html":{}}}],["rotation",{"_index":28,"title":{},"body":{"interfaces/Appearance.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":350,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["routines",{"_index":113,"title":{},"body":{"interfaces/Avatar.html":{}}}],["run",{"_index":653,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["running",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["runtime",{"_index":634,"title":{},"body":{"contributing.html":{}}}],["rxcollection",{"_index":949,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["rxdb",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["rxdocument",{"_index":948,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["rxjs",{"_index":67,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{},"dependencies.html":{}}}],["rxjsonschema",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safehtml",{"_index":395,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["same",{"_index":614,"title":{},"body":{"contributing.html":{}}}],["sanitizer",{"_index":390,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["scale",{"_index":29,"title":{},"body":{"interfaces/Appearance.html":{},"miscellaneous/variables.html":{}}}],["scene",{"_index":402,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"miscellaneous/variables.html":{}}}],["scene.ts",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":105,"title":{"interfaces/Scope.html":{}},"body":{"interfaces/Avatar.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/Scope.html":{},"interfaces/Skill.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scope.value.domain",{"_index":253,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["scope.value.integration",{"_index":252,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["scope.value.scope",{"_index":251,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["scopes",{"_index":97,"title":{},"body":{"interfaces/Avatar.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"miscellaneous/variables.html":{}}}],["scopes'},{'name",{"_index":183,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["scopes(value",{"_index":269,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["scopes.component",{"_index":284,"title":{},"body":{"modules/AvatarScopesModule.html":{}}}],["scopes.component.stories.ts",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scopes.component.ts",{"_index":250,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"coverage.html":{}}}],["scopes.component.ts:6",{"_index":278,"title":{},"body":{"classes/AvatarScopesInput.html":{}}}],["scopes.component.ts:62",{"_index":260,"title":{},"body":{"components/AvatarScopesComponent.html":{}}}],["scopes.component.ts:71",{"_index":263,"title":{},"body":{"components/AvatarScopesComponent.html":{}}}],["scopes.component.ts:75",{"_index":266,"title":{},"body":{"components/AvatarScopesComponent.html":{}}}],["scopes.component.ts:79",{"_index":262,"title":{},"body":{"components/AvatarScopesComponent.html":{}}}],["scopes.module.ts",{"_index":283,"title":{},"body":{"modules/AvatarScopesModule.html":{}}}],["scopes/avatar",{"_index":249,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scopesform",{"_index":259,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["scopesmocks",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["screenshots",{"_index":748,"title":{},"body":{"contributing.html":{}}}],["sdk",{"_index":633,"title":{},"body":{"contributing.html":{}}}],["search",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["section",{"_index":471,"title":{},"body":{"contributing.html":{}}}],["security",{"_index":642,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":457,"title":{},"body":{"contributing.html":{}}}],["seems",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["select",{"_index":366,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["select/ng",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["selectavatar",{"_index":420,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["selectavatar(avatar",{"_index":422,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["selected",{"_index":106,"title":{},"body":{"interfaces/Avatar.html":{}}}],["selected.guard.ts",{"_index":347,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected.guard.ts:19",{"_index":352,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["selected.guard.ts:27",{"_index":353,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["selectedappearance",{"_index":98,"title":{},"body":{"interfaces/Avatar.html":{},"miscellaneous/variables.html":{}}}],["selectedavatarid",{"_index":435,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["selectedavatarid.value",{"_index":438,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["selectedavatarstate",{"_index":416,"title":{"injectables/SelectedAvatarState.html":{}},"body":{"injectables/SelectedAvatarState.html":{},"coverage.html":{}}}],["selector",{"_index":124,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["sell",{"_index":900,"title":{},"body":{"license.html":{}}}],["sensitive",{"_index":647,"title":{},"body":{"contributing.html":{}}}],["sent",{"_index":648,"title":{},"body":{"contributing.html":{}}}],["serve",{"_index":757,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["set",{"_index":152,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["setappearance(value",{"_index":397,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["setappearances(value",{"_index":139,"title":{},"body":{"components/AvatarAppearancesComponent.html":{}}}],["setavatar(value",{"_index":233,"title":{},"body":{"components/AvatarOverviewComponent.html":{}}}],["setscopes(value",{"_index":264,"title":{},"body":{"components/AvatarScopesComponent.html":{}}}],["setskills(value",{"_index":304,"title":{},"body":{"components/AvatarSkillsComponent.html":{}}}],["shall",{"_index":908,"title":{},"body":{"license.html":{}}}],["shouldn't",{"_index":577,"title":{},"body":{"contributing.html":{}}}],["show",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["side",{"_index":602,"title":{},"body":{"contributing.html":{}}}],["skill",{"_index":107,"title":{"interfaces/Skill.html":{}},"body":{"interfaces/Avatar.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/Skill.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["skill's",{"_index":442,"title":{},"body":{"interfaces/Skill.html":{}}}],["skill.value.domain",{"_index":288,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["skill.value.skill",{"_index":287,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["skills",{"_index":99,"title":{},"body":{"interfaces/Avatar.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"miscellaneous/variables.html":{}}}],["skills'},{'name",{"_index":185,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["skills(value",{"_index":310,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["skills.component",{"_index":325,"title":{},"body":{"modules/AvatarSkillsModule.html":{}}}],["skills.component.stories.ts",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["skills.component.ts",{"_index":286,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"coverage.html":{}}}],["skills.component.ts:102",{"_index":295,"title":{},"body":{"components/AvatarSkillsComponent.html":{}}}],["skills.component.ts:106",{"_index":306,"title":{},"body":{"components/AvatarSkillsComponent.html":{}}}],["skills.component.ts:110",{"_index":294,"title":{},"body":{"components/AvatarSkillsComponent.html":{}}}],["skills.component.ts:7",{"_index":319,"title":{},"body":{"classes/AvatarSkillsInput.html":{}}}],["skills.component.ts:85",{"_index":292,"title":{},"body":{"components/AvatarSkillsComponent.html":{}}}],["skills.component.ts:94",{"_index":303,"title":{},"body":{"components/AvatarSkillsComponent.html":{}}}],["skills.module.ts",{"_index":324,"title":{},"body":{"modules/AvatarSkillsModule.html":{}}}],["skills/avatar",{"_index":285,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["skillsform",{"_index":291,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["skillsicons",{"_index":290,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["skillsmocks",{"_index":793,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["small",{"_index":24,"title":{},"body":{"interfaces/Appearance.html":{},"contributing.html":{}}}],["smallpreviewurl",{"_index":14,"title":{},"body":{"interfaces/Appearance.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"interfaces/FormAppearance.html":{},"miscellaneous/variables.html":{}}}],["smooth",{"_index":478,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":869,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["solved",{"_index":613,"title":{},"body":{"contributing.html":{}}}],["someone",{"_index":663,"title":{},"body":{"contributing.html":{}}}],["soon",{"_index":562,"title":{},"body":{"contributing.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"modules/AvatarAppearancesModule.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"modules/AvatarOverviewModule.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"modules/AvatarScopesModule.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"modules/AvatarSkillsModule.html":{},"components/AvatarsCarouselComponent.html":{},"modules/AvatarsCarouselModule.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{},"index.html":{}}}],["src",{"_index":15,"title":{},"body":{"interfaces/Appearance.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":618,"title":{},"body":{"contributing.html":{}}}],["stack/forms",{"_index":146,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"interfaces/FormAppearance.html":{},"dependencies.html":{}}}],["star",{"_index":493,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":444,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":742,"title":{},"body":{"contributing.html":{}}}],["steps",{"_index":591,"title":{},"body":{"contributing.html":{}}}],["still",{"_index":537,"title":{},"body":{"contributing.html":{}}}],["store",{"_index":302,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["story",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/Appearance.html":{},"interfaces/Avatar.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"interfaces/Scope.html":{},"interfaces/Skill.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":722,"title":{},"body":{"contributing.html":{}}}],["styleguides",{"_index":513,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":905,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":898,"title":{},"body":{"license.html":{}}}],["submit",{"_index":640,"title":{},"body":{"contributing.html":{}}}],["submitting",{"_index":574,"title":{},"body":{"contributing.html":{}}}],["subscribe",{"_index":86,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["subscribetodatachanges",{"_index":41,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["subset",{"_index":731,"title":{},"body":{"contributing.html":{}}}],["substantial",{"_index":910,"title":{},"body":{"license.html":{}}}],["such",{"_index":694,"title":{},"body":{"contributing.html":{}}}],["suggested",{"_index":715,"title":{},"body":{"contributing.html":{}}}],["suggesting",{"_index":509,"title":{},"body":{"contributing.html":{}}}],["suggestion",{"_index":701,"title":{},"body":{"contributing.html":{}}}],["suggestions",{"_index":710,"title":{},"body":{"contributing.html":{}}}],["suitable",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["support",{"_index":488,"title":{},"body":{"contributing.html":{},"modules.html":{}}}],["sure",{"_index":468,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":935,"title":{},"body":{"modules.html":{}}}],["svgiconmodule",{"_index":216,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{}}}],["switchmap",{"_index":65,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["switchmap((repository",{"_index":372,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["switchmap((selectedavatarid",{"_index":434,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["table",{"_index":458,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":687,"title":{},"body":{"contributing.html":{}}}],["tags",{"_index":693,"title":{},"body":{"contributing.html":{}}}],["take",{"_index":560,"title":{},"body":{"contributing.html":{}}}],["taking",{"_index":450,"title":{},"body":{"contributing.html":{}}}],["talk",{"_index":657,"title":{},"body":{"contributing.html":{}}}],["tap",{"_index":66,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["tap(([useravatarsrepository",{"_index":83,"title":{},"body":{"injectables/AvailableAvatarsState.html":{}}}],["tap(([userpreferencesrepository",{"_index":429,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["tap((isavatarselected",{"_index":379,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["tap((selectedavatar",{"_index":439,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["targeting",{"_index":732,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["tell",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["template",{"_index":126,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["template.bind",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":672,"title":{},"body":{"contributing.html":{}}}],["thanks",{"_index":449,"title":{},"body":{"contributing.html":{}}}],["that's",{"_index":485,"title":{},"body":{"contributing.html":{}}}],["therefore",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["this.addappearance(appearance",{"_index":156,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["this.addscope(appearance",{"_index":271,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["this.addscope(skill",{"_index":313,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["this.appearancesform.clear",{"_index":154,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["this.appearancesform.push",{"_index":159,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["this.avatar$.next(selectedavatar",{"_index":440,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["this.avatars$.next(avatars",{"_index":92,"title":{},"body":{"injectables/AvailableAvatarsState.html":{}}}],["this.entitymanager",{"_index":369,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["this.entitymanager.getrepository",{"_index":79,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["this.entitymanager.initialize",{"_index":77,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["this.form.controls.appearances",{"_index":158,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["this.form.controls.scopes",{"_index":272,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["this.form.controls.skills",{"_index":314,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["this.form.reset",{"_index":236,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["this.framedoc",{"_index":404,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["this.height",{"_index":408,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["this.router.navigate([this.failureredirectto",{"_index":381,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml",{"_index":405,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["this.scopesform.clear",{"_index":270,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["this.scopesform.push",{"_index":273,"title":{},"body":{"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{}}}],["this.skillsform.clear",{"_index":311,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["this.skillsform.push",{"_index":315,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["this.subscribetodatachanges",{"_index":85,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["this.useravatarsrepository",{"_index":84,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["this.useravatarsrepository.findone",{"_index":437,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["this.userpreferencesrepository",{"_index":430,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["this.userpreferencesrepository.upsert",{"_index":431,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["this.width",{"_index":407,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{}}}],["those",{"_index":683,"title":{},"body":{"contributing.html":{}}}],["through",{"_index":699,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":87,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["throwerror",{"_index":428,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["time",{"_index":451,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":100,"title":{},"body":{"interfaces/Avatar.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool",{"_index":753,"title":{},"body":{"contributing.html":{}}}],["tort",{"_index":930,"title":{},"body":{"license.html":{}}}],["trace",{"_index":623,"title":{},"body":{"contributing.html":{}}}],["traceback",{"_index":624,"title":{},"body":{"contributing.html":{}}}],["track",{"_index":651,"title":{},"body":{"contributing.html":{}}}],["tracked",{"_index":738,"title":{},"body":{"contributing.html":{}}}],["tracker",{"_index":616,"title":{},"body":{"contributing.html":{}}}],["trade",{"_index":300,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"miscellaneous/variables.html":{}}}],["tradeassetsskill",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":118,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["true",{"_index":378,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":680,"title":{},"body":{"contributing.html":{}}}],["tslib",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["tweet",{"_index":494,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/Appearance.html":{},"injectables/AvailableAvatarsState.html":{},"interfaces/Avatar.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"guards/IsAvatarSelectedGuard.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"interfaces/Scope.html":{},"injectables/SelectedAvatarState.html":{},"interfaces/Skill.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":942,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":453,"title":{},"body":{"contributing.html":{}}}],["typescript",{"_index":167,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{},"index.html":{}}}],["unacceptable",{"_index":524,"title":{},"body":{"contributing.html":{}}}],["under",{"_index":572,"title":{},"body":{"contributing.html":{}}}],["understand",{"_index":708,"title":{},"body":{"contributing.html":{}}}],["until",{"_index":689,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["updated",{"_index":108,"title":{},"body":{"interfaces/Avatar.html":{},"miscellaneous/variables.html":{}}}],["updatedat",{"_index":101,"title":{},"body":{"interfaces/Avatar.html":{},"miscellaneous/variables.html":{}}}],["uphold",{"_index":522,"title":{},"body":{"contributing.html":{}}}],["upsert",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":25,"title":{},"body":{"interfaces/Appearance.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"interfaces/FormAppearance.html":{}}}],["use",{"_index":650,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["useful",{"_index":729,"title":{},"body":{"contributing.html":{}}}],["user",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_avatars_collection_provider",{"_index":772,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_avatars_mocks_data_provider",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["useravatardoctype",{"_index":68,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useravatardocument",{"_index":946,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["useravatars",{"_index":80,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useravatars.selectedavatar",{"_index":374,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["useravatarscollection",{"_index":947,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["useravatarsrepository",{"_index":39,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"injectables/SelectedAvatarState.html":{}}}],["useravatarsschema",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userpreference",{"_index":376,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["userpreference.value",{"_index":377,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{}}}],["userpreferencedoctype",{"_index":358,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["userpreferences",{"_index":371,"title":{},"body":{"guards/IsAvatarSelectedGuard.html":{},"injectables/SelectedAvatarState.html":{}}}],["userpreferencesrepository",{"_index":419,"title":{},"body":{"injectables/SelectedAvatarState.html":{}}}],["users",{"_index":609,"title":{},"body":{"contributing.html":{}}}],["usevalue",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":596,"title":{},"body":{"contributing.html":{}}}],["usually",{"_index":666,"title":{},"body":{"contributing.html":{}}}],["uuid",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":53,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{},"components/AvatarsCarouselComponent.html":{},"interfaces/FormAppearance.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{},"miscellaneous/variables.html":{}}}],["value.foreach((appearance",{"_index":155,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"interfaces/AvatarAppearancesForm.html":{},"components/AvatarScopesComponent.html":{},"classes/AvatarScopesInput.html":{},"interfaces/FormAppearance.html":{}}}],["value.foreach((skill",{"_index":312,"title":{},"body":{"components/AvatarSkillsComponent.html":{},"classes/AvatarSkillsInput.html":{}}}],["value.name",{"_index":237,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["value.selectedappearance.smallpreviewurl",{"_index":240,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["value.title",{"_index":238,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["value.welcomemessage",{"_index":239,"title":{},"body":{"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{}}}],["valued",{"_index":456,"title":{},"body":{"contributing.html":{}}}],["var",{"_index":175,"title":{},"body":{"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/AvatarsCarouselComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{}}}],["variable",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":950,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":598,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":554,"title":{},"body":{"contributing.html":{}}}],["very",{"_index":491,"title":{},"body":{"contributing.html":{}}}],["void",{"_index":51,"title":{},"body":{"injectables/AvailableAvatarsState.html":{},"components/AvatarAppearancesComponent.html":{},"components/AvatarOverviewComponent.html":{},"components/AvatarScopesComponent.html":{},"components/AvatarSkillsComponent.html":{},"components/PreviewAvatarAppearanceComponent.html":{},"injectables/SelectedAvatarState.html":{}}}],["vulnerabilities",{"_index":644,"title":{},"body":{"contributing.html":{}}}],["want",{"_index":506,"title":{},"body":{"contributing.html":{}}}],["warranties",{"_index":916,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":912,"title":{},"body":{"license.html":{}}}],["way",{"_index":682,"title":{},"body":{"contributing.html":{}}}],["ways",{"_index":461,"title":{},"body":{"contributing.html":{}}}],["website",{"_index":876,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":109,"title":{},"body":{"interfaces/Avatar.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"miscellaneous/variables.html":{}}}],["welcomemessage",{"_index":102,"title":{},"body":{"interfaces/Avatar.html":{},"components/AvatarOverviewComponent.html":{},"interfaces/AvatarOverviewInput.html":{},"miscellaneous/variables.html":{}}}],["well",{"_index":692,"title":{},"body":{"contributing.html":{}}}],["whether",{"_index":656,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["width",{"_index":386,"title":{},"body":{"components/PreviewAvatarAppearanceComponent.html":{},"miscellaneous/variables.html":{}}}],["windows",{"_index":626,"title":{},"body":{"contributing.html":{}}}],["without",{"_index":891,"title":{},"body":{"license.html":{}}}],["work",{"_index":746,"title":{},"body":{"contributing.html":{}}}],["write",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["writing",{"_index":735,"title":{},"body":{"contributing.html":{}}}],["x86",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["you're",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["zone.js",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":198,"title":{},"body":{"modules/AvatarAppearancesModule.html":{},"modules/AvatarOverviewModule.html":{},"modules/AvatarScopesModule.html":{},"modules/AvatarSkillsModule.html":{},"modules/AvatarsCarouselModule.html":{},"modules/PreviewAvatarAppearanceModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Appearance.html":{"url":"interfaces/Appearance.html","title":"interface - Appearance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Appearance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/models/appearance.ts\n        \n\n\n            \n                Description\n            \n            \n                An Avatar's appearance\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            previewCamera\n                                        \n                                \n                                \n                                        \n                                            smallPreviewUrl\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The appearance's format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previewCamera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previewCamera:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The appearance's preview camera configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smallPreviewUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smallPreviewUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The appearance's small preview url\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The appearance's src url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Appearance {\n  /** The appearance's format */\n  format: string;\n  /** The appearance's src url */\n  src: string;\n  /** The appearance's small preview url */\n  smallPreviewUrl: string;\n  /** The appearance's preview camera configuration */\n  previewCamera?: {\n    /** The appearance's preview camera position */\n    position?: string;\n    /** The appearance's preview camera rotation */\n    rotation?: string;\n    /** The appearance's preview camera scale */\n    scale?: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AvailableAvatarsState.html":{"url":"injectables/AvailableAvatarsState.html","title":"injectable - AvailableAvatarsState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AvailableAvatarsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/states/available-avatars.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatars$\n                            \n                            \n                                    Private\n                                    Optional\n                                userAvatarsRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscribeToDataChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityManager: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in libs/avatars/src/lib/states/available-avatars.state.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityManager\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        subscribeToDataChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToDataChanges()\n                \n            \n\n\n            \n                \n                    Defined in libs/avatars/src/lib/states/available-avatars.state.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatars$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/states/available-avatars.state.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userAvatarsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/states/available-avatars.state.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityManager } from '@central-factory/persistence/services/entity-manager';\nimport { Repository } from '@central-factory/persistence/services/repository';\nimport { BehaviorSubject, forkJoin, switchMap, tap } from 'rxjs';\nimport type { UserAvatarDocType } from '../collections/user-avatars.collection';\nimport type { Avatar } from '../models/avatar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AvailableAvatarsState {\n  avatars$ = new BehaviorSubject([]);\n\n  private userAvatarsRepository?: Repository;\n\n  constructor(private entityManager: EntityManager) {\n    this.entityManager.initialize$\n      .pipe(\n        switchMap(() =>\n          forkJoin([\n            this.entityManager.getRepository(\n              'useravatars',\n              'com.central-factory.user-avatars'\n            ),\n          ])\n        ),\n        tap(([userAvatarsRepository]) => {\n          this.userAvatarsRepository = userAvatarsRepository;\n\n          this.subscribeToDataChanges();\n        })\n      )\n      .subscribe();\n  }\n\n  private subscribeToDataChanges() {\n    if (!this.userAvatarsRepository) {\n      throw new Error('Repositories not initialized');\n    }\n\n    this.userAvatarsRepository\n      .observe()\n      .pipe(tap((avatars) => this.avatars$.next(avatars as Avatar[])))\n      .subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Avatar.html":{"url":"interfaces/Avatar.html","title":"interface - Avatar","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Avatar\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/models/avatar.ts\n        \n\n\n            \n                Description\n            \n            \n                An Avatar\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appearances\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            scopes\n                                        \n                                \n                                \n                                        \n                                            selectedAppearance\n                                        \n                                \n                                \n                                        \n                                            skills\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            welcomeMessage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appearances\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appearances:         Appearance[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Appearance[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The avatar's appearances\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The avatar's created at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The avatar's id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The avatar's name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scopes:         Scope[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Scope[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The avatar's scopes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedAppearance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedAppearance:         Appearance\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Appearance\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The avatar's selected appearance\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skills\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skills:         Skill[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Skill[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The avatar's skills\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The avatar's title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The avatar's updated at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        welcomeMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        welcomeMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The avatar's welcome message\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Appearance } from './appearance';\nimport type { Scope } from './scope';\nimport type { Skill } from './skill';\n\n/** An Avatar */\nexport interface Avatar {\n  /** The avatar's id */\n  id: string;\n  /** The avatar's selected appearance */\n  selectedAppearance: Appearance;\n  /** The avatar's welcome message */\n  welcomeMessage: string;\n  /** The avatar's name */\n  name: string;\n  /** The avatar's title */\n  title: string;\n  /** The avatar's appearances */\n  appearances: Appearance[];\n  /** The avatar's physics */\n  // physics: any[];\n  /** The avatar's roles */\n  // roles: any[];\n  /** The avatar's routines */\n  // routines: any[];\n  /** The avatar's scopes */\n  scopes: Scope[];\n  /** The avatar's skills */\n  skills: Skill[];\n  /** The avatar's created at */\n  createdAt?: Date;\n  /** The avatar's updated at */\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvatarAppearancesComponent.html":{"url":"components/AvatarAppearancesComponent.html","title":"component - AvatarAppearancesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvatarAppearancesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-avatar-appearances\n            \n\n\n\n            \n                template\n                \n  Appearances\n\n  \n    \n      \n        \n\n        \n          \n            {{ appearance.value.format }}\n          \n        \n\n        \n          \n            Format:\n            \n          \n\n          \n            Preview Url:\n            \n          \n        \n      \n      \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAppearance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appearances\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appearances\n                                \n                                \n                                    appearancesForm\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appearances\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts:83\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAppearance\n                        \n                    \n                \n            \n            \n                \naddAppearance(appearance: Appearance)\n                \n            \n\n\n            \n                \n                    Defined in libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appearance\n                                    \n                                                Appearance\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    appearances: new FormArray([]),\n  })\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts:92\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appearances\n                    \n                \n\n\n                \n                    \n                        setappearances(value: Appearance[])\n                    \n                \n                            \n                                \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts:83\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Appearance[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        appearancesForm\n                    \n                \n\n                \n                    \n                        getappearancesForm()\n                    \n                \n                            \n                                \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts:96\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Control, FormArray, FormControl, FormGroup } from '@ng-stack/forms';\nimport type { Appearance } from '../../../models/appearance';\n\nexport type AppearancePreviewCameraControl = Control;\n\nexport interface FormAppearance extends Appearance {\n  previewCamera?: AppearancePreviewCameraControl;\n}\n\nexport interface AvatarAppearancesForm {\n  appearances: FormAppearance[];\n}\n\n@Component({\n  selector: 'cf-avatar-appearances',\n  template: `\n    \n      Appearances\n\n      \n        \n          \n            \n\n            \n              \n                {{ appearance.value.format }}\n              \n            \n\n            \n              \n                Format:\n                \n              \n\n              \n                Preview Url:\n                \n              \n            \n          \n          \n            \n          \n        \n      \n    \n  `,\n})\nexport class AvatarAppearancesComponent {\n  @Input() set appearances(value: Appearance[]) {\n    if (value) {\n      this.appearancesForm.clear();\n      value.forEach((appearance) => {\n        this.addAppearance(appearance);\n      });\n    }\n  }\n\n  form = new FormGroup({\n    appearances: new FormArray([]),\n  });\n\n  get appearancesForm() {\n    return this.form.controls.appearances as FormArray;\n  }\n\n  addAppearance(appearance: Appearance) {\n    this.appearancesForm.push(\n      new FormGroup({\n        format: new FormControl(appearance.format),\n        smallPreviewUrl: new FormControl(appearance.smallPreviewUrl),\n        src: new FormControl(appearance.src),\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        previewCamera: new FormControl(appearance.previewCamera as any),\n      })\n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Appearances                                                  {{ appearance.value.format }}                                                Format:                                            Preview Url:                                                              '\n    var COMPONENTS = [{'name': 'AvatarAppearancesComponent', 'selector': 'cf-avatar-appearances'},{'name': 'AvatarOverviewComponent', 'selector': 'cf-avatar-overview'},{'name': 'AvatarsCarouselComponent', 'selector': 'cf-avatars-carousel'},{'name': 'AvatarScopesComponent', 'selector': 'cf-avatar-scopes'},{'name': 'AvatarSkillsComponent', 'selector': 'cf-avatar-skills'},{'name': 'PreviewAvatarAppearanceComponent', 'selector': 'cf-preview-avatar-appearance'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AvatarAppearancesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AvatarAppearancesForm.html":{"url":"interfaces/AvatarAppearancesForm.html","title":"interface - AvatarAppearancesForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AvatarAppearancesForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appearances\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appearances\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appearances:     FormAppearance[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormAppearance[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Control, FormArray, FormControl, FormGroup } from '@ng-stack/forms';\nimport type { Appearance } from '../../../models/appearance';\n\nexport type AppearancePreviewCameraControl = Control;\n\nexport interface FormAppearance extends Appearance {\n  previewCamera?: AppearancePreviewCameraControl;\n}\n\nexport interface AvatarAppearancesForm {\n  appearances: FormAppearance[];\n}\n\n@Component({\n  selector: 'cf-avatar-appearances',\n  template: `\n    \n      Appearances\n\n      \n        \n          \n            \n\n            \n              \n                {{ appearance.value.format }}\n              \n            \n\n            \n              \n                Format:\n                \n              \n\n              \n                Preview Url:\n                \n              \n            \n          \n          \n            \n          \n        \n      \n    \n  `,\n})\nexport class AvatarAppearancesComponent {\n  @Input() set appearances(value: Appearance[]) {\n    if (value) {\n      this.appearancesForm.clear();\n      value.forEach((appearance) => {\n        this.addAppearance(appearance);\n      });\n    }\n  }\n\n  form = new FormGroup({\n    appearances: new FormArray([]),\n  });\n\n  get appearancesForm() {\n    return this.form.controls.appearances as FormArray;\n  }\n\n  addAppearance(appearance: Appearance) {\n    this.appearancesForm.push(\n      new FormGroup({\n        format: new FormControl(appearance.format),\n        smallPreviewUrl: new FormControl(appearance.smallPreviewUrl),\n        src: new FormControl(appearance.src),\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        previewCamera: new FormControl(appearance.previewCamera as any),\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AvatarAppearancesModule.html":{"url":"modules/AvatarAppearancesModule.html","title":"module - AvatarAppearancesModule","body":"\n                   \n\n\n\n\n    Modules\n    AvatarAppearancesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AvatarAppearancesModule\n\n\n\ncluster_AvatarAppearancesModule_declarations\n\n\n\ncluster_AvatarAppearancesModule_imports\n\n\n\ncluster_AvatarAppearancesModule_exports\n\n\n\n\nAvatarAppearancesComponent\n\nAvatarAppearancesComponent\n\n\n\nAvatarAppearancesModule\n\nAvatarAppearancesModule\n\nAvatarAppearancesModule -->\n\nAvatarAppearancesComponent->AvatarAppearancesModule\n\n\n\n\n\nAvatarAppearancesComponent \n\nAvatarAppearancesComponent \n\nAvatarAppearancesComponent  -->\n\nAvatarAppearancesModule->AvatarAppearancesComponent \n\n\n\n\n\nPreviewAvatarAppearanceModule\n\nPreviewAvatarAppearanceModule\n\nAvatarAppearancesModule -->\n\nPreviewAvatarAppearanceModule->AvatarAppearancesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AvatarAppearancesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PreviewAvatarAppearanceModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AvatarAppearancesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BemModule } from '@central-factory/web-components/angular/bem/bem.module';\nimport { SvgIconModule } from '@central-factory/web-components/angular/svg-icon/svg-icon.module';\nimport { PreviewAvatarAppearanceModule } from '../preview-avatar-appearance/preview-avatar-appearance.module';\nimport { AvatarAppearancesComponent } from './avatar-appearances.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    BemModule,\n    SvgIconModule,\n    PreviewAvatarAppearanceModule,\n  ],\n  declarations: [AvatarAppearancesComponent],\n  exports: [AvatarAppearancesComponent],\n})\nexport class AvatarAppearancesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvatarOverviewComponent.html":{"url":"components/AvatarOverviewComponent.html","title":"component - AvatarOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvatarOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-avatar-overview\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        \n      \n\n      \n        \n          \n            \n              Welcome message:\n              \n              \n            \n\n            \n              {{ form.value.welcomeMessage }}\n              \n            \n          \n\n          \n            Name:\n\n            \n              \n              \n            \n\n            {{ form.value.name }}\n              \n            \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editing\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    avatar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        avatar\n                    \n                \n                        \n                            \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.ts:84\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    name: false,\n    title: false,\n    welcomeMessage: false,\n    smallPreviewUrl: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    welcomeMessage: new FormControl(``),\n    name: new FormControl(''),\n    title: new FormControl(''),\n    smallPreviewUrl: new FormControl(''),\n  })\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.ts:106\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        avatar\n                    \n                \n\n\n                \n                    \n                        setavatar(value: Avatar)\n                    \n                \n                            \n                                \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.ts:84\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Avatar\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@ng-stack/forms';\nimport type { Avatar } from '../../../models/avatar';\n\nexport interface AvatarOverviewInput {\n  welcomeMessage: string;\n  name: string;\n  title: string;\n  smallPreviewUrl: string;\n}\n\n@Component({\n  selector: 'cf-avatar-overview',\n  template: `\n    \n      \n        \n          \n            \n          \n\n          \n            \n              \n                \n                  Welcome message:\n                  \n                  \n                \n\n                \n                  {{ form.value.welcomeMessage }}\n                  \n                \n              \n\n              \n                Name:\n\n                \n                  \n                  \n                \n\n                {{ form.value.name }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  `,\n})\nexport class AvatarOverviewComponent {\n  @Input() set avatar(value: Avatar) {\n    if (!value) {\n      return;\n    }\n\n    this.form.reset({\n      name: value.name,\n      title: value.title,\n      welcomeMessage: value.welcomeMessage,\n      smallPreviewUrl: value.selectedAppearance.smallPreviewUrl,\n    });\n  }\n\n  editing: {\n    [key: string]: boolean;\n  } = {\n    name: false,\n    title: false,\n    welcomeMessage: false,\n    smallPreviewUrl: false,\n  };\n\n  form = new FormGroup({\n    welcomeMessage: new FormControl(``),\n    name: new FormControl(''),\n    title: new FormControl(''),\n    smallPreviewUrl: new FormControl(''),\n  });\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            Welcome message:                                                                  {{ form.value.welcomeMessage }}                                                          Name:                                                                {{ form.value.name }}                                                        '\n    var COMPONENTS = [{'name': 'AvatarAppearancesComponent', 'selector': 'cf-avatar-appearances'},{'name': 'AvatarOverviewComponent', 'selector': 'cf-avatar-overview'},{'name': 'AvatarsCarouselComponent', 'selector': 'cf-avatars-carousel'},{'name': 'AvatarScopesComponent', 'selector': 'cf-avatar-scopes'},{'name': 'AvatarSkillsComponent', 'selector': 'cf-avatar-skills'},{'name': 'PreviewAvatarAppearanceComponent', 'selector': 'cf-preview-avatar-appearance'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AvatarOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AvatarOverviewInput.html":{"url":"interfaces/AvatarOverviewInput.html","title":"interface - AvatarOverviewInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AvatarOverviewInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            smallPreviewUrl\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            welcomeMessage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smallPreviewUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smallPreviewUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        welcomeMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        welcomeMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@ng-stack/forms';\nimport type { Avatar } from '../../../models/avatar';\n\nexport interface AvatarOverviewInput {\n  welcomeMessage: string;\n  name: string;\n  title: string;\n  smallPreviewUrl: string;\n}\n\n@Component({\n  selector: 'cf-avatar-overview',\n  template: `\n    \n      \n        \n          \n            \n          \n\n          \n            \n              \n                \n                  Welcome message:\n                  \n                  \n                \n\n                \n                  {{ form.value.welcomeMessage }}\n                  \n                \n              \n\n              \n                Name:\n\n                \n                  \n                  \n                \n\n                {{ form.value.name }}\n                  \n                \n              \n            \n          \n        \n      \n    \n  `,\n})\nexport class AvatarOverviewComponent {\n  @Input() set avatar(value: Avatar) {\n    if (!value) {\n      return;\n    }\n\n    this.form.reset({\n      name: value.name,\n      title: value.title,\n      welcomeMessage: value.welcomeMessage,\n      smallPreviewUrl: value.selectedAppearance.smallPreviewUrl,\n    });\n  }\n\n  editing: {\n    [key: string]: boolean;\n  } = {\n    name: false,\n    title: false,\n    welcomeMessage: false,\n    smallPreviewUrl: false,\n  };\n\n  form = new FormGroup({\n    welcomeMessage: new FormControl(``),\n    name: new FormControl(''),\n    title: new FormControl(''),\n    smallPreviewUrl: new FormControl(''),\n  });\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AvatarOverviewModule.html":{"url":"modules/AvatarOverviewModule.html","title":"module - AvatarOverviewModule","body":"\n                   \n\n\n\n\n    Modules\n    AvatarOverviewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AvatarOverviewModule\n\n\n\ncluster_AvatarOverviewModule_exports\n\n\n\ncluster_AvatarOverviewModule_declarations\n\n\n\n\nAvatarOverviewComponent\n\nAvatarOverviewComponent\n\n\n\nAvatarOverviewModule\n\nAvatarOverviewModule\n\nAvatarOverviewModule -->\n\nAvatarOverviewComponent->AvatarOverviewModule\n\n\n\n\n\nAvatarOverviewComponent \n\nAvatarOverviewComponent \n\nAvatarOverviewComponent  -->\n\nAvatarOverviewModule->AvatarOverviewComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AvatarOverviewComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AvatarOverviewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BemModule } from '@central-factory/web-components/angular/bem/bem.module';\nimport { SvgIconModule } from '@central-factory/web-components/angular/svg-icon/svg-icon.module';\nimport { AvatarOverviewComponent } from './avatar-overview.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    BemModule,\n    SvgIconModule,\n  ],\n  declarations: [AvatarOverviewComponent],\n  exports: [AvatarOverviewComponent],\n})\nexport class AvatarOverviewModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvatarScopesComponent.html":{"url":"components/AvatarScopesComponent.html","title":"component - AvatarScopesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvatarScopesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-avatar-scopes\n            \n\n\n\n            \n                template\n                \n  \n    Scopes\n\n    \n      \n        I can {{ scope.value.scope }}\n        {{ scope.value.integration }} {{ scope.value.domain }}\n      \n\n      \n        \n          Integration:\n          \n        \n\n        \n          Domain:\n          \n        \n\n        \n          Scope:\n          \n        \n      \n    \n\n    \n      \n      Add another scope\n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addScope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scopes\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scopes\n                                \n                                \n                                    scopesForm\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scopes\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts:62\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addScope\n                        \n                    \n                \n            \n            \n                \naddScope(scope: Scope)\n                \n            \n\n\n            \n                \n                    Defined in libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                Scope\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    scopes: new FormArray([]),\n  })\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        scopes\n                    \n                \n\n\n                \n                    \n                        setscopes(value: Scope[])\n                    \n                \n                            \n                                \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts:62\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Scope[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scopesForm\n                    \n                \n\n                \n                    \n                        getscopesForm()\n                    \n                \n                            \n                                \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts:75\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@ng-stack/forms';\nimport type { Scope } from '../../../models/scope';\n\nexport class AvatarScopesInput {\n  scopes!: Scope[];\n}\n\n@Component({\n  selector: 'cf-avatar-scopes',\n  template: `\n    \n      \n        Scopes\n\n        \n          \n            I can {{ scope.value.scope }}\n            {{ scope.value.integration }} {{ scope.value.domain }}\n          \n\n          \n            \n              Integration:\n              \n            \n\n            \n              Domain:\n              \n            \n\n            \n              Scope:\n              \n            \n          \n        \n\n        \n          \n          Add another scope\n        \n      \n    \n  `,\n})\nexport class AvatarScopesComponent {\n  @Input() set scopes(value: Scope[]) {\n    if (value) {\n      this.scopesForm.clear();\n      value.forEach((appearance) => {\n        this.addScope(appearance);\n      });\n    }\n  }\n\n  form = new FormGroup({\n    scopes: new FormArray([]),\n  });\n\n  get scopesForm() {\n    return this.form.controls.scopes as FormArray;\n  }\n\n  addScope(scope: Scope) {\n    this.scopesForm.push(\n      new FormGroup({\n        domain: new FormControl(scope.domain),\n        integration: new FormControl(scope.integration),\n        scope: new FormControl(scope.scope),\n      })\n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Scopes                  I can {{ scope.value.scope }}        {{ scope.value.integration }} {{ scope.value.domain }}                              Integration:                                    Domain:                                    Scope:                                            Add another scope      '\n    var COMPONENTS = [{'name': 'AvatarAppearancesComponent', 'selector': 'cf-avatar-appearances'},{'name': 'AvatarOverviewComponent', 'selector': 'cf-avatar-overview'},{'name': 'AvatarsCarouselComponent', 'selector': 'cf-avatars-carousel'},{'name': 'AvatarScopesComponent', 'selector': 'cf-avatar-scopes'},{'name': 'AvatarSkillsComponent', 'selector': 'cf-avatar-skills'},{'name': 'PreviewAvatarAppearanceComponent', 'selector': 'cf-preview-avatar-appearance'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AvatarScopesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AvatarScopesInput.html":{"url":"classes/AvatarScopesInput.html","title":"class - AvatarScopesInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AvatarScopesInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scopes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        scopes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Scope[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@ng-stack/forms';\nimport type { Scope } from '../../../models/scope';\n\nexport class AvatarScopesInput {\n  scopes!: Scope[];\n}\n\n@Component({\n  selector: 'cf-avatar-scopes',\n  template: `\n    \n      \n        Scopes\n\n        \n          \n            I can {{ scope.value.scope }}\n            {{ scope.value.integration }} {{ scope.value.domain }}\n          \n\n          \n            \n              Integration:\n              \n            \n\n            \n              Domain:\n              \n            \n\n            \n              Scope:\n              \n            \n          \n        \n\n        \n          \n          Add another scope\n        \n      \n    \n  `,\n})\nexport class AvatarScopesComponent {\n  @Input() set scopes(value: Scope[]) {\n    if (value) {\n      this.scopesForm.clear();\n      value.forEach((appearance) => {\n        this.addScope(appearance);\n      });\n    }\n  }\n\n  form = new FormGroup({\n    scopes: new FormArray([]),\n  });\n\n  get scopesForm() {\n    return this.form.controls.scopes as FormArray;\n  }\n\n  addScope(scope: Scope) {\n    this.scopesForm.push(\n      new FormGroup({\n        domain: new FormControl(scope.domain),\n        integration: new FormControl(scope.integration),\n        scope: new FormControl(scope.scope),\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AvatarScopesModule.html":{"url":"modules/AvatarScopesModule.html","title":"module - AvatarScopesModule","body":"\n                   \n\n\n\n\n    Modules\n    AvatarScopesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AvatarScopesModule\n\n\n\ncluster_AvatarScopesModule_exports\n\n\n\ncluster_AvatarScopesModule_declarations\n\n\n\n\nAvatarScopesComponent\n\nAvatarScopesComponent\n\n\n\nAvatarScopesModule\n\nAvatarScopesModule\n\nAvatarScopesModule -->\n\nAvatarScopesComponent->AvatarScopesModule\n\n\n\n\n\nAvatarScopesComponent \n\nAvatarScopesComponent \n\nAvatarScopesComponent  -->\n\nAvatarScopesModule->AvatarScopesComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AvatarScopesComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AvatarScopesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BemModule } from '@central-factory/web-components/angular/bem/bem.module';\nimport { SvgIconModule } from '@central-factory/web-components/angular/svg-icon/svg-icon.module';\nimport { AvatarScopesComponent } from './avatar-scopes.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, BemModule, SvgIconModule],\n  declarations: [AvatarScopesComponent],\n  exports: [AvatarScopesComponent],\n})\nexport class AvatarScopesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvatarSkillsComponent.html":{"url":"components/AvatarSkillsComponent.html","title":"component - AvatarSkillsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvatarSkillsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-avatar-skills\n            \n\n\n\n            \n                template\n                \n  \n    Skills\n\n    \n      \n        \n          \n          {{ skill.value.skill }} {{ skill.value.domain }}\n        \n\n        \n          \n            Domain:\n            \n          \n\n          \n            Scope:\n            \n          \n\n          \n            Skill:\n            \n          \n        \n      \n    \n  \n\n  \n    \n    Add more skills\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                skillsIcons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addScope\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skills\n                                \n                                \n                                    skillsForm\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        skills\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts:85\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addScope\n                        \n                    \n                \n            \n            \n                \naddScope(skill: Skill)\n                \n            \n\n\n            \n                \n                    Defined in libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skill\n                                    \n                                                Skill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    skills: new FormArray([]),\n  })\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skillsIcons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    'create-calendar': 'calendar-edit',\n    'create-event': 'calendar',\n    'trade-assets': 'store',\n  }\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts:94\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skills\n                    \n                \n\n\n                \n                    \n                        setskills(value: Skill[])\n                    \n                \n                            \n                                \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts:85\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Skill[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        skillsForm\n                    \n                \n\n                \n                    \n                        getskillsForm()\n                    \n                \n                            \n                                \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts:106\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@ng-stack/forms';\nimport type { Skill } from '../../../models/skill';\n\nexport class AvatarSkillsInput {\n  //#endregion\n  skills!: Skill[];\n}\n\n@Component({\n  selector: 'cf-avatar-skills',\n  template: `\n    \n      \n        Skills\n\n        \n          \n            \n              \n              {{ skill.value.skill }} {{ skill.value.domain }}\n            \n\n            \n              \n                Domain:\n                \n              \n\n              \n                Scope:\n                \n              \n\n              \n                Skill:\n                \n              \n            \n          \n        \n      \n\n      \n        \n        Add more skills\n      \n    \n  `,\n})\nexport class AvatarSkillsComponent {\n  @Input() set skills(value: Skill[]) {\n    if (value) {\n      this.skillsForm.clear();\n      value.forEach((skill) => {\n        this.addScope(skill);\n      });\n    }\n  }\n\n  skillsIcons: {\n    [key: string]: string;\n  } = {\n    'create-calendar': 'calendar-edit',\n    'create-event': 'calendar',\n    'trade-assets': 'store',\n  };\n\n  form = new FormGroup({\n    skills: new FormArray([]),\n  });\n\n  get skillsForm() {\n    return this.form.controls.skills as FormArray;\n  }\n\n  addScope(skill: Skill) {\n    this.skillsForm.push(\n      new FormGroup({\n        domain: new FormControl(skill.domain),\n        scope: new FormControl(skill.scope),\n        skill: new FormControl(skill.skill),\n      })\n    );\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Skills                                      {{ skill.value.skill }} {{ skill.value.domain }}                                      Domain:                                            Scope:                                            Skill:                                                    Add more skills  '\n    var COMPONENTS = [{'name': 'AvatarAppearancesComponent', 'selector': 'cf-avatar-appearances'},{'name': 'AvatarOverviewComponent', 'selector': 'cf-avatar-overview'},{'name': 'AvatarsCarouselComponent', 'selector': 'cf-avatars-carousel'},{'name': 'AvatarScopesComponent', 'selector': 'cf-avatar-scopes'},{'name': 'AvatarSkillsComponent', 'selector': 'cf-avatar-skills'},{'name': 'PreviewAvatarAppearanceComponent', 'selector': 'cf-preview-avatar-appearance'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AvatarSkillsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AvatarSkillsInput.html":{"url":"classes/AvatarSkillsInput.html","title":"class - AvatarSkillsInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AvatarSkillsInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@ng-stack/forms';\nimport type { Skill } from '../../../models/skill';\n\nexport class AvatarSkillsInput {\n  //#endregion\n  skills!: Skill[];\n}\n\n@Component({\n  selector: 'cf-avatar-skills',\n  template: `\n    \n      \n        Skills\n\n        \n          \n            \n              \n              {{ skill.value.skill }} {{ skill.value.domain }}\n            \n\n            \n              \n                Domain:\n                \n              \n\n              \n                Scope:\n                \n              \n\n              \n                Skill:\n                \n              \n            \n          \n        \n      \n\n      \n        \n        Add more skills\n      \n    \n  `,\n})\nexport class AvatarSkillsComponent {\n  @Input() set skills(value: Skill[]) {\n    if (value) {\n      this.skillsForm.clear();\n      value.forEach((skill) => {\n        this.addScope(skill);\n      });\n    }\n  }\n\n  skillsIcons: {\n    [key: string]: string;\n  } = {\n    'create-calendar': 'calendar-edit',\n    'create-event': 'calendar',\n    'trade-assets': 'store',\n  };\n\n  form = new FormGroup({\n    skills: new FormArray([]),\n  });\n\n  get skillsForm() {\n    return this.form.controls.skills as FormArray;\n  }\n\n  addScope(skill: Skill) {\n    this.skillsForm.push(\n      new FormGroup({\n        domain: new FormControl(skill.domain),\n        scope: new FormControl(skill.scope),\n        skill: new FormControl(skill.skill),\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AvatarSkillsModule.html":{"url":"modules/AvatarSkillsModule.html","title":"module - AvatarSkillsModule","body":"\n                   \n\n\n\n\n    Modules\n    AvatarSkillsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AvatarSkillsModule\n\n\n\ncluster_AvatarSkillsModule_declarations\n\n\n\ncluster_AvatarSkillsModule_exports\n\n\n\n\nAvatarSkillsComponent\n\nAvatarSkillsComponent\n\n\n\nAvatarSkillsModule\n\nAvatarSkillsModule\n\nAvatarSkillsModule -->\n\nAvatarSkillsComponent->AvatarSkillsModule\n\n\n\n\n\nAvatarSkillsComponent \n\nAvatarSkillsComponent \n\nAvatarSkillsComponent  -->\n\nAvatarSkillsModule->AvatarSkillsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AvatarSkillsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AvatarSkillsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BemModule } from '@central-factory/web-components/angular/bem/bem.module';\nimport { SvgIconModule } from '@central-factory/web-components/angular/svg-icon/svg-icon.module';\nimport { AvatarSkillsComponent } from './avatar-skills.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    BemModule,\n    FlexLayoutModule,\n    SvgIconModule,\n  ],\n  declarations: [AvatarSkillsComponent],\n  exports: [AvatarSkillsComponent],\n})\nexport class AvatarSkillsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvatarsCarouselComponent.html":{"url":"components/AvatarsCarouselComponent.html","title":"component - AvatarsCarouselComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvatarsCarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/avatars/src/lib/web-components/angular/avatars-carousel/avatars-carousel.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-avatars-carousel\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n      {{ avatar.name }}\n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                avatars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                avatarClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        avatars\n                    \n                \n                \n                    \n                        Type :         Avatar[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatars-carousel/avatars-carousel.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        avatarClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/avatars/src/lib/web-components/angular/avatars-carousel/avatars-carousel.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport type { Avatar } from '../../../models/avatar';\n\n@Component({\n  selector: 'cf-avatars-carousel',\n  template: `\n    \n      \n        \n          \n          {{ avatar.name }}\n        \n      \n    \n  `,\n})\nexport class AvatarsCarouselComponent {\n  @Input() avatars: Avatar[] = [];\n\n  @Output() avatarClick = new EventEmitter();\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ avatar.name }}      '\n    var COMPONENTS = [{'name': 'AvatarAppearancesComponent', 'selector': 'cf-avatar-appearances'},{'name': 'AvatarOverviewComponent', 'selector': 'cf-avatar-overview'},{'name': 'AvatarsCarouselComponent', 'selector': 'cf-avatars-carousel'},{'name': 'AvatarScopesComponent', 'selector': 'cf-avatar-scopes'},{'name': 'AvatarSkillsComponent', 'selector': 'cf-avatar-skills'},{'name': 'PreviewAvatarAppearanceComponent', 'selector': 'cf-preview-avatar-appearance'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AvatarsCarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AvatarsCarouselModule.html":{"url":"modules/AvatarsCarouselModule.html","title":"module - AvatarsCarouselModule","body":"\n                   \n\n\n\n\n    Modules\n    AvatarsCarouselModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AvatarsCarouselModule\n\n\n\ncluster_AvatarsCarouselModule_exports\n\n\n\ncluster_AvatarsCarouselModule_declarations\n\n\n\n\nAvatarsCarouselComponent\n\nAvatarsCarouselComponent\n\n\n\nAvatarsCarouselModule\n\nAvatarsCarouselModule\n\nAvatarsCarouselModule -->\n\nAvatarsCarouselComponent->AvatarsCarouselModule\n\n\n\n\n\nAvatarsCarouselComponent \n\nAvatarsCarouselComponent \n\nAvatarsCarouselComponent  -->\n\nAvatarsCarouselModule->AvatarsCarouselComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatars-carousel/avatars-carousel.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AvatarsCarouselComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AvatarsCarouselComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BemModule } from '@central-factory/web-components/angular/bem/bem.module';\nimport { AvatarsCarouselComponent } from './avatars-carousel.component';\n\n@NgModule({\n  declarations: [AvatarsCarouselComponent],\n  imports: [CommonModule, BemModule],\n  exports: [AvatarsCarouselComponent],\n})\nexport class AvatarsCarouselModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormAppearance.html":{"url":"interfaces/FormAppearance.html","title":"interface - FormAppearance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormAppearance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Appearance\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            previewCamera\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        previewCamera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previewCamera:         AppearancePreviewCameraControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AppearancePreviewCameraControl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Control, FormArray, FormControl, FormGroup } from '@ng-stack/forms';\nimport type { Appearance } from '../../../models/appearance';\n\nexport type AppearancePreviewCameraControl = Control;\n\nexport interface FormAppearance extends Appearance {\n  previewCamera?: AppearancePreviewCameraControl;\n}\n\nexport interface AvatarAppearancesForm {\n  appearances: FormAppearance[];\n}\n\n@Component({\n  selector: 'cf-avatar-appearances',\n  template: `\n    \n      Appearances\n\n      \n        \n          \n            \n\n            \n              \n                {{ appearance.value.format }}\n              \n            \n\n            \n              \n                Format:\n                \n              \n\n              \n                Preview Url:\n                \n              \n            \n          \n          \n            \n          \n        \n      \n    \n  `,\n})\nexport class AvatarAppearancesComponent {\n  @Input() set appearances(value: Appearance[]) {\n    if (value) {\n      this.appearancesForm.clear();\n      value.forEach((appearance) => {\n        this.addAppearance(appearance);\n      });\n    }\n  }\n\n  form = new FormGroup({\n    appearances: new FormArray([]),\n  });\n\n  get appearancesForm() {\n    return this.form.controls.appearances as FormArray;\n  }\n\n  addAppearance(appearance: Appearance) {\n    this.appearancesForm.push(\n      new FormGroup({\n        format: new FormControl(appearance.format),\n        smallPreviewUrl: new FormControl(appearance.smallPreviewUrl),\n        src: new FormControl(appearance.src),\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        previewCamera: new FormControl(appearance.previewCamera as any),\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsAvatarSelectedGuard.html":{"url":"guards/IsAvatarSelectedGuard.html","title":"guard - IsAvatarSelectedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAvatarSelectedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/avatars/src/lib/guards/is-avatar-selected.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(entityManager: EntityManager, router: Router, failureRedirectTo: string)\n                    \n                \n                        \n                            \n                                Defined in libs/avatars/src/lib/guards/is-avatar-selected.guard.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityManager\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        failureRedirectTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate()\n                \n            \n\n\n            \n                \n                    Defined in libs/avatars/src/lib/guards/is-avatar-selected.guard.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { EntityManager } from '@central-factory/persistence/services/entity-manager';\nimport type { UserPreferenceDocType } from '@central-factory/preferences/collections/user-preferences.collection';\nimport { map, Observable, switchMap, tap } from 'rxjs';\n\nexport const ON_AVATAR_SELECTED_GUARD_FAILURE_REDIRECT_TOKEN =\n  new InjectionToken(\n    'ON_DATABASE_CREATED_GUARD_FAILURE_REDIRECT_TOKEN',\n    {\n      providedIn: 'root',\n      factory: () => '/select-avatar',\n    }\n  );\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsAvatarSelectedGuard implements CanActivate {\n  constructor(\n    private entityManager: EntityManager,\n    private router: Router,\n    @Inject(ON_AVATAR_SELECTED_GUARD_FAILURE_REDIRECT_TOKEN)\n    private failureRedirectTo: string\n  ) {}\n\n  public canActivate(): Observable {\n    return this.entityManager\n      .getRepository(\n        'userpreferences',\n        'com.central-factory.user-avatars'\n      )\n      .pipe(\n        switchMap((repository) =>\n          repository.findOne({\n            selector: {\n              id: 'userAvatars.selectedAvatar',\n            },\n          })\n        ),\n        map((userPreference) =>\n          userPreference && userPreference.value ? true : false\n        ),\n        tap((isAvatarSelected) => {\n          if (!isAvatarSelected) {\n            this.router.navigate([this.failureRedirectTo]);\n          }\n        })\n      );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PreviewAvatarAppearanceComponent.html":{"url":"components/PreviewAvatarAppearanceComponent.html","title":"component - PreviewAvatarAppearanceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PreviewAvatarAppearanceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-preview-avatar-appearance\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                frameDoc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appearance\n                            \n                            \n                                height\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appearance\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appearance\n                    \n                \n                        \n                            \n                                    Defined in libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '300px'\n                    \n                \n                        \n                            \n                                    Defined in libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100%'\n                    \n                \n                        \n                            \n                                    Defined in libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        frameDoc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SafeHtml\n\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appearance\n                    \n                \n\n\n                \n                    \n                        setappearance(value: Appearance)\n                    \n                \n                            \n                                \n                                    Defined in libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Appearance\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport type { Appearance } from '../../../models/appearance';\nimport { previewAvatarAppearanceAframeScene } from './preview-avatar-appearance.aframe-scene';\n\n@Component({\n  selector: 'cf-preview-avatar-appearance',\n  template: `\n    \n  `,\n})\nexport class PreviewAvatarAppearanceComponent {\n  @Input() set appearance(value: Appearance) {\n    if (!value) {\n      return;\n    }\n\n    this.frameDoc = this.sanitizer.bypassSecurityTrustHtml(\n      previewAvatarAppearanceAframeScene(value, this.width, this.height)\n    );\n  }\n\n  frameDoc!: SafeHtml;\n\n  @Input() height = '300px';\n  @Input() width = '100%';\n\n  constructor(private sanitizer: DomSanitizer) {}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AvatarAppearancesComponent', 'selector': 'cf-avatar-appearances'},{'name': 'AvatarOverviewComponent', 'selector': 'cf-avatar-overview'},{'name': 'AvatarsCarouselComponent', 'selector': 'cf-avatars-carousel'},{'name': 'AvatarScopesComponent', 'selector': 'cf-avatar-scopes'},{'name': 'AvatarSkillsComponent', 'selector': 'cf-avatar-skills'},{'name': 'PreviewAvatarAppearanceComponent', 'selector': 'cf-preview-avatar-appearance'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PreviewAvatarAppearanceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PreviewAvatarAppearanceModule.html":{"url":"modules/PreviewAvatarAppearanceModule.html","title":"module - PreviewAvatarAppearanceModule","body":"\n                   \n\n\n\n\n    Modules\n    PreviewAvatarAppearanceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PreviewAvatarAppearanceModule\n\n\n\ncluster_PreviewAvatarAppearanceModule_declarations\n\n\n\ncluster_PreviewAvatarAppearanceModule_exports\n\n\n\n\nPreviewAvatarAppearanceComponent\n\nPreviewAvatarAppearanceComponent\n\n\n\nPreviewAvatarAppearanceModule\n\nPreviewAvatarAppearanceModule\n\nPreviewAvatarAppearanceModule -->\n\nPreviewAvatarAppearanceComponent->PreviewAvatarAppearanceModule\n\n\n\n\n\nPreviewAvatarAppearanceComponent \n\nPreviewAvatarAppearanceComponent \n\nPreviewAvatarAppearanceComponent  -->\n\nPreviewAvatarAppearanceModule->PreviewAvatarAppearanceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PreviewAvatarAppearanceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PreviewAvatarAppearanceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// import 'aframe';\nimport { PreviewAvatarAppearanceComponent } from './preview-avatar-appearance.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PreviewAvatarAppearanceComponent],\n  exports: [PreviewAvatarAppearanceComponent],\n})\nexport class PreviewAvatarAppearanceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scope.html":{"url":"interfaces/Scope.html","title":"interface - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/models/scope.ts\n        \n\n\n            \n                Description\n            \n            \n                An Scope\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            domain\n                                        \n                                \n                                \n                                        \n                                            integration\n                                        \n                                \n                                \n                                        \n                                            scope\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The domain for this scope\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        integration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The integration for this scope\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name for this scope\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Scope {\n  /** The integration for this scope */\n  integration: string;\n  /** The domain for this scope */\n  domain: string;\n  /** The name for this scope */\n  scope: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SelectedAvatarState.html":{"url":"injectables/SelectedAvatarState.html","title":"injectable - SelectedAvatarState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SelectedAvatarState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/states/selected-avatar.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar$\n                            \n                            \n                                    Private\n                                    Optional\n                                userAvatarsRepository\n                            \n                            \n                                    Private\n                                    Optional\n                                userPreferencesRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectAvatar\n                            \n                            \n                                    Private\n                                subscribeToDataChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entityManager: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in libs/avatars/src/lib/states/selected-avatar.state.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entityManager\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        selectAvatar\n                        \n                    \n                \n            \n            \n                \nselectAvatar(avatar: Avatar)\n                \n            \n\n\n            \n                \n                    Defined in libs/avatars/src/lib/states/selected-avatar.state.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    avatar\n                                    \n                                                Avatar\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        subscribeToDataChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToDataChanges()\n                \n            \n\n\n            \n                \n                    Defined in libs/avatars/src/lib/states/selected-avatar.state.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/states/selected-avatar.state.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userAvatarsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/states/selected-avatar.state.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userPreferencesRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Repository\n\n                    \n                \n                    \n                        \n                                Defined in libs/avatars/src/lib/states/selected-avatar.state.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { EntityManager } from '@central-factory/persistence/services/entity-manager';\nimport { Repository } from '@central-factory/persistence/services/repository';\nimport type { UserPreferenceDocType } from '@central-factory/preferences/collections/user-preferences.collection';\nimport {\n  BehaviorSubject,\n  forkJoin,\n  of,\n  switchMap,\n  tap,\n  throwError,\n} from 'rxjs';\nimport type { UserAvatarDocType } from '../collections/user-avatars.collection';\nimport type { Avatar } from '../models/avatar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectedAvatarState {\n  avatar$ = new BehaviorSubject(undefined);\n\n  private userPreferencesRepository?: Repository;\n  private userAvatarsRepository?: Repository;\n\n  constructor(private entityManager: EntityManager) {\n    this.entityManager.initialize$\n      .pipe(\n        switchMap(() =>\n          forkJoin([\n            this.entityManager.getRepository(\n              'userpreferences',\n              'com.central-factory.user-avatars'\n            ),\n            this.entityManager.getRepository(\n              'useravatars',\n              'com.central-factory.user-avatars'\n            ),\n          ])\n        ),\n        tap(([userPreferencesRepository, userAvatarsRepository]) => {\n          this.userPreferencesRepository = userPreferencesRepository;\n          this.userAvatarsRepository = userAvatarsRepository;\n\n          this.subscribeToDataChanges();\n        })\n      )\n      .subscribe();\n  }\n\n  selectAvatar(avatar: Avatar) {\n    if (!this.userPreferencesRepository) {\n      return throwError(() => new Error('Repositories not initialized'));\n    }\n\n    return this.userPreferencesRepository.upsert({\n      id: 'userAvatars.selectedAvatar',\n      value: avatar.id,\n    });\n  }\n\n  private subscribeToDataChanges() {\n    if (!this.userAvatarsRepository || !this.userPreferencesRepository) {\n      throw new Error('Repositories not initialized');\n    }\n\n    this.userPreferencesRepository\n      .observeOne({\n        selector: {\n          id: 'userAvatars.selectedAvatar',\n        },\n      })\n      .pipe(\n        switchMap((selectedAvatarId) => {\n          if (!selectedAvatarId || !this.userAvatarsRepository) {\n            return of(undefined);\n          }\n\n          return this.userAvatarsRepository.findOne({\n            selector: {\n              id: selectedAvatarId.value,\n            },\n          });\n        }),\n        tap((selectedAvatar) => this.avatar$.next(selectedAvatar as Avatar))\n      )\n      .subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Skill.html":{"url":"interfaces/Skill.html","title":"interface - Skill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Skill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/avatars/src/lib/models/skill.ts\n        \n\n\n            \n                Description\n            \n            \n                An Skill\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            domain\n                                        \n                                \n                                \n                                        \n                                            scope\n                                        \n                                \n                                \n                                        \n                                            skill\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The skill's domain\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The skill's scope\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skill\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skill:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The skill's name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Skill {\n  /** The skill's domain */\n  domain: string;\n  /** The skill's scope */\n  scope: string;\n  /** The skill's name */\n  skill: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\nContributing to The Central Factory's Metaverse\nFirst off, thanks for taking the time to contribute! ❤️\nAll types of contributions are encouraged and valued. See the Table of Contents for different ways to help and details about how this project handles them. Please make sure to read the relevant section before making your contribution. It will make it a lot easier for us maintainers and smooth out the experience for all involved. The community looks forward to your contributions. 🎉\n\nAnd if you like the project, but just don't have time to contribute, that's fine. There are other easy ways to support the project and show your appreciation, which we would also be very happy about:\n\nStar the project\nTweet about it\nRefer this project in your project's readme\nMention the project at local meetups and tell your friends/colleagues\n\n\n\nTable of Contents\n\nCode of Conduct\nI Have a Question\nI Want To Contribute\nReporting Bugs\nSuggesting Enhancements\nYour First Code Contribution\nImproving The Documentation\n\n\nStyleguides\nCommit Messages\n\n\nJoin The Project Team\n\nCode of Conduct\nThis project and everyone participating in it is governed by the\nThe Central Factory's Metaverse Code of Conduct.\nBy participating, you are expected to uphold this code. Please report unacceptable behavior\nto <>.\nI Have a Question\n\nIf you want to ask a question, we assume that you have read the available Documentation.\n\nBefore you ask a question, it is best to search for existing Issues that might help you. In case you have found a suitable issue and still need clarification, you can write your question in this issue. It is also advisable to search the internet for answers first.\nIf you then still feel the need to ask a question and need clarification, we recommend the following:\n\nOpen an Issue.\nProvide as much context as you can about what you're running into.\nProvide project and platform versions (nodejs, npm, etc), depending on what seems relevant.\n\nWe will then take care of the issue as soon as possible.\n\n\nI Want To Contribute\n\nLegal Notice \nWhen contributing to this project, you must agree that you have authored 100% of the content, that you have the necessary rights to the content and that the content you contribute may be provided under the project license.\n\nReporting Bugs\n\nBefore Submitting a Bug Report\nA good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to investigate carefully, collect information and describe the issue in detail in your report. Please complete the following steps in advance to help us fix any potential bug as fast as possible.\n\nMake sure that you are using the latest version.\nDetermine if your bug is really a bug and not an error on your side e.g. using incompatible environment components/versions (Make sure that you have read the documentation. If you are looking for support, you might want to check this section).\nTo see if other users have experienced (and potentially already solved) the same issue you are having, check if there is not already a bug report existing for your bug or error in the bug tracker.\nAlso make sure to search the internet (including Stack Overflow) to see if users outside of the GitHub community have discussed the issue.\nCollect information about the bug:\nStack trace (Traceback)\nOS, Platform and Version (Windows, Linux, macOS, x86, ARM)\nVersion of the interpreter, compiler, SDK, runtime environment, package manager, depending on what seems relevant.\nPossibly your input and the output\nCan you reliably reproduce the issue? And can you also reproduce it with older versions?\n\n\n\n\nHow Do I Submit a Good Bug Report?\n\nYou must never report security related issues, vulnerabilities or bugs to the issue tracker, or elsewhere in public. Instead sensitive bugs must be sent by email to <>.\n\n\n\nWe use GitHub issues to track bugs and errors. If you run into an issue with the project:\n\nOpen an Issue. (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and not to label the issue.)\nExplain the behavior you would expect and the actual behavior.\nPlease provide as much context as possible and describe the reproduction steps that someone else can follow to recreate the issue on their own. This usually includes your code. For good bug reports you should isolate the problem and create a reduced test case.\nProvide the information you collected in the previous section.\n\nOnce it's filed:\n\nThe project team will label the issue accordingly.\nA team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no obvious way to reproduce the issue, the team will ask you for those steps and mark the issue as needs-repro. Bugs with the needs-repro tag will not be addressed until they are reproduced.\nIf the team is able to reproduce the issue, it will be marked needs-fix, as well as possibly other tags (such as critical), and the issue will be left to be implemented by someone.\n\n\n\n\nSuggesting Enhancements\nThis section guides you through submitting an enhancement suggestion for The Central Factory's Metaverse, including completely new features and minor improvements to existing functionality. Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions.\n\nBefore Submitting an Enhancement\n\nMake sure that you are using the latest version.\nRead the documentation carefully and find out if the functionality is already covered, maybe by an individual configuration.\nPerform a search to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one.\nFind out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Keep in mind that we want features that will be useful to the majority of our users and not just a small subset. If you're just targeting a minority of users, consider writing an add-on/plugin library.\n\n\nHow Do I Submit a Good Enhancement Suggestion?\nEnhancement suggestions are tracked as GitHub issues.\n\nUse a clear and descriptive title for the issue to identify the suggestion.\nProvide a step-by-step description of the suggested enhancement in as many details as possible.\nDescribe the current behavior and explain which behavior you expected to see instead and why. At this point you can also tell which alternatives do not work for you.\nYou may want to include screenshots and animated GIFs which help you demonstrate the steps or point out the part which the suggestion is related to. You can use this tool to record GIFs on macOS and Windows, and this tool or this tool on Linux. \nExplain why this enhancement would be useful to most The Central Factory's Metaverse users. You may also want to point out the other projects that solved it better and which could serve as inspiration.\n\n\n\nYour First Code Contribution\n\n\nImproving The Documentation\n\n\nStyleguides\nCommit Messages\n\n\nJoin The Project Team\n\n\n\nAttribution\nThis guide is based on the contributing-gen. Make your own!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/avatars/src/lib/collections/user-avatars.collection.ts\n            \n            variable\n            appearanceSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/collections/user-avatars.collection.ts\n            \n            variable\n            USER_AVATARS_COLLECTION_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/collections/user-avatars.collection.ts\n            \n            variable\n            userAvatarsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/mocks/user-avatars.data.ts\n            \n            variable\n            USER_AVATARS_MOCKS_DATA_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/mocks/user-avatars.data.ts\n            \n            variable\n            userAvatars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/appearances.ts\n            \n            variable\n            appearancesMocks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/appearances.ts\n            \n            variable\n            gltfAppearanceMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/avatars.ts\n            \n            variable\n            avatarMock1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/avatars.ts\n            \n            variable\n            avatarMock2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/avatars.ts\n            \n            variable\n            avatarMock3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/avatars.ts\n            \n            variable\n            avatarsMocks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/scopes.ts\n            \n            variable\n            centralFactoryManageCalendarsScopeMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/scopes.ts\n            \n            variable\n            googleManageCalendarsScopeMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/scopes.ts\n            \n            variable\n            NFTManageTokensScopeMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/scopes.ts\n            \n            variable\n            scopesMocks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/skills.ts\n            \n            variable\n            createCalendarSkill\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/skills.ts\n            \n            variable\n            createEventSkill\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/skills.ts\n            \n            variable\n            skillsMocks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/data/storybook/skills.ts\n            \n            variable\n            tradeAssetsSkill\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/guards/is-avatar-selected.guard.ts\n            \n            guard\n            IsAvatarSelectedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/guards/is-avatar-selected.guard.ts\n            \n            variable\n            ON_AVATAR_SELECTED_GUARD_FAILURE_REDIRECT_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/models/appearance.ts\n            \n            interface\n            Appearance\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/models/avatar.ts\n            \n            interface\n            Avatar\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/models/scope.ts\n            \n            interface\n            Scope\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/models/skill.ts\n            \n            interface\n            Skill\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/states/available-avatars.state.ts\n            \n            injectable\n            AvailableAvatarsState\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/states/selected-avatar.state.ts\n            \n            injectable\n            SelectedAvatarState\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.stories.ts\n            \n            variable\n            Empty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.stories.ts\n            \n            variable\n            Filled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts\n            \n            component\n            AvatarAppearancesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts\n            \n            interface\n            AvatarAppearancesForm\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts\n            \n            interface\n            FormAppearance\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.stories.ts\n            \n            variable\n            Empty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.stories.ts\n            \n            variable\n            Filled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.ts\n            \n            component\n            AvatarOverviewComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.ts\n            \n            interface\n            AvatarOverviewInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.stories.ts\n            \n            variable\n            Empty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.stories.ts\n            \n            variable\n            Filled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts\n            \n            component\n            AvatarScopesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.ts\n            \n            class\n            AvatarScopesInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.stories.ts\n            \n            variable\n            Empty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.stories.ts\n            \n            variable\n            Filled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts\n            \n            component\n            AvatarSkillsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.ts\n            \n            class\n            AvatarSkillsInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatars-carousel/avatars-carousel.component.stories.ts\n            \n            variable\n            Empty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatars-carousel/avatars-carousel.component.stories.ts\n            \n            variable\n            Filled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatars-carousel/avatars-carousel.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/avatars-carousel/avatars-carousel.component.ts\n            \n            component\n            AvatarsCarouselComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.aframe-scene.ts\n            \n            variable\n            previewAvatarAppearanceAframeScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.stories.ts\n            \n            variable\n            Empty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.stories.ts\n            \n            variable\n            Filled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.ts\n            \n            component\n            PreviewAvatarAppearanceComponent\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^12.2.0\n        \n            @angular/cdk : ^13.0.2\n        \n            @angular/common : ^12.2.0\n        \n            @angular/compiler : ^12.2.0\n        \n            @angular/core : ^12.2.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ^12.2.0\n        \n            @angular/platform-browser : ^12.2.0\n        \n            @angular/platform-browser-dynamic : ^12.2.0\n        \n            @angular/router : ^12.2.0\n        \n            @docusaurus/core : ^2.0.0-alpha.70\n        \n            @docusaurus/preset-classic : ^2.0.0-alpha.70\n        \n            @mdi/svg : ^6.4.95\n        \n            @mdx-js/react : ^1.6.21\n        \n            @nestjs/common : ^8.2.4\n        \n            @nestjs/core : ^8.2.4\n        \n            @nestjs/platform-express : ^8.2.4\n        \n            @ng-select/ng-select : ^8.1.1\n        \n            @ng-stack/forms : ^2.4.0\n        \n            @nrwl/angular : 13.1.3\n        \n            clsx : ^1.1.1\n        \n            faker : ^5.5.3\n        \n            pouchdb-adapter-idb : ^7.2.2\n        \n            react : ^16.8.4\n        \n            react-dom : ^16.8.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rxdb : ^10.5.4\n        \n            rxjs : ~7.5.1\n        \n            tslib : ^2.0.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nThe Central Factory's Metaverse\nTypeScript Open Source packages for the Metaverse.\nThis code includes The Central Factory's Metaverse Core packages and Community Editions.\nProperty of The Central Factory Foundation. MIT Licensed software\nDevelopment\nServe apps\n# run the portal app\nnx serve portal\n# run the codex website\nnx serve codex\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Central Factory\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AvatarAppearancesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AvatarOverviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AvatarsCarouselModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AvatarScopesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AvatarSkillsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PreviewAvatarAppearanceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AvatarAppearancesModule\n\n\n\ncluster_AvatarAppearancesModule_declarations\n\n\n\ncluster_AvatarAppearancesModule_imports\n\n\n\ncluster_AvatarAppearancesModule_exports\n\n\n\ncluster_AvatarOverviewModule\n\n\n\ncluster_AvatarOverviewModule_declarations\n\n\n\ncluster_AvatarOverviewModule_exports\n\n\n\ncluster_AvatarsCarouselModule\n\n\n\ncluster_AvatarsCarouselModule_declarations\n\n\n\ncluster_AvatarsCarouselModule_exports\n\n\n\ncluster_AvatarScopesModule\n\n\n\ncluster_AvatarScopesModule_declarations\n\n\n\ncluster_AvatarScopesModule_exports\n\n\n\ncluster_AvatarSkillsModule\n\n\n\ncluster_AvatarSkillsModule_declarations\n\n\n\ncluster_AvatarSkillsModule_exports\n\n\n\ncluster_PreviewAvatarAppearanceModule\n\n\n\ncluster_PreviewAvatarAppearanceModule_declarations\n\n\n\ncluster_PreviewAvatarAppearanceModule_exports\n\n\n\n\nAvatarAppearancesComponent\n\nAvatarAppearancesComponent\n\n\n\nAvatarAppearancesModule\n\nAvatarAppearancesModule\n\nAvatarAppearancesModule -->\n\nAvatarAppearancesComponent->AvatarAppearancesModule\n\n\n\n\n\nAvatarAppearancesComponent \n\nAvatarAppearancesComponent \n\nAvatarAppearancesComponent  -->\n\nAvatarAppearancesModule->AvatarAppearancesComponent \n\n\n\n\n\nPreviewAvatarAppearanceModule\n\nPreviewAvatarAppearanceModule\n\nAvatarAppearancesModule -->\n\nPreviewAvatarAppearanceModule->AvatarAppearancesModule\n\n\n\n\n\nPreviewAvatarAppearanceComponent \n\nPreviewAvatarAppearanceComponent \n\nPreviewAvatarAppearanceComponent  -->\n\nPreviewAvatarAppearanceModule->PreviewAvatarAppearanceComponent \n\n\n\n\n\nAvatarOverviewComponent\n\nAvatarOverviewComponent\n\n\n\nAvatarOverviewModule\n\nAvatarOverviewModule\n\nAvatarOverviewModule -->\n\nAvatarOverviewComponent->AvatarOverviewModule\n\n\n\n\n\nAvatarOverviewComponent \n\nAvatarOverviewComponent \n\nAvatarOverviewComponent  -->\n\nAvatarOverviewModule->AvatarOverviewComponent \n\n\n\n\n\nAvatarsCarouselComponent\n\nAvatarsCarouselComponent\n\n\n\nAvatarsCarouselModule\n\nAvatarsCarouselModule\n\nAvatarsCarouselModule -->\n\nAvatarsCarouselComponent->AvatarsCarouselModule\n\n\n\n\n\nAvatarsCarouselComponent \n\nAvatarsCarouselComponent \n\nAvatarsCarouselComponent  -->\n\nAvatarsCarouselModule->AvatarsCarouselComponent \n\n\n\n\n\nAvatarScopesComponent\n\nAvatarScopesComponent\n\n\n\nAvatarScopesModule\n\nAvatarScopesModule\n\nAvatarScopesModule -->\n\nAvatarScopesComponent->AvatarScopesModule\n\n\n\n\n\nAvatarScopesComponent \n\nAvatarScopesComponent \n\nAvatarScopesComponent  -->\n\nAvatarScopesModule->AvatarScopesComponent \n\n\n\n\n\nAvatarSkillsComponent\n\nAvatarSkillsComponent\n\n\n\nAvatarSkillsModule\n\nAvatarSkillsModule\n\nAvatarSkillsModule -->\n\nAvatarSkillsComponent->AvatarSkillsModule\n\n\n\n\n\nAvatarSkillsComponent \n\nAvatarSkillsComponent \n\nAvatarSkillsComponent  -->\n\nAvatarSkillsModule->AvatarSkillsComponent \n\n\n\n\n\nPreviewAvatarAppearanceComponent\n\nPreviewAvatarAppearanceComponent\n\nPreviewAvatarAppearanceModule -->\n\nPreviewAvatarAppearanceComponent->PreviewAvatarAppearanceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppearancePreviewCameraControl   (libs/.../avatar-appearances.component.ts)\n                        \n                        \n                            UserAvatarDocType   (libs/.../user-avatars.collection.ts)\n                        \n                        \n                            UserAvatarDocument   (libs/.../user-avatars.collection.ts)\n                        \n                        \n                            UserAvatarsCollection   (libs/.../user-avatars.collection.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.ts\n    \n    \n        \n            \n                \n                    \n                    AppearancePreviewCameraControl\n                \n            \n            \n                \n                        Control\n\n                \n            \n        \n    \n    libs/avatars/src/lib/collections/user-avatars.collection.ts\n    \n    \n        \n            \n                \n                    \n                    UserAvatarDocType\n                \n            \n            \n                \n                            Avatar\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserAvatarDocument\n                \n            \n            \n                \n                            RxDocument\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserAvatarsCollection\n                \n            \n            \n                \n                            RxCollection\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appearanceSchema   (libs/.../user-avatars.collection.ts)\n                        \n                        \n                            appearancesMocks   (libs/.../appearances.ts)\n                        \n                        \n                            avatarMock1   (libs/.../avatars.ts)\n                        \n                        \n                            avatarMock2   (libs/.../avatars.ts)\n                        \n                        \n                            avatarMock3   (libs/.../avatars.ts)\n                        \n                        \n                            avatarsMocks   (libs/.../avatars.ts)\n                        \n                        \n                            centralFactoryManageCalendarsScopeMock   (libs/.../scopes.ts)\n                        \n                        \n                            createCalendarSkill   (libs/.../skills.ts)\n                        \n                        \n                            createEventSkill   (libs/.../skills.ts)\n                        \n                        \n                            Empty   (libs/.../avatar-appearances.component.stories.ts)\n                        \n                        \n                            Empty   (libs/.../avatar-overview.component.stories.ts)\n                        \n                        \n                            Empty   (libs/.../avatar-scopes.component.stories.ts)\n                        \n                        \n                            Empty   (libs/.../avatar-skills.component.stories.ts)\n                        \n                        \n                            Empty   (libs/.../avatars-carousel.component.stories.ts)\n                        \n                        \n                            Empty   (libs/.../preview-avatar-appearance.component.stories.ts)\n                        \n                        \n                            Filled   (libs/.../avatar-appearances.component.stories.ts)\n                        \n                        \n                            Filled   (libs/.../avatar-overview.component.stories.ts)\n                        \n                        \n                            Filled   (libs/.../avatar-scopes.component.stories.ts)\n                        \n                        \n                            Filled   (libs/.../avatar-skills.component.stories.ts)\n                        \n                        \n                            Filled   (libs/.../avatars-carousel.component.stories.ts)\n                        \n                        \n                            Filled   (libs/.../preview-avatar-appearance.component.stories.ts)\n                        \n                        \n                            gltfAppearanceMock   (libs/.../appearances.ts)\n                        \n                        \n                            googleManageCalendarsScopeMock   (libs/.../scopes.ts)\n                        \n                        \n                            NFTManageTokensScopeMock   (libs/.../scopes.ts)\n                        \n                        \n                            ON_AVATAR_SELECTED_GUARD_FAILURE_REDIRECT_TOKEN   (libs/.../is-avatar-selected.guard.ts)\n                        \n                        \n                            previewAvatarAppearanceAframeScene   (libs/.../preview-avatar-appearance.aframe-scene.ts)\n                        \n                        \n                            scopesMocks   (libs/.../scopes.ts)\n                        \n                        \n                            skillsMocks   (libs/.../skills.ts)\n                        \n                        \n                            Template   (libs/.../avatar-appearances.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../avatar-overview.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../avatar-scopes.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../avatar-skills.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../avatars-carousel.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../preview-avatar-appearance.component.stories.ts)\n                        \n                        \n                            tradeAssetsSkill   (libs/.../skills.ts)\n                        \n                        \n                            USER_AVATARS_COLLECTION_PROVIDER   (libs/.../user-avatars.collection.ts)\n                        \n                        \n                            USER_AVATARS_MOCKS_DATA_PROVIDER   (libs/.../user-avatars.data.ts)\n                        \n                        \n                            userAvatars   (libs/.../user-avatars.data.ts)\n                        \n                        \n                            userAvatarsSchema   (libs/.../user-avatars.collection.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/avatars/src/lib/collections/user-avatars.collection.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appearanceSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'object',\n  description: 'Appearance',\n  properties: {\n    format: {\n      type: 'string',\n    },\n    src: {\n      type: 'string',\n    },\n    smallPreviewUrl: {\n      type: 'string',\n    },\n    previewCamera: {\n      type: 'object',\n      properties: {\n        position: {\n          type: 'string',\n        },\n        rotation: {\n          type: 'string',\n        },\n        scale: {\n          type: 'string',\n        },\n      },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_AVATARS_COLLECTION_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: ENTITY_MANAGER_BASE_COLLECTIONS_TOKEN,\n  useValue: {\n    name: 'useravatars',\n    creator: {\n      schema: userAvatarsSchema,\n    },\n  },\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userAvatarsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RxJsonSchema\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'User Avatars',\n  description: 'User Avatars',\n  version: 0,\n  keyCompression: true,\n  primaryKey: 'id',\n  type: 'object',\n  properties: {\n    id: {\n      type: 'string',\n      description: 'Id',\n    },\n    welcomeMessage: {\n      type: 'string',\n      description: 'Welcome message',\n    },\n    name: {\n      type: 'string',\n      description: 'Name',\n    },\n    title: {\n      type: 'string',\n      description: 'Title',\n    },\n    selectedAppearance: appearanceSchema,\n    appearances: {\n      type: 'array',\n      description: 'Appearances',\n      items: appearanceSchema,\n    },\n    scopes: {\n      type: 'array',\n      description: 'Scopes',\n      items: {\n        type: 'object',\n        properties: {\n          integration: {\n            type: 'string',\n            description: 'Integration',\n          },\n          domain: {\n            type: 'string',\n            description: 'Domain',\n          },\n          scope: {\n            type: 'string',\n            description: 'Scope',\n          },\n        },\n      },\n    },\n    skills: {\n      type: 'array',\n      description: 'Skills',\n      items: {\n        type: 'object',\n        properties: {\n          domain: {\n            type: 'string',\n            description: 'Domain',\n          },\n          scope: {\n            type: 'string',\n            description: 'Scope',\n          },\n          skill: {\n            type: 'string',\n            description: 'Skill',\n          },\n        },\n      },\n    },\n    createdAt: {\n      format: 'date-time',\n      type: 'string',\n      description: 'Created at',\n    },\n    updatedAt: {\n      format: 'date-time',\n      type: 'string',\n      description: 'Updated at',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/data/storybook/appearances.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appearancesMocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Appearance[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  gltfAppearanceMock,\n  gltfAppearanceMock,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gltfAppearanceMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Appearance\n\n                    \n                \n                \n                    \n                        Default value : {\n  format: 'gltf',\n  src: 'assets/avatars/samples/ed4aa425-9e13-4e51-9f2c-557dfe0db7ab/ed4aa425-9e13-4e51-9f2c-557dfe0db7ab.glb',\n  smallPreviewUrl: 'assets/avatar-144.png',\n  previewCamera: {\n    position: '0 1.5 0.7',\n    rotation: '-5 0 0',\n    scale: '0.4 0.4 0.4',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/data/storybook/avatars.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        avatarMock1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Avatar\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: '1',\n  welcomeMessage: 'Hello!',\n  name: 'John',\n  title: 'Software Engineer',\n  selectedAppearance: {\n    format: 'readyplayer.me',\n    src: 'assets/avatar-large.png',\n    smallPreviewUrl: 'assets/avatar-144.png',\n  },\n  appearances: appearancesMocks,\n  scopes: scopesMocks,\n  skills: skillsMocks,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarMock2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Avatar\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: '2',\n  welcomeMessage: 'Hello!',\n  name: 'John2',\n  title: 'Software Engineer',\n  selectedAppearance: {\n    format: 'readyplayer.me',\n    src: 'assets/avatar-large.png',\n    smallPreviewUrl: 'assets/avatar-144.png',\n  },\n  appearances: [],\n  scopes: [],\n  skills: [],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarMock3\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Avatar\n\n                    \n                \n                \n                    \n                        Default value : {\n  id: '3',\n  welcomeMessage: 'Hello!',\n  name: 'John3',\n  title: 'Software Engineer',\n  selectedAppearance: {\n    format: 'readyplayer.me',\n    src: 'assets/avatar-large.png',\n    smallPreviewUrl: 'assets/avatar-144.png',\n  },\n  appearances: [],\n  scopes: [],\n  skills: [],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarsMocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Avatar[]\n\n                    \n                \n                \n                    \n                        Default value : [avatarMock1, avatarMock2, avatarMock3]\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/data/storybook/scopes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        centralFactoryManageCalendarsScopeMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Scope\n\n                    \n                \n                \n                    \n                        Default value : {\n  integration: 'CF',\n  domain: 'Calendars',\n  scope: 'manage',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleManageCalendarsScopeMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Scope\n\n                    \n                \n                \n                    \n                        Default value : {\n  integration: 'Google',\n  domain: 'Calendars',\n  scope: 'manage',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NFTManageTokensScopeMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Scope\n\n                    \n                \n                \n                    \n                        Default value : {\n  integration: 'NFT',\n  domain: 'Tokens',\n  scope: 'manage',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scopesMocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Scope[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  centralFactoryManageCalendarsScopeMock,\n  googleManageCalendarsScopeMock,\n  NFTManageTokensScopeMock,\n]\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/data/storybook/skills.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCalendarSkill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill\n\n                    \n                \n                \n                    \n                        Default value : {\n  domain: 'calendar',\n  scope: 'manage',\n  skill: 'create',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEventSkill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill\n\n                    \n                \n                \n                    \n                        Default value : {\n  domain: 'event',\n  scope: 'manage',\n  skill: 'create',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skillsMocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  createCalendarSkill,\n  createEventSkill,\n  tradeAssetsSkill,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tradeAssetsSkill\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Skill\n\n                    \n                \n                \n                    \n                        Default value : {\n  domain: 'assets',\n  scope: 'manage',\n  skill: 'trade',\n}\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/web-components/angular/avatar-appearances/avatar-appearances.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Empty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Filled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (\n  args: AvatarAppearancesComponent\n) => ({\n  component: AvatarAppearancesComponent,\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/web-components/angular/avatar-overview/avatar-overview.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Empty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Filled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (\n  args: AvatarOverviewComponent\n) => ({\n  component: AvatarOverviewComponent,\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/web-components/angular/avatar-scopes/avatar-scopes.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Empty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Filled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (\n  args: AvatarScopesComponent\n) => ({\n  component: AvatarScopesComponent,\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/web-components/angular/avatar-skills/avatar-skills.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Empty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Filled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (\n  args: AvatarSkillsComponent\n) => ({\n  component: AvatarSkillsComponent,\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/web-components/angular/avatars-carousel/avatars-carousel.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Empty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Filled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (\n  args: AvatarsCarouselComponent\n) => ({\n  component: AvatarsCarouselComponent,\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Empty\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Filled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (\n  args: PreviewAvatarAppearanceComponent\n) => ({\n  component: PreviewAvatarAppearanceComponent,\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/guards/is-avatar-selected.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ON_AVATAR_SELECTED_GUARD_FAILURE_REDIRECT_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n    'ON_DATABASE_CREATED_GUARD_FAILURE_REDIRECT_TOKEN',\n    {\n      providedIn: 'root',\n      factory: () => '/select-avatar',\n    }\n  )\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/web-components/angular/preview-avatar-appearance/preview-avatar-appearance.aframe-scene.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        previewAvatarAppearanceAframeScene\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  appearance: Appearance,\n  width: string,\n  height: string\n) => `\n  \n  \n    \n      \n        body {\n          margin: 0;\n          padding: 0;\n        }\n        html, body, a-scene {\n          width: ${width};\n          height: ${height};\n        }\n      \n      \n    \n    \n\n\n      \n          \n          \n\n          \n          \n\n          \n          \n          \n          \n\n          \n        \n\n    \n`\n                    \n                \n\n\n        \n    \n\n    libs/avatars/src/lib/data/mocks/user-avatars.data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_AVATARS_MOCKS_DATA_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: ENTITY_MANAGER_INITIAL_DATA_TOKEN,\n  useValue: {\n    name: 'useravatars',\n    upsert: true,\n    data: userAvatars,\n  },\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userAvatars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserAvatarDocType[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    id: '1',\n    welcomeMessage: 'Hello!',\n    name: 'John',\n    title: 'Software Engineer',\n    selectedAppearance: {\n      format: 'readyplayer.me',\n      src: 'assets/avatar-large.png',\n      smallPreviewUrl: 'assets/avatar-144.png',\n    },\n    appearances: [\n      {\n        format: 'gltf',\n        src: 'assets/avatars/samples/ed4aa425-9e13-4e51-9f2c-557dfe0db7ab/ed4aa425-9e13-4e51-9f2c-557dfe0db7ab.glb',\n        smallPreviewUrl: 'assets/avatar-144.png',\n        previewCamera: {\n          position: '0 1.5 0.7',\n          rotation: '-5 0 0',\n          scale: '0.4 0.4 0.4',\n        },\n      },\n      {\n        format: 'gltf',\n        src: 'assets/avatars/samples/65989f77-c8bf-4542-9e8a-d0f39eb76662/65989f77-c8bf-4542-9e8a-d0f39eb76662.glb',\n        smallPreviewUrl: 'assets/avatar-144.png',\n        previewCamera: {\n          position: '0 1.5 0.7',\n          rotation: '-5 0 0',\n          scale: '1 1 1',\n        },\n      },\n      // {\n      //   format: 'readyplayer.me',\n      //   src: 'assets/avatar-large.png',\n      //   smallPreviewUrl: 'assets/avatar-144.png',\n      // },\n      // {\n      //   format: 'Meta',\n      //   src: 'assets/avatar-large.png',\n      //   smallPreviewUrl: 'assets/avatar-144.png',\n      // },\n      // {\n      //   format: 'NVDIA Omniverse',\n      //   src: 'assets/avatar-large.png',\n      //   smallPreviewUrl: 'assets/avatar-144.png',\n      // },\n    ],\n    scopes: [\n      {\n        integration: 'CF',\n        domain: 'Calendars',\n        scope: 'manage',\n      },\n      {\n        integration: 'Google',\n        domain: 'Calendars',\n        scope: 'manage',\n      },\n      {\n        integration: 'NFT',\n        domain: 'Tokens',\n        scope: 'manage',\n      },\n    ],\n    skills: [\n      {\n        domain: 'calendar',\n        scope: 'manage',\n        skill: 'create',\n      },\n      {\n        domain: 'event',\n        scope: 'manage',\n        skill: 'create',\n      },\n      {\n        domain: 'assets',\n        scope: 'manage',\n        skill: 'trade',\n      },\n    ],\n  },\n  {\n    id: '2',\n    welcomeMessage: 'Hello!',\n    name: 'John2',\n    title: 'Software Engineer',\n    selectedAppearance: {\n      format: 'readyplayer.me',\n      src: 'assets/avatar-large.png',\n      smallPreviewUrl: 'assets/avatar-144.png',\n    },\n    appearances: [],\n    scopes: [],\n    skills: [],\n  },\n  {\n    id: '3',\n    welcomeMessage: 'Hello!',\n    name: 'John3',\n    title: 'Software Engineer',\n    selectedAppearance: {\n      format: 'readyplayer.me',\n      src: 'assets/avatar-large.png',\n      smallPreviewUrl: 'assets/avatar-144.png',\n    },\n    appearances: [],\n    scopes: [],\n    skills: [],\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
