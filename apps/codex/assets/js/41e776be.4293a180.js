"use strict";(self.webpackChunkcentral_factory=self.webpackChunkcentral_factory||[]).push([[8936],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>m});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(t),m=i,d=u["".concat(c,".").concat(m)]||u[m]||f[m]||a;return t?n.createElement(d,o(o({ref:r},l),{},{components:t})):n.createElement(d,o({ref:r},l))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p.mdxType="string"==typeof e?e:i,o[1]=p;for(var s=2;s<a;s++)o[s]=t[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3781:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>p,contentTitle:()=>c,metadata:()=>s,toc:()=>l,default:()=>u});var n=t(7462),i=t(3366),a=(t(7294),t(3905)),o=["components"],p={id:"open-api",title:"Open API (Swagger)",sidebar_label:"Open API",slug:"/framework/api-definitions/open-api"},c=void 0,s={unversionedId:"framework/api-definitions/open-api",id:"framework/api-definitions/open-api",isDocsHomePage:!1,title:"Open API (Swagger)",description:"Open API (Swagger) is a specification for describing APIs. You can access to the graphql specification visiting the Swagger UI.",source:"@site/developers/framework/api-definitions/open-api.md",sourceDirName:"framework/api-definitions",slug:"/framework/api-definitions/open-api",permalink:"/metaverse/apps/codex/developers/framework/api-definitions/open-api",tags:[],version:"current",frontMatter:{id:"open-api",title:"Open API (Swagger)",sidebar_label:"Open API",slug:"/framework/api-definitions/open-api"},sidebar:"developersSidebar",previous:{title:"Async API",permalink:"/metaverse/apps/codex/developers/framework/api-definitions/async-api"},next:{title:"GraphQL",permalink:"/metaverse/apps/codex/developers/framework/api-definitions/graphql"}},l=[],f={toc:l};function u(e){var r=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Open API (Swagger) is a specification for describing APIs. You can access to the graphql specification visiting the ",(0,a.kt)("a",{parentName:"p",href:"https://central-factory.com/metaverse/openapi"},"Swagger UI"),"."))}u.isMDXComponent=!0}}]);