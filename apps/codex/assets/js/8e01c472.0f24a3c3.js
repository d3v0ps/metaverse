"use strict";(self.webpackChunkcentral_factory=self.webpackChunkcentral_factory||[]).push([[3949],{3905:(e,n,r)=>{r.d(n,{Zo:()=>i,kt:()=>d});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=t.createContext({}),l=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},i=function(e){var n=l(e.components);return t.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),f=l(r),d=a,m=f["".concat(p,".").concat(d)]||f[d]||u[d]||s;return r?t.createElement(m,o(o({ref:n},i),{},{components:r})):t.createElement(m,o({ref:n},i))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=f;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<s;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4702:(e,n,r)=>{r.r(n),r.d(n,{frontMatter:()=>c,contentTitle:()=>p,metadata:()=>l,toc:()=>i,default:()=>f});var t=r(7462),a=r(3366),s=(r(7294),r(3905)),o=["components"],c={id:"scenes",title:"Scenes",sidebar_label:"Scenes",slug:"/framework/apps/scenes"},p=void 0,l={unversionedId:"framework/apps/scenes",id:"framework/apps/scenes",isDocsHomePage:!1,title:"Scenes",description:"Scenes are the building blocks of your application. An Scene can represent a web page/application, a graphql query, a videogame level, a gherkin spec and more.",source:"@site/developers/framework/apps/scenes.md",sourceDirName:"framework/apps",slug:"/framework/apps/scenes",permalink:"/developers/framework/apps/scenes",tags:[],version:"current",frontMatter:{id:"scenes",title:"Scenes",sidebar_label:"Scenes",slug:"/framework/apps/scenes"},sidebar:"developersSidebar",previous:{title:"Services",permalink:"/developers/framework/apps/services"},next:{title:"Forms",permalink:"/developers/framework/apps/forms"}},i=[{value:"Angular Scenes",id:"angular-scenes",children:[],level:2},{value:"NestJS Scenes",id:"nestjs-scenes",children:[],level:2}],u={toc:i};function f(e){var n=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Scenes are the building blocks of your application. An Scene can represent a web page/application, a graphql query, a videogame level, a gherkin spec and more."),(0,s.kt)("p",null,"Currently we support two types of scenes:"),(0,s.kt)("h2",{id:"angular-scenes"},"Angular Scenes"),(0,s.kt)("p",null,"Angular Scenes are the default scene type. They are client-side scenes that are rendered using Angular v12.\nInside of them you can use Angular components or other kind of web components. Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({\n  selector: 'create-avatar',\n  template: `\n    <form>\n      ...\n    </form>\n  `\n})\nexport class CreateAvatarScene extends Scene<CreateAvatarAction> {\n\n  scene$: Observable<CreateAvatarAction>;\n  \n\n  createAvatar() {\n    this.store.dispatch(new CreateAvatarAction(this.scene.value));\n  }\n\n}\n")),(0,s.kt)("h2",{id:"nestjs-scenes"},"NestJS Scenes"),(0,s.kt)("p",null,"NestJS Scenes are server-side scenes that are served over the network with NestJS. Supported kind of scenes include RESTful APIs, GraphQL, and more.\nYou can learn more about it at ",(0,s.kt)("a",{parentName:"p",href:"../api-definitions/async-api"},"API definition"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-gql"},"extend type Query {\n  createAvatar: CreateAvatarScene\n}\n\nexport type Mutations {\n  createAvatar(input: CreateAvatarInput): CreateAvatarScene\n}\n")))}f.isMDXComponent=!0}}]);