"use strict";(self.webpackChunkcentral_factory=self.webpackChunkcentral_factory||[]).push([[3949],{3905:(e,r,n)=>{n.d(r,{Zo:()=>i,kt:()=>f});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=t.createContext({}),l=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},i=function(e){var r=l(e.components);return t.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||s;return n?t.createElement(m,o(o({ref:r},i),{},{components:n})):t.createElement(m,o({ref:r},i))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var c={};for(var p in r)hasOwnProperty.call(r,p)&&(c[p]=r[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<s;l++)o[l]=n[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4702:(e,r,n)=>{n.r(r),n.d(r,{frontMatter:()=>c,contentTitle:()=>p,metadata:()=>l,toc:()=>i,default:()=>d});var t=n(7462),a=n(3366),s=(n(7294),n(3905)),o=["components"],c={id:"scenes",title:"Scenes",sidebar_label:"Scenes",slug:"/framework/apps/scenes"},p=void 0,l={unversionedId:"framework/apps/scenes",id:"framework/apps/scenes",isDocsHomePage:!1,title:"Scenes",description:"Scenes are the building blocks of your application. An Scene can represent a web page/application, a graphql query, a videogame level, a gherkin spec and more.",source:"@site/developers/framework/apps/scenes.md",sourceDirName:"framework/apps",slug:"/framework/apps/scenes",permalink:"/metaverse/apps/codex/developers/framework/apps/scenes",tags:[],version:"current",frontMatter:{id:"scenes",title:"Scenes",sidebar_label:"Scenes",slug:"/framework/apps/scenes"},sidebar:"developersSidebar",previous:{title:"Services",permalink:"/metaverse/apps/codex/developers/framework/apps/services"},next:{title:"Forms",permalink:"/metaverse/apps/codex/developers/framework/apps/forms"}},i=[{value:"Angular Scenes",id:"angular-scenes",children:[],level:2},{value:"NestJS Scenes",id:"nestjs-scenes",children:[],level:2}],u={toc:i};function d(e){var r=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Scenes are the building blocks of your application. An Scene can represent a web page/application, a graphql query, a videogame level, a gherkin spec and more."),(0,s.kt)("p",null,"Currently we support two types of scenes:"),(0,s.kt)("h2",{id:"angular-scenes"},"Angular Scenes"),(0,s.kt)("p",null,"Angular Scenes are the default scene type. They are client-side scenes that are rendered using Angular v12.\nInside of them you can use Angular components or other kind of web components. Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"@Component({\n  selector: 'create-avatar',\n  template: `\n    <form>\n      ...\n    </form>\n  `\n})\nexport class CreateAvatarScene extends Scene<CreateAvatarAction> {\n\n  scene$: Observable<CreateAvatarAction>;\n  \n\n  createAvatar() {\n    this.store.dispatch(new CreateAvatarAction(this.scene.value));\n  }\n\n}\n")),(0,s.kt)("h2",{id:"nestjs-scenes"},"NestJS Scenes"),(0,s.kt)("p",null,"NestJS Scenes are server-side scenes that are served over the network with NestJS. Supported kind of scenes include RESTful APIs, GraphQL, and more.\nYou can learn more about it at ",(0,s.kt)("a",{parentName:"p",href:"../api-definitions/async-api"},"API definition"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-gql"},"extend type Query {\n  createAvatar: CreateAvatarScene\n}\n\nexport type Mutations {\n  createAvatar(input: CreateAvatarInput): CreateAvatarScene\n}\n")))}d.isMDXComponent=!0}}]);