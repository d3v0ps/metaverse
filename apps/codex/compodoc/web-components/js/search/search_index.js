var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppScene.html",[0,0.909,1,1.105]],["body/components/AppScene.html",[0,1.042,1,1.433,2,1.386,3,0.16,4,0.16,5,2.435,6,1.106,7,1.106,8,0.132,9,1.258,10,1.25,11,2.141,12,0.721,13,1.741,14,2.334,15,2.293,16,2.829,17,0.039,18,3.045,19,2.829,20,2.829,21,2.829,22,2.794,23,2.769,24,3.539,25,2.232,26,3.179,27,2.435,28,1.906,29,2.794,30,3.693,31,3.179,32,3.693,33,2.794,34,4.358,35,3.539,36,4.111,37,3.693,38,3.693,39,2.829,40,3.179,41,2.829,42,2.829,43,3.693,44,2.829,45,2.829,46,3.074,47,4.722,48,3.693,49,2.435,50,2.435,51,2.829,52,2.829,53,2.829,54,1.396,55,2.829,56,2.829,57,2.435,58,3.693,59,2.829,60,2.829,61,1.386,62,2.829,63,2.829,64,0.284,65,0.845,66,2.829,67,2.829,68,2.829,69,2.435,70,0.845,71,2.424,72,1.557,73,3.204,74,0.931,75,1.771,76,3.693,77,3.861,78,1.052,79,1.771,80,0.488,81,1.107,82,0.48,83,0.32,84,1.771,85,0.765,86,0.931,87,1.771,88,1.906,89,1.433,90,1.433,91,2.293,92,1.771,93,2.376,94,1.771,95,3.48,96,4.288,97,2.293,98,1.455,99,2.293,100,4.288,101,3.204,102,2.293,103,3.204,104,2.293,105,2.293,106,3.204,107,2.293,108,3.204,109,2.293,110,1.771,111,0.873,112,2.293,113,1.974,114,1.771,115,0.477,116,0.189,117,2.293,118,1.258,119,2.293,120,1.462,121,1.462,122,1.462,123,1.462,124,1.462,125,0.797,126,1.462,127,1.258,128,0.251,129,0.797,130,0.797,131,0.057,132,2.293,133,1.462,134,1.462,135,1.462,136,1.462,137,1.462,138,1.462,139,1.462,140,1.462,141,1.106,142,1.735,143,1.132,144,0.441,145,1.106,146,1.106,147,0.721,148,1.106,149,0.721,150,1.106,151,0.721,152,0.985,153,1.106,154,0.594,155,0.538,156,0.654,157,0.594,158,1.106,159,0.654,160,1.106,161,0.654,162,1.106,163,0.654,164,0.797,165,1.106,166,0.017,167,0.017]],["title/classes/BemConfig.html",[131,0.096,168,2.125]],["body/classes/BemConfig.html",[3,0.395,4,0.395,8,0.327,17,0.037,64,0.702,65,1.583,78,1.251,82,0.688,83,1.078,111,1.171,128,0.395,130,2.344,131,0.14,166,0.032,167,0.032,168,3.7,169,2.731,170,3.609,171,4.592,172,4.592,173,4.592,174,4.372,175,4.372,176,4.299,177,4.372]],["title/modules/BemModule.html",[178,1.663,179,1.493]],["body/modules/BemModule.html",[3,0.357,4,0.357,8,0.295,17,0.038,115,0.593,116,0.421,128,0.357,131,0.126,157,2.05,161,2.26,163,2.26,166,0.03,167,0.03,179,3.065,180,1.61,181,2.444,182,3.263,183,3.263,184,3.263,185,2.444,186,1.972,187,1.972,188,3.953,189,2.444,190,2.444,191,2.444,192,3.263,193,3.953,194,3.953]],["title/injectables/BemService.html",[195,1.218,196,1.663]],["body/injectables/BemService.html",[3,0.212,4,0.212,8,0.175,17,0.039,54,1.4,64,0.377,65,1.045,70,1.045,72,1.503,78,1.159,80,1.235,81,0.906,82,0.617,83,0.81,85,1.235,86,0.786,89,1.655,90,1.503,93,1.547,111,1.377,115,0.25,116,0.25,128,0.212,130,2.148,131,0.075,143,1.658,166,0.021,167,0.021,171,3.359,172,3.359,173,3.359,195,1.4,196,1.911,197,1.464,198,1.935,199,4.07,200,3.437,201,3.437,202,4.07,203,2.345,204,5.557,205,4.987,206,5.621,207,2.345,208,3.939,209,3.359,210,3.437,211,2.345,212,4.987,213,3.437,214,2.345,215,3.948,216,2.345,217,4.07,218,2.492,219,2.263,220,2.492,221,2.345,222,2.345,223,4.07,224,2.345,225,2.442,226,3.437,227,3.437,228,3.437,229,3.437,230,2.345,231,2.345,232,2.345,233,2.345,234,4.772,235,4.482,236,2.197,237,3.437,238,2.892,239,4.07,240,3.185,241,1.666,242,2.345,243,2.345,244,3.939,245,4.772,246,2.345,247,2.345,248,2.345,249,1.304,250,2.345,251,2.345,252,2.345,253,1.055,254,2.345,255,2.345,256,1.304,257,1.935,258,2.345,259,2.837,260,3.437,261,3.437,262,2.442,263,3.437,264,3.437,265,1.715,266,1.715,267,1.715,268,3.437,269,3.437,270,3.437,271,2.345,272,2.345]],["title/directives/BlockDirective.html",[144,0.746,157,1.002]],["body/directives/BlockDirective.html",[3,0.284,4,0.284,8,0.235,10,1.903,12,1.282,13,1.417,17,0.039,64,0.505,65,1.285,70,1.285,72,2.069,74,1.417,78,1.28,80,0.867,81,1.178,82,0.692,83,0.569,85,0.867,86,1.055,111,1.322,115,0.45,116,0.335,128,0.284,131,0.101,143,2.319,144,1.054,156,1.162,157,1.417,164,2.149,166,0.026,167,0.026,196,3.115,215,3.896,218,3.049,219,3.208,220,3.049,238,2.236,241,2.236,253,1.416,273,2.598,274,2.655,275,4.228,276,3.941,277,3.941,278,4.812,279,3.188,280,2.351,281,2.236,282,4.228,283,3.147,284,3.147,285,3.147,286,3.147,287,3.147,288,3.147,289,2.598,290,2.11,291,2.598,292,3.147,293,2.598,294,1.966,295,2.598,296,2.598,297,3.147,298,3.49,299,3.49,300,2.598,301,2.598,302,2.598,303,3.941,304,2.598]],["title/directives/CloseSidebarDirective.html",[144,0.746,159,1.105]],["body/directives/CloseSidebarDirective.html",[3,0.374,4,0.374,8,0.31,12,2.054,13,1.69,17,0.039,54,1.688,74,1.388,78,0.932,80,1.142,81,0.837,82,0.512,83,0.749,86,1.388,115,0.537,116,0.441,128,0.374,131,0.132,144,1.257,149,2.304,156,1.53,159,1.862,166,0.031,167,0.031,265,2.067,266,2.067,267,2.067,305,4.162,306,3.42,307,5.042,308,4.143,309,4.143,310,5.042,311,2.944,312,2.944,313,2.588,314,4.162,315,4.143,316,4.143,317,5.042,318,2.944,319,3.42,320,4.143,321,4.143]],["title/directives/ElemDirective.html",[144,0.746,161,1.105]],["body/directives/ElemDirective.html",[3,0.272,4,0.272,8,0.225,10,1.848,12,1.227,13,1.376,17,0.039,33,2.916,64,0.484,65,1.248,70,1.248,72,2.046,74,1.376,78,1.285,80,0.83,81,1.179,82,0.697,83,0.544,85,0.83,86,1.01,111,1.331,115,0.497,116,0.321,128,0.272,131,0.096,143,2.296,144,1.023,156,1.113,157,1.68,161,1.516,164,2.101,166,0.025,167,0.025,192,2.487,196,3.08,208,4.33,215,3.846,218,3.01,219,3.179,220,3.01,238,2.141,241,2.141,253,1.356,274,2.596,276,3.854,277,3.854,278,4.887,279,3.132,280,2.283,281,2.141,289,2.487,290,2.048,291,2.487,293,2.487,294,1.882,295,2.487,296,2.487,298,3.388,299,3.388,300,2.487,301,2.487,302,2.487,303,3.854,304,2.487,322,2.487,323,4.105,324,4.105,325,3.013,326,3.013,327,3.013,328,3.013,329,3.013,330,3.013,331,3.013,332,3.013,333,3.013,334,3.013,335,3.013]],["title/directives/ModDirective.html",[144,0.746,163,1.105]],["body/directives/ModDirective.html",[3,0.418,4,0.418,8,0.346,12,1.885,13,1.805,17,0.037,115,0.493,116,0.493,128,0.418,131,0.148,144,1.342,156,1.709,163,1.989,164,2.424,166,0.033,167,0.033,336,3.82]],["title/components/NavbarComponent.html",[0,0.909,147,1.218]],["body/components/NavbarComponent.html",[0,1.516,1,1.269,2,2.236,3,0.31,4,0.31,6,2.147,7,2.147,8,0.257,12,1.4,13,1.999,14,2.929,17,0.039,46,2.939,61,2.236,64,0.552,69,3.994,70,1.363,78,1.188,81,1.008,82,0.616,85,0.947,86,1.152,89,1.269,90,1.269,98,0.947,111,0.773,113,3.184,115,0.366,116,0.366,128,0.31,131,0.11,141,2.147,142,2.799,143,1.826,144,0.857,145,2.147,146,2.147,147,2.153,148,2.147,149,1.4,150,2.147,151,1.4,152,1.911,153,2.147,154,1.152,155,1.045,156,1.269,157,1.152,158,2.147,159,1.269,160,2.147,161,1.269,162,2.147,163,1.269,164,1.547,165,2.147,166,0.028,167,0.028,280,2.492,290,2.488,337,2.837,338,4.482,339,4.987,340,4.117,341,4.987,342,4.987,343,5.285,344,4.987,345,3.7,346,4.987,347,3.437,348,3.437,349,4.117,350,3.437,351,3.437,352,3.7,353,1.547,354,3.437]],["title/modules/NavbarModule.html",[178,1.663,355,1.663]],["body/modules/NavbarModule.html",[3,0.36,4,0.36,8,0.298,17,0.038,115,0.611,116,0.424,128,0.36,131,0.127,147,2.495,155,1.211,166,0.03,167,0.03,179,2.914,180,1.623,181,2.456,185,2.456,186,1.988,187,1.988,189,2.456,190,2.456,191,2.456,355,3.391,356,3.289,357,3.289,358,3.289,359,3.289,360,2.628,361,3.985,362,2.737,363,4.064,364,3.289,365,3.289,366,3.289,367,1.098,368,3.289,369,3.985]],["title/modules/SceneModule.html",[178,1.663,370,1.868]],["body/modules/SceneModule.html",[1,2.239,3,0.333,4,0.333,8,0.276,17,0.039,115,0.633,116,0.393,118,2.62,128,0.333,131,0.118,155,1.121,166,0.029,167,0.029,179,2.857,180,1.502,181,2.34,185,2.34,186,1.84,187,1.84,189,2.34,190,2.34,191,2.34,355,3.184,360,2.577,362,2.607,363,3.871,364,3.044,365,3.044,366,3.044,367,1.016,368,3.044,370,3.831,371,3.044,372,3.044,373,3.044,374,3.044,375,3.184,376,3.687,377,2.929,378,1.84,379,4.689,380,3.687,381,3.687,382,3.687]],["title/components/SidebarContainerComponent.html",[0,0.909,151,1.218]],["body/components/SidebarContainerComponent.html",[0,0.83,1,0.468,2,1.057,3,0.114,4,0.114,5,2.723,6,0.792,7,0.792,8,0.095,10,0.954,12,0.516,13,1.574,14,2.56,17,0.039,18,1.773,22,2.664,23,1.773,24,1.505,25,2.929,26,2.891,27,3.148,28,2.131,31,1.939,33,1.705,35,3.148,40,1.939,46,1.773,49,0.901,50,3.148,54,0.516,57,1.939,61,1.057,64,0.616,65,0.644,70,0.644,72,1.958,74,0.71,78,1.168,80,0.752,81,0.775,82,0.594,83,0.493,85,1.121,86,1.697,89,1.177,90,1.31,93,1.228,98,0.349,111,0.717,115,0.291,116,0.135,128,0.114,130,1.596,131,0.041,141,0.792,142,1.323,143,0.863,144,0.316,145,0.792,146,0.792,147,0.516,148,0.792,149,1.657,150,0.792,151,1.299,152,3.041,153,0.792,154,0.425,155,0.385,156,0.468,157,0.425,158,0.792,159,0.468,160,0.792,161,0.468,162,0.792,163,0.468,164,0.571,165,0.792,166,0.013,167,0.013,176,1.749,225,1.939,236,1.444,253,1.831,256,1.972,257,1.047,259,2.632,265,0.633,266,0.633,267,0.633,274,1.517,279,1.323,280,1.178,290,1.913,311,0.901,314,2.253,319,2.632,345,1.749,349,2.927,352,2.253,353,0.954,378,0.633,383,4.333,384,1.047,385,2.729,386,1.939,387,2.119,388,2.119,389,3.188,390,3.833,391,2.729,392,4.431,393,2.729,394,1.939,395,2.729,396,3.833,397,4.431,398,4.431,399,2.729,400,2.729,401,2.729,402,2.729,403,3.546,404,2.729,405,5.193,406,3.833,407,4.431,408,2.729,409,2.729,410,3.833,411,3.833,412,4.068,413,4.806,414,4.806,415,4.806,416,4.806,417,2.729,418,2.729,419,3.188,420,3.188,421,2.119,422,3.188,423,3.188,424,2.265,425,2.729,426,2.729,427,2.729,428,2.729,429,2.729,430,2.729,431,1.268,432,2.265,433,1.939,434,2.119,435,2.119,436,1.268,437,1.268,438,1.268,439,1.268,440,1.268,441,1.268,442,1.268,443,1.268,444,2.119,445,2.119,446,2.119,447,2.119,448,1.268,449,2.119,450,2.729,451,3.188,452,2.119,453,2.119,454,1.268,455,2.119,456,2.119,457,2.119,458,1.268,459,2.119,460,3.833,461,1.268,462,2.119,463,2.265,464,1.268,465,0.901,466,1.268,467,1.268,468,1.268,469,1.268,470,1.047,471,0.901,472,1.268,473,1.268,474,1.268,475,0.792,476,1.268,477,1.268,478,1.047,479,3.188,480,1.268,481,2.729,482,1.268,483,1.268,484,1.268,485,1.268,486,2.119,487,2.119,488,2.119,489,1.268,490,1.268,491,1.268,492,1.268,493,1.268,494,1.268,495,1.047,496,1.268,497,1.268,498,1.268,499,1.268,500,1.268,501,1.749,502,1.268,503,1.268,504,2.119,505,1.268,506,2.729,507,1.268,508,3.188,509,2.729,510,2.729,511,2.729,512,1.268,513,1.047,514,1.268,515,1.268,516,1.268,517,2.119,518,3.546,519,1.268,520,3.188,521,1.268,522,1.268,523,1.268,524,1.268,525,2.119,526,2.119,527,1.268,528,1.268,529,1.268,530,1.268,531,2.119,532,4.068,533,1.268,534,1.268,535,1.268,536,1.268,537,1.268,538,3.188,539,1.268,540,1.268,541,1.268,542,1.268,543,1.268,544,1.268,545,1.268,546,1.268,547,1.268,548,1.268,549,1.268,550,1.268,551,1.505,552,1.268,553,2.729,554,2.119,555,1.268,556,1.268,557,1.268,558,1.268,559,1.268,560,3.833,561,1.268,562,1.268,563,1.268,564,1.268,565,1.268,566,1.268,567,1.268,568,1.268,569,1.268,570,1.268,571,1.268,572,1.268,573,1.268,574,1.268,575,1.268,576,2.119,577,1.268,578,1.268,579,1.268,580,1.268,581,1.268]],["title/interfaces/SidebarItem.html",[29,1.868,129,1.346]],["body/interfaces/SidebarItem.html",[0,1.167,1,1.01,3,0.247,4,0.247,5,1.942,8,0.204,9,1.942,10,1.23,11,2.397,13,0.916,14,1.364,15,2.257,16,2.257,17,0.039,18,2.817,19,2.257,20,2.257,21,2.257,22,2.397,23,2.466,24,3.151,25,1.915,26,2.727,27,1.942,28,1.52,29,3.004,30,3.168,31,2.727,32,3.168,33,2.397,34,3.97,35,3.151,36,3.661,37,3.168,38,3.168,39,2.257,40,2.727,41,2.257,42,2.257,43,3.168,44,2.257,45,2.257,46,2.674,47,4.453,48,3.168,49,1.942,50,1.942,51,2.257,52,2.257,53,2.257,54,1.113,55,2.257,56,2.257,57,1.942,58,3.168,59,2.257,60,2.257,61,1.364,62,2.257,63,2.257,64,0.439,65,1.167,66,2.257,67,2.257,68,2.257,69,1.942,71,1.708,72,1.638,73,2.257,74,0.916,76,3.661,77,3.661,81,1.131,82,0.594,88,2.134,91,2.257,93,2.364,95,3.661,96,4.619,97,2.257,98,1.542,99,2.257,100,4.619,101,3.168,102,2.257,103,3.168,104,2.257,105,2.257,106,3.168,107,2.257,108,3.168,109,2.257,111,1.258,112,2.257,113,1.942,115,0.56,116,0.291,117,3.168,118,1.942,119,3.168,120,2.257,121,2.257,122,2.257,123,2.257,124,2.257,125,1.23,126,2.257,127,1.942,128,0.346,129,1.23,130,1.996,131,0.087,132,3.168,133,2.257,134,2.257,135,2.257,136,2.257,137,2.257,138,2.257,139,2.257,140,2.257,166,0.024,167,0.024,582,1.942]],["title/modules/SidebarModule.html",[178,1.663,375,1.663]],["body/modules/SidebarModule.html",[3,0.349,4,0.349,8,0.289,17,0.038,115,0.605,116,0.412,128,0.349,131,0.124,149,2.485,151,2.485,152,2.151,159,2.253,166,0.03,167,0.03,180,1.575,181,2.411,185,2.411,186,1.93,187,1.93,189,2.411,190,2.411,191,2.411,311,2.748,362,2.151,375,3.406,377,3.018,378,1.93,583,3.193,584,3.193,585,3.193,586,3.868,587,3.868,588,3.868,589,3.868]],["title/injectables/SvgHttpLoader.html",[195,1.218,590,1.493]],["body/injectables/SvgHttpLoader.html",[3,0.357,4,0.357,8,0.295,17,0.038,64,0.635,70,1.489,74,1.325,78,1.101,80,1.35,81,0.99,82,0.606,83,0.885,85,1.089,88,3.094,111,1.251,115,0.567,116,0.421,125,1.779,128,0.442,131,0.157,166,0.03,167,0.03,195,1.995,197,2.469,236,1.61,318,2.808,367,1.35,590,2.444,591,1.642,592,2.808,593,4.043,594,2.055,595,4.043,596,3.953,597,4.593,598,3.953,599,4.043,600,4.394,601,3.953,602,3.953,603,2.808,604,3.263,605,4.043,606,3.263,607,3.263,608,3.263,609,3.263]],["title/components/SvgIconComponent.html",[0,0.909,154,1.002]],["body/components/SvgIconComponent.html",[0,0.799,1,0.445,2,1.012,3,0.109,4,0.109,6,0.752,7,0.752,8,0.09,10,0.913,11,1.642,12,0.49,13,1.546,14,1.982,17,0.039,18,1.462,23,1.462,25,1.312,28,0.669,46,1.715,54,0.826,61,1.012,64,0.193,65,0.617,70,0.617,71,1.927,72,2.164,74,0.68,78,1.259,80,1.272,81,1.069,82,0.669,83,0.834,85,1.413,86,1.738,89,1.139,90,1.745,93,1.55,98,1.237,111,1.284,115,0.28,116,0.128,125,0.542,128,0.109,130,0.913,131,0.099,141,0.752,142,1.267,143,1.257,144,0.3,145,0.752,146,0.752,147,0.49,148,0.752,149,0.49,150,0.752,151,0.49,152,0.669,153,0.752,154,1.034,155,1.494,156,0.445,157,0.403,158,0.752,159,0.445,160,0.752,161,0.445,162,0.752,163,0.445,164,0.542,165,0.752,166,0.012,167,0.012,218,1.715,219,1.462,220,1.715,240,0.855,249,3.05,253,2.38,256,1.128,265,1.012,266,1.012,267,1.012,274,1.462,279,1.267,280,1.128,281,0.855,290,2.239,294,0.752,312,0.855,313,1.267,353,1.183,367,1.55,386,1.868,394,1.441,424,2.192,432,2.192,463,2.192,465,1.868,475,0.752,551,0.855,591,1.885,610,0.855,611,2.17,612,2.17,613,2.17,614,2.028,615,2.028,616,2.546,617,2.028,618,2.546,619,2.028,620,2.546,621,2.546,622,2.17,623,2.028,624,2.17,625,2.028,626,2.628,627,2.17,628,2.17,629,2.17,630,2.546,631,2.17,632,3.085,633,3.081,634,2.028,635,2.17,636,2.546,637,2.17,638,1.388,639,2.17,640,2.028,641,1.204,642,1.204,643,1.204,644,1.204,645,1.204,646,1.204,647,1.204,648,2.028,649,1.204,650,1.204,651,2.17,652,1.204,653,1.674,654,3.279,655,1.204,656,1.204,657,1.204,658,1.674,659,1.204,660,3.443,661,1.204,662,1.674,663,2.481,664,1.204,665,1.204,666,1.674,667,1.204,668,1.204,669,1.204,670,1.204,671,1.204,672,1.204,673,2.17,674,2.17,675,2.843,676,2.447,677,1.204,678,2.17,679,1.204,680,2.028,681,2.028,682,1.204,683,1.204,684,1.204,685,2.17,686,1.204,687,1.674,688,1.674,689,1.204,690,1.204,691,2.628,692,1.927,693,1.204,694,1.204,695,2.17,696,2.546,697,1.674,698,1.674,699,0.752,700,0.994,701,0.994,702,0.855,703,0.994,704,0.994,705,2.546,706,0.994,707,0.994,708,0.994,709,0.994,710,0.994,711,1.674,712,2.843,713,0.994,714,2.17,715,2.17,716,2.17,717,2.17,718,0.994,719,0.994,720,2.843,721,0.994,722,1.674,723,0.994,724,2.17,725,2.17,726,2.546,727,0.994,728,2.17,729,0.994,730,0.994,731,0.994,732,2.546,733,2.17,734,2.17,735,1.674,736,0.994,737,0.994,738,0.994,739,1.674,740,0.994,741,0.994,742,0.994,743,0.994,744,2.546,745,0.994,746,2.17,747,1.674,748,1.674,749,0.994,750,0.994,751,1.674,752,1.674,753,0.994,754,0.994,755,0.994,756,0.994,757,0.994,758,0.994,759,0.994,760,0.994,761,1.674,762,1.674,763,2.546,764,0.994,765,0.994,766,2.17,767,0.994,768,2.17,769,0.994,770,1.674,771,1.674,772,2.546,773,0.994,774,0.994,775,0.994,776,2.843,777,0.994,778,0.994,779,0.994,780,0.994,781,0.994,782,0.994,783,0.994,784,0.994,785,0.994,786,1.868,787,2.17,788,0.994,789,1.674,790,0.994,791,1.441,792,0.994,793,0.994,794,0.994,795,0.994,796,2.546,797,0.994,798,0.994,799,1.674,800,2.546,801,0.994,802,0.994,803,0.994,804,0.994,805,1.674,806,1.674]],["title/interfaces/SvgIconConfig.html",[129,1.346,807,1.868]],["body/interfaces/SvgIconConfig.html",[3,0.354,4,0.354,8,0.293,17,0.039,64,0.63,65,1.482,82,0.485,83,0.881,98,1.081,115,0.608,116,0.418,128,0.44,129,1.765,131,0.125,154,1.777,155,1.613,166,0.03,167,0.03,189,1.957,190,1.957,191,2.647,236,1.597,360,2.194,362,2.18,367,1.081,377,3.045,378,1.957,582,2.786,590,2.432,591,1.314,594,1.8,699,2.449,807,3.313,808,2.786,809,3.564,810,4.58,811,4.023,812,2.71,813,3.237,814,3.237,815,3.237,816,3.237,817,3.237,818,3.237,819,2.449,820,3.237]],["title/classes/SvgIconHelper.html",[131,0.096,692,1.868]],["body/classes/SvgIconHelper.html",[0,0.839,3,0.159,4,0.159,8,0.131,10,0.791,11,1.724,13,0.589,14,0.877,17,0.039,18,1.896,23,1.896,25,1.701,28,0.977,54,1.124,61,0.877,64,0.282,65,0.839,71,1.097,72,2.038,74,0.589,78,0.869,81,0.781,82,0.422,83,0.499,86,0.589,89,0.649,90,1.722,93,1.739,98,1.229,111,1.216,115,0.363,116,0.187,125,0.791,128,0.159,131,0.088,143,0.716,154,0.589,155,1.602,166,0.017,167,0.017,169,1.097,218,1.535,219,0.977,220,1.535,240,1.248,249,3.04,253,2.557,256,1.535,265,1.377,266,1.377,267,1.377,274,1.535,290,2.537,294,1.097,312,1.248,313,1.724,353,1.243,367,1.157,386,1.961,394,1.961,424,1.248,432,1.961,463,1.961,465,1.961,475,1.097,551,1.248,591,1.408,610,1.248,611,2.279,612,1.45,613,1.45,616,1.45,618,1.45,620,1.45,621,1.45,622,1.45,624,1.45,627,1.45,628,1.45,629,1.45,630,2.279,631,1.45,633,3.19,635,1.45,636,2.279,637,1.45,638,1.243,639,1.45,651,1.45,653,1.45,654,3.168,658,1.45,660,3.85,662,1.45,663,2.13,666,1.45,673,1.45,674,1.45,675,2.815,676,2.423,678,2.279,685,1.45,687,1.45,688,1.45,692,2.414,695,2.279,696,3.19,697,2.815,698,2.815,699,1.097,700,2.815,701,2.815,702,2.423,703,1.45,704,1.45,705,3.19,706,1.45,707,1.45,708,1.45,709,1.45,710,1.45,711,2.279,712,3.467,713,1.45,714,2.815,715,2.815,716,2.815,717,2.815,718,1.45,719,1.45,720,3.467,721,1.45,722,2.279,723,1.45,724,2.815,725,2.815,726,3.19,727,1.45,728,2.815,729,1.45,730,1.45,731,1.45,732,3.19,733,2.815,734,2.815,735,2.279,736,1.45,737,1.45,738,1.45,739,2.279,740,1.45,741,1.45,742,1.45,743,1.45,744,3.19,745,1.45,746,2.815,747,2.279,748,2.279,749,1.45,750,1.45,751,2.279,752,2.279,753,1.45,754,1.45,755,1.45,756,1.45,757,1.45,758,1.45,759,1.45,760,1.45,761,2.279,762,2.279,763,3.19,764,1.45,765,1.45,766,2.815,767,1.45,768,2.815,769,1.45,770,2.279,771,2.279,772,3.19,773,1.45,774,1.45,775,1.45,776,3.467,777,1.45,778,1.45,779,1.45,780,1.45,781,1.45,782,1.45,783,1.45,784,1.45,785,1.45,786,2.423,787,2.815,788,1.45,789,2.279,790,1.45,791,1.961,792,1.45,793,1.45,794,1.45,795,1.45,796,3.19,797,1.45,798,1.45,799,2.279,800,3.19,801,1.45,802,1.45,803,1.45,804,1.45,805,2.279,806,2.279,821,1.757,822,1.757,823,1.757,824,1.757]],["title/modules/SvgIconModule.html",[178,1.663,360,1.346]],["body/modules/SvgIconModule.html",[3,0.33,4,0.33,8,0.273,17,0.039,70,1.111,78,0.821,80,1.007,81,0.738,82,0.452,83,0.66,85,1.007,89,1.349,90,1.349,98,1.007,115,0.595,116,0.389,128,0.421,129,1.644,131,0.117,154,2.029,155,1.561,166,0.029,167,0.029,180,1.488,181,2.326,185,2.326,186,1.823,187,1.823,189,2.326,190,2.326,191,2.562,236,1.488,360,2.646,362,2.031,367,1.285,377,2.912,378,1.823,590,2.326,591,1.562,594,1.722,699,2.282,807,3.378,808,2.596,809,2.912,810,3.848,811,4.238,812,2.592,813,3.016,814,3.848,815,3.848,816,3.848,817,3.016,818,3.016,819,2.282,820,3.016,825,3.016,826,3.016,827,3.016,828,3.653,829,3.653]],["title/injectables/SvgIconRegistryService.html",[195,1.218,638,1.346]],["body/injectables/SvgIconRegistryService.html",[3,0.193,4,0.193,8,0.16,17,0.039,64,0.344,65,0.976,70,0.976,72,2.037,74,1.076,78,1.157,80,1.265,81,1.187,82,0.596,83,0.984,85,1.181,86,1.076,88,2.682,89,1.424,90,1.424,98,1.45,111,1.327,115,0.489,116,0.228,125,0.963,127,1.52,128,0.387,131,0.068,155,1.739,166,0.02,167,0.02,195,1.308,197,1.336,236,2.144,249,1.189,253,2.171,262,1.52,353,2.413,367,1.45,378,1.067,433,3.263,470,1.766,471,2.282,478,1.766,495,2.651,591,1.764,594,1.781,603,4.034,638,2.067,654,2.282,663,3.125,702,2.739,786,2.739,809,2.677,812,1.189,819,1.336,830,1.336,831,3.74,832,3.855,833,3.855,834,3.211,835,3.211,836,3.855,837,3.211,838,2.139,839,3.791,840,3.855,841,3.211,842,3.211,843,4.285,844,2.139,845,3.211,846,5.146,847,3.211,848,3.211,849,2.139,850,3.211,851,3.211,852,5.002,853,2.139,854,2.139,855,3.211,856,3.211,857,2.139,858,2.139,859,2.139,860,3.537,861,2.651,862,2.139,863,2.139,864,2.139,865,2.139,866,3.211,867,3.211,868,2.139,869,2.282,870,1.766,871,2.139,872,2.139,873,2.139,874,2.139,875,2.139,876,3.855,877,3.211,878,3.211,879,3.211,880,3.211,881,3.211,882,2.139,883,2.139,884,3.211,885,2.139,886,2.139,887,2.139,888,2.139,889,2.139,890,2.139,891,2.139,892,2.139,893,2.139,894,3.211,895,2.139,896,3.211,897,3.211,898,3.211,899,3.855,900,2.139,901,2.139,902,2.139,903,2.139,904,2.139,905,2.139,906,2.139,907,2.139,908,2.139,909,2.139,910,2.139,911,2.006,912,2.651,913,2.139,914,1.766,915,1.766]],["title/classes/SvgLoader.html",[131,0.096,594,1.105]],["body/classes/SvgLoader.html",[3,0.367,4,0.367,8,0.304,17,0.039,64,0.653,70,1.516,78,0.914,80,1.121,81,0.822,82,0.503,83,0.735,85,1.121,88,3.125,111,1.263,115,0.574,116,0.433,125,1.83,128,0.45,131,0.159,166,0.031,167,0.031,169,2.54,195,2.03,236,1.656,318,2.889,367,1.374,590,2.029,591,1.671,592,2.889,593,3.357,594,1.991,595,4.115,597,4.115,599,3.357,600,4.45,603,2.889,604,3.357,605,4.638,606,3.357,607,3.357,608,3.357,609,3.357,916,4.066]],["title/coverage.html",[917,3.372]],["body/coverage.html",[0,1.669,1,1.276,8,0.258,9,3.195,17,0.038,22,2.809,25,3.058,29,2.158,82,0.427,98,1.459,129,2.024,131,0.16,144,1.32,147,1.407,149,1.407,151,1.407,154,1.158,157,1.158,159,1.276,161,1.276,163,1.276,166,0.028,167,0.028,168,2.455,170,2.852,195,2.037,196,1.921,198,2.852,262,2.455,273,2.852,305,2.852,306,2.852,322,2.852,336,2.852,337,2.852,340,2.852,353,1.555,367,1.619,383,2.852,384,2.852,590,1.724,591,1.969,592,3.195,594,1.276,610,3.195,638,1.555,692,2.158,807,2.158,808,2.455,812,1.921,830,3.308,869,2.455,911,2.158,917,2.852,918,3.455,919,3.455,920,3.455,921,4.497,922,3.455,923,3.455,924,5.296,925,5,926,5,927,3.455,928,3.455,929,3.455,930,3.455,931,3.455,932,3.455,933,3.455,934,5.296,935,3.455,936,3.455,937,3.712,938,2.852,939,2.852,940,4.497,941,2.852,942,2.852,943,3.455,944,3.455]],["title/miscellaneous/functions.html",[945,1.56,946,2.97]],["body/miscellaneous/functions.html",[17,0.035,64,0.721,80,1.238,81,0.908,82,0.555,83,0.812,98,1.458,111,1.19,166,0.033,167,0.033,209,4.368,367,1.238,433,3.76,591,1.505,594,1.954,638,2.382,809,3.305,830,3.305,831,3.76,839,4.368,911,3.305,912,3.708,945,2.806,946,3.708,947,3.708,948,4.492]],["title/index.html",[64,0.401,949,2.497,950,2.497]],["body/index.html",[2,2.709,17,0.033,166,0.033,167,0.033,791,3.858,951,5.43,952,4.694,953,4.694,954,5.43,955,4.694,956,5.43,957,4.694,958,4.694,959,4.694]],["title/modules.html",[180,1.664]],["body/modules.html",[17,0.033,155,1.811,166,0.033,167,0.033,179,2.288,180,1.868,355,2.55,360,2.064,370,2.864,375,2.55,960,5.957,961,5.957,962,5.957]],["title/overview.html",[963,3.372]],["body/overview.html",[1,2.107,2,1.692,17,0.038,147,2.324,149,2.324,151,2.324,154,1.912,156,1.252,157,1.912,159,2.107,161,2.107,163,2.107,166,0.027,167,0.027,169,2.117,179,3.005,180,1.381,181,2.216,182,2.798,183,2.798,184,2.798,185,2.216,186,1.692,187,1.692,197,2.117,355,3.285,356,2.798,357,2.798,358,2.798,359,2.798,360,2.568,370,3.762,371,2.798,372,2.798,373,2.798,374,2.798,375,3.331,582,2.409,583,2.798,584,2.798,585,2.798,825,2.798,826,2.798,827,2.798,963,2.798,964,4.442,965,3.39,966,4.442,967,3.39]],["title/miscellaneous/variables.html",[945,1.56,968,2.97]],["body/miscellaneous/variables.html",[17,0.039,54,1.847,64,0.562,82,0.432,83,0.909,85,1.249,89,1.965,90,1.965,93,1.574,98,1.386,130,2.04,166,0.028,167,0.028,225,2.485,236,2.049,244,4.152,249,1.945,256,1.945,265,2.262,266,2.262,267,2.262,313,2.832,353,2.481,367,0.964,471,2.485,475,2.832,501,2.887,513,2.887,591,1.172,594,1.292,638,2.04,663,3.142,676,2.485,812,2.521,819,2.185,830,3.142,831,2.485,860,4.152,861,2.887,869,3.573,870,2.887,911,2.185,914,2.887,915,2.887,937,3.742,938,3.742,939,3.742,941,3.742,942,3.742,945,2.185,947,3.742,968,2.887,969,4.533,970,5.321,971,3.498,972,4.533,973,3.498,974,3.498,975,4.533,976,4.533,977,3.498,978,5.321,979,5.029,980,3.498,981,3.498,982,3.498,983,3.498,984,3.498,985,3.498,986,3.498,987,3.498]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":25,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"coverage.html":{}}}],["0.3",{"_index":416,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["0.3s",{"_index":413,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["0.75",{"_index":401,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["0/1",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":399,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["1",{"_index":405,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["1/1",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":22,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"coverage.html":{}}}],["11/64",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":36,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["17",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":967,"title":{},"body":{"overview.html":{}}}],["200px",{"_index":52,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["22",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":966,"title":{},"body":{"overview.html":{}}}],["3px",{"_index":44,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["4",{"_index":965,"title":{},"body":{"overview.html":{}}}],["4/18",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["44px",{"_index":20,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["5",{"_index":964,"title":{},"body":{"overview.html":{}}}],["50",{"_index":42,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["55px",{"_index":34,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["_",{"_index":272,"title":{},"body":{"injectables/BemService.html":{}}}],["__",{"_index":227,"title":{},"body":{"injectables/BemService.html":{}}}],["__image",{"_index":39,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["__text",{"_index":30,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["_addsidebar(sidebar",{"_index":491,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_document",{"_index":840,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["_getcontentstyle",{"_index":507,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_isbrowser",{"_index":417,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_markforcheck",{"_index":419,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_mods",{"_index":276,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["_modserialized",{"_index":277,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["_onbackdropclicked",{"_index":552,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_onclick",{"_index":317,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["_ontoggle",{"_index":420,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_ref",{"_index":435,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_removesidebar(sidebar",{"_index":496,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_sidebar",{"_index":310,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["_sidebars",{"_index":418,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_subscribe",{"_index":421,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_subscribe(sidebar",{"_index":453,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_svgstyle",{"_index":612,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["_unsubscribe",{"_index":422,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["absolute",{"_index":396,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["abstract",{"_index":605,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["accessors",{"_index":634,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["accommodate",{"_index":503,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["account",{"_index":62,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["active",{"_index":100,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["actual_component",{"_index":165,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["adapted",{"_index":706,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["add",{"_index":845,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["adds",{"_index":485,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["addsvg",{"_index":834,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["addsvg(name",{"_index":842,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["aftercontentinit",{"_index":385,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["align",{"_index":38,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["allowsidebarbackdropcontrol",{"_index":425,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["angular",{"_index":312,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["angular/common",{"_index":378,"title":{},"body":{"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{}}}],["angular/common/http",{"_index":604,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["angular/core",{"_index":116,"title":{},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["angular/flex",{"_index":364,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["angular/packages/common/src/directives/ng_style.ts",{"_index":709,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["angular/router",{"_index":118,"title":{},"body":{"components/AppScene.html":{},"modules/SceneModule.html":{},"interfaces/SidebarItem.html":{}}}],["animate",{"_index":410,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["any).currentstyle.direction",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any).msstream",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.scene",{"_index":382,"title":{},"body":{"modules/SceneModule.html":{}}}],["applychanges",{"_index":614,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["applychanges(changes",{"_index":650,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["applyclass",{"_index":627,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["appscene",{"_index":1,"title":{"components/AppScene.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aria",{"_index":776,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["arial",{"_index":773,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["arr",{"_index":254,"title":{},"body":{"injectables/BemService.html":{}}}],["arr.foreach((key",{"_index":255,"title":{},"body":{"injectables/BemService.html":{}}}],["array",{"_index":176,"title":{},"body":{"classes/BemConfig.html":{},"components/SidebarContainerComponent.html":{}}}],["array.isarray(current",{"_index":802,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["array.isarray(mods",{"_index":252,"title":{},"body":{"injectables/BemService.html":{}}}],["array.isarray(previous",{"_index":797,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["assertion",{"_index":741,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["assets/icons/mdi/account.svg",{"_index":99,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["assets/icons/mdi/bag",{"_index":104,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["assets/icons/mdi/cog.svg",{"_index":109,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["assets/icons/mdi/play.svg",{"_index":102,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["assets/icons/mdi/store.svg",{"_index":107,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["attempt",{"_index":764,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["attribute",{"_index":289,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["attribute('cfblock",{"_index":292,"title":{},"body":{"directives/BlockDirective.html":{}}}],["attribute('cfelem",{"_index":332,"title":{},"body":{"directives/ElemDirective.html":{}}}],["attributename",{"_index":681,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["attributes",{"_index":780,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["attributes.length",{"_index":784,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["auto",{"_index":28,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["avatar",{"_index":95,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["avatar.state",{"_index":123,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["avatar/selected",{"_index":122,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["avatars/states/selected",{"_index":121,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["backdrop",{"_index":451,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["backdropclass",{"_index":426,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["backdropclick",{"_index":429,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["backdropclicked",{"_index":553,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["background",{"_index":57,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["based",{"_index":472,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["bem.service",{"_index":291,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["bem/bem.module",{"_index":366,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["bemconfig",{"_index":168,"title":{"classes/BemConfig.html":{}},"body":{"classes/BemConfig.html":{},"coverage.html":{}}}],["bemmodule",{"_index":179,"title":{"modules/BemModule.html":{}},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules.html":{},"overview.html":{}}}],["bemservice",{"_index":196,"title":{"injectables/BemService.html":{}},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"coverage.html":{}}}],["bezier(0",{"_index":415,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["blended",{"_index":851,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["block",{"_index":33,"title":{},"body":{"components/AppScene.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["block.directive",{"_index":192,"title":{},"body":{"modules/BemModule.html":{},"directives/ElemDirective.html":{}}}],["block.name",{"_index":334,"title":{},"body":{"directives/ElemDirective.html":{}}}],["blockdirective",{"_index":157,"title":{"directives/BlockDirective.html":{}},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blockname",{"_index":208,"title":{},"body":{"injectables/BemService.html":{},"directives/ElemDirective.html":{}}}],["blog",{"_index":341,"title":{},"body":{"components/NavbarComponent.html":{}}}],["boolean",{"_index":130,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"miscellaneous/variables.html":{}}}],["border",{"_index":40,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["bottom",{"_index":397,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["bottom}px",{"_index":544,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["box",{"_index":390,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["break",{"_index":538,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["browse",{"_index":962,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":960,"title":{},"body":{"modules.html":{}}}],["button",{"_index":55,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["calc(100vh",{"_index":19,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["can't",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":259,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{}}}],["cases",{"_index":893,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["catcherror",{"_index":865,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["catcherror((err",{"_index":903,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["cdr",{"_index":639,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["central",{"_index":119,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["cf",{"_index":14,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["cfblock",{"_index":275,"title":{},"body":{"directives/BlockDirective.html":{}}}],["cfblock]'},{'name",{"_index":158,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["cfclosesidebar",{"_index":307,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["cfclosesidebar]'},{'name",{"_index":160,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["cfelem",{"_index":323,"title":{},"body":{"directives/ElemDirective.html":{}}}],["cfelem]'},{'name",{"_index":162,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["cfmod",{"_index":164,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["change",{"_index":445,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["changedetection",{"_index":387,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":469,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":388,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["changedetectorref",{"_index":432,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord",{"_index":668,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["changerecord.applyclass",{"_index":723,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.klass",{"_index":731,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.klass.currentvalue",{"_index":735,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.klass.previousvalue",{"_index":734,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.name",{"_index":719,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.src",{"_index":718,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.stretch",{"_index":721,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.svgarialabel",{"_index":737,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.svgclass",{"_index":727,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.svgclass.currentvalue",{"_index":730,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.svgclass.previousvalue",{"_index":729,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.viewbox",{"_index":736,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes",{"_index":465,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes.foreachaddeditem",{"_index":788,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes.foreachchangeditem",{"_index":790,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes.foreachremoveditem",{"_index":785,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes['showbackdrop",{"_index":482,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["check",{"_index":449,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["class",{"_index":131,"title":{"classes/BemConfig.html":{},"classes/SvgIconHelper.html":{},"classes/SvgLoader.html":{}},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["classes",{"_index":169,"title":{},"body":{"classes/BemConfig.html":{},"classes/SvgIconHelper.html":{},"classes/SvgLoader.html":{},"overview.html":{}}}],["click",{"_index":316,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["clicked",{"_index":548,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["close",{"_index":587,"title":{},"body":{"modules/SidebarModule.html":{}}}],["closeonclickbackdrop",{"_index":549,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["closes",{"_index":547,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["closesidebardirective",{"_index":159,"title":{"directives/CloseSidebarDirective.html":{}},"body":{"components/AppScene.html":{},"directives/CloseSidebarDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cls",{"_index":245,"title":{},"body":{"injectables/BemService.html":{}}}],["cluster_bemmodule",{"_index":182,"title":{},"body":{"modules/BemModule.html":{},"overview.html":{}}}],["cluster_bemmodule_declarations",{"_index":183,"title":{},"body":{"modules/BemModule.html":{},"overview.html":{}}}],["cluster_bemmodule_exports",{"_index":184,"title":{},"body":{"modules/BemModule.html":{},"overview.html":{}}}],["cluster_navbarmodule",{"_index":356,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_declarations",{"_index":359,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_exports",{"_index":358,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_imports",{"_index":357,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_scenemodule",{"_index":371,"title":{},"body":{"modules/SceneModule.html":{},"overview.html":{}}}],["cluster_scenemodule_declarations",{"_index":374,"title":{},"body":{"modules/SceneModule.html":{},"overview.html":{}}}],["cluster_scenemodule_exports",{"_index":372,"title":{},"body":{"modules/SceneModule.html":{},"overview.html":{}}}],["cluster_scenemodule_imports",{"_index":373,"title":{},"body":{"modules/SceneModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule",{"_index":583,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declarations",{"_index":584,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_exports",{"_index":585,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_svgiconmodule",{"_index":825,"title":{},"body":{"modules/SvgIconModule.html":{},"overview.html":{}}}],["cluster_svgiconmodule_declarations",{"_index":827,"title":{},"body":{"modules/SvgIconModule.html":{},"overview.html":{}}}],["cluster_svgiconmodule_exports",{"_index":826,"title":{},"body":{"modules/SvgIconModule.html":{},"overview.html":{}}}],["color",{"_index":47,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["commonmodule",{"_index":377,"title":{},"body":{"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["component",{"_index":0,"title":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"coverage.html":{}}}],["component_template",{"_index":145,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["computes",{"_index":499,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["config",{"_index":816,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["config.loader",{"_index":818,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["console.error(err",{"_index":904,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["const",{"_index":253,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["constructor",{"_index":74,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["constructor(_ref",{"_index":431,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["constructor(_sidebar",{"_index":308,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["constructor(element",{"_index":281,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{}}}],["constructor(http",{"_index":596,"title":{},"body":{"injectables/SvgHttpLoader.html":{}}}],["constructor(loader",{"_index":838,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["constructor(private",{"_index":318,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["constructor(router",{"_index":75,"title":{},"body":{"components/AppScene.html":{}}}],["container",{"_index":389,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container's",{"_index":486,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container'},{'name",{"_index":153,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["container.component",{"_index":589,"title":{},"body":{"modules/SidebarModule.html":{}}}],["container.component.ts",{"_index":384,"title":{},"body":{"components/SidebarContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:109",{"_index":461,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:117",{"_index":464,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:127",{"_index":466,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:267",{"_index":454,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:283",{"_index":458,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:301",{"_index":448,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:320",{"_index":443,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:87",{"_index":437,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:89",{"_index":436,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:90",{"_index":440,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:91",{"_index":442,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:92",{"_index":441,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:94",{"_index":439,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:95",{"_index":438,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:97",{"_index":467,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:99",{"_index":434,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["content",{"_index":49,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["contentclass",{"_index":427,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["contents",{"_index":502,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["convert",{"_index":765,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["copyngcontentattribute",{"_index":615,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["copyngcontentattribute(hostelem",{"_index":653,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["coverage",{"_index":917,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":528,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["cssstyledeclaration",{"_index":506,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["cubic",{"_index":414,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["current",{"_index":676,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["current.split",{"_index":803,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["data",{"_index":843,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["declarations",{"_index":189,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["default",{"_index":89,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":78,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["dependencies",{"_index":181,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"overview.html":{}}}],["deps",{"_index":914,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["destroy",{"_index":616,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["detection",{"_index":446,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["developers",{"_index":342,"title":{},"body":{"components/NavbarComponent.html":{}}}],["device",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["differ",{"_index":701,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["differs",{"_index":635,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["dir",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directive",{"_index":144,"title":{"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{}},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{}}}],["directives",{"_index":156,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"overview.html":{}}}],["disable",{"_index":266,"title":{},"body":{"injectables/BemService.html":{},"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":31,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["div",{"_index":877,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["div.innerhtml",{"_index":879,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["div.queryselector('svg",{"_index":880,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["doaria",{"_index":617,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["doaria(label",{"_index":658,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["docheck",{"_index":611,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["document",{"_index":831,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["document.body",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":340,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["el",{"_index":226,"title":{},"body":{"injectables/BemService.html":{}}}],["elem",{"_index":732,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["elem.directive",{"_index":193,"title":{},"body":{"modules/BemModule.html":{}}}],["elem.firstchild.hasattribute('aria",{"_index":778,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["elem.innerhtml",{"_index":751,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["elemdirective",{"_index":161,"title":{"directives/ElemDirective.html":{}},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":143,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["element.nativeelement",{"_index":238,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["elementref",{"_index":218,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["elemname",{"_index":204,"title":{},"body":{"injectables/BemService.html":{}}}],["elemsvg",{"_index":716,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["entire",{"_index":516,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["environment",{"_index":344,"title":{},"body":{"components/NavbarComponent.html":{}}}],["escape",{"_index":269,"title":{},"body":{"injectables/BemService.html":{}}}],["eslint",{"_index":265,"title":{},"body":{"injectables/BemService.html":{},"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":476,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["eslint/no",{"_index":313,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":135,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["eventemitter",{"_index":349,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{}}}],["events",{"_index":403,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["execute",{"_index":959,"title":{},"body":{"index.html":{}}}],["explicit",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":128,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["exports",{"_index":190,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["extends",{"_index":593,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["factory/agent",{"_index":120,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["factory/core",{"_index":124,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["factory/ng",{"_index":474,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["false",{"_index":93,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["fill",{"_index":60,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["filter",{"_index":126,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["filter((klass",{"_index":799,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["finalize",{"_index":866,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["flexlayoutmodule",{"_index":363,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["forroot",{"_index":815,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["forroot(config",{"_index":828,"title":{},"body":{"modules/SvgIconModule.html":{}}}],["function",{"_index":262,"title":{},"body":{"injectables/BemService.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{}}}],["functionality",{"_index":892,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["functions",{"_index":946,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generateclass",{"_index":199,"title":{},"body":{"injectables/BemService.html":{}}}],["generateclass(blockname",{"_index":203,"title":{},"body":{"injectables/BemService.html":{}}}],["generated",{"_index":953,"title":{},"body":{"index.html":{}}}],["getcomputedstyle(document.body",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getpropertyvalue('direction",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsvg",{"_index":595,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["getsvg(url",{"_index":600,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["getsvgbyname",{"_index":835,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["getsvgbyname(name",{"_index":848,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["getting",{"_index":949,"title":{"index.html":{}},"body":{}}],["h",{"_index":768,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["hasopen",{"_index":576,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["height",{"_index":18,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["heightstyle",{"_index":509,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["helper",{"_index":613,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["hidden",{"_index":394,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["host",{"_index":314,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{}}}],["hostelem",{"_index":656,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["hostelem.attributes",{"_index":781,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["hover",{"_index":43,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["html",{"_index":142,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["htmlelement",{"_index":673,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["http",{"_index":599,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["httpclient",{"_index":597,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["https://github.com/central",{"_index":473,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["icnsub",{"_index":700,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["icon",{"_index":98,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["icon.component",{"_index":813,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["icon.component.ts",{"_index":610,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"coverage.html":{}}}],["icon.component.ts:133",{"_index":665,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:143",{"_index":661,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:161",{"_index":664,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:168",{"_index":657,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:175",{"_index":671,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:181",{"_index":689,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:236",{"_index":655,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:24",{"_index":824,"title":{},"body":{"classes/SvgIconHelper.html":{}}}],["icon.component.ts:248",{"_index":682,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:25",{"_index":822,"title":{},"body":{"classes/SvgIconHelper.html":{}}}],["icon.component.ts:259",{"_index":690,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:26",{"_index":821,"title":{},"body":{"classes/SvgIconHelper.html":{}}}],["icon.component.ts:27",{"_index":823,"title":{},"body":{"classes/SvgIconHelper.html":{}}}],["icon.component.ts:271",{"_index":652,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:286",{"_index":686,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:301",{"_index":677,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:326",{"_index":659,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:35",{"_index":644,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:36",{"_index":643,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:37",{"_index":645,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:38",{"_index":641,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:39",{"_index":647,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:41",{"_index":642,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:42",{"_index":649,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:43",{"_index":646,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:47",{"_index":648,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:54",{"_index":693,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:55",{"_index":640,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:65",{"_index":670,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:69",{"_index":669,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:73",{"_index":667,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.getattribute('height",{"_index":769,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["icon.getattribute('width",{"_index":767,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["icon.module",{"_index":368,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["icon.module.ts",{"_index":808,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"coverage.html":{}}}],["icon.module.ts:17",{"_index":829,"title":{},"body":{"modules/SvgIconModule.html":{}}}],["icon/svg",{"_index":367,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["icon__svg",{"_index":59,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["iconreg",{"_index":637,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["iconsbyurl",{"_index":832,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["iconsloadingbyurl",{"_index":833,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["identifier",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["ignorevalues",{"_index":171,"title":{},"body":{"classes/BemConfig.html":{},"injectables/BemService.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["import",{"_index":115,"title":{},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["imports",{"_index":362,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["index",{"_index":64,"title":{"index.html":{}},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["inherited",{"_index":601,"title":{},"body":{"injectables/SvgHttpLoader.html":{}}}],["init",{"_index":618,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["initsvg",{"_index":619,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["initsvg(svg",{"_index":662,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["inject",{"_index":470,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{}}}],["inject(document",{"_index":873,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["inject(platform_id",{"_index":478,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{}}}],["inject(server_url",{"_index":871,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["injectable",{"_index":195,"title":{"injectables/BemService.html":{},"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{}},"body":{"injectables/BemService.html":{},"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["injectables",{"_index":197,"title":{},"body":{"injectables/BemService.html":{},"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":860,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('server_url",{"_index":870,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":32,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["input",{"_index":290,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["input('class",{"_index":704,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["inputs",{"_index":280,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["instanceof",{"_index":136,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["interface",{"_index":129,"title":{"interfaces/SidebarItem.html":{},"interfaces/SvgIconConfig.html":{}},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"coverage.html":{}}}],["interfaces",{"_index":582,"title":{},"body":{"interfaces/SidebarItem.html":{},"interfaces/SvgIconConfig.html":{},"overview.html":{}}}],["internal",{"_index":319,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{}}}],["inventory",{"_index":103,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["ios",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ios.ts",{"_index":938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipad|iphone|ipod/.test(navigator.useragent",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isios",{"_index":939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isltr",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isplatformbrowser",{"_index":468,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["isplatformbrowser(platformid",{"_index":480,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["item.active",{"_index":139,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["item.name",{"_index":63,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["json.stringify(this.cfmod",{"_index":298,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["k",{"_index":800,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["kebab",{"_index":223,"title":{},"body":{"injectables/BemService.html":{}}}],["key",{"_index":240,"title":{},"body":{"injectables/BemService.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["keyvaluechangerecord",{"_index":696,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["keyvaluechanges",{"_index":651,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["keyvaluediffer",{"_index":697,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["keyvaluediffers",{"_index":636,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["klass",{"_index":705,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["klasses",{"_index":796,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["label",{"_index":660,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["layout",{"_index":365,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["left",{"_index":50,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["left}px",{"_index":545,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["legend",{"_index":141,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["len",{"_index":783,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["library",{"_index":952,"title":{},"body":{"index.html":{}}}],["light",{"_index":58,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["line",{"_index":54,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":487,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["literal",{"_index":691,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["load",{"_index":855,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["loaded",{"_index":702,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["loader",{"_index":809,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{}}}],["loader.ts",{"_index":592,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["loader.ts:10",{"_index":598,"title":{},"body":{"injectables/SvgHttpLoader.html":{}}}],["loader.ts:6",{"_index":916,"title":{},"body":{"classes/SvgLoader.html":{}}}],["loadsvg",{"_index":836,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["loadsvg(url",{"_index":853,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["ltr",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ltr.ts",{"_index":941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":852,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["map((svg",{"_index":901,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["margin",{"_index":24,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["marketplace",{"_index":106,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["matching",{"_index":167,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.max(bottom",{"_index":541,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["math.max(left",{"_index":537,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["math.max(right",{"_index":539,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["math.max(top",{"_index":540,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["maybe",{"_index":890,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["metaverse",{"_index":112,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["methods",{"_index":70,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["middle",{"_index":53,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["miscellaneous",{"_index":945,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":228,"title":{},"body":{"injectables/BemService.html":{}}}],["mod.directive",{"_index":194,"title":{},"body":{"modules/BemModule.html":{}}}],["modcase",{"_index":172,"title":{},"body":{"classes/BemConfig.html":{},"injectables/BemService.html":{}}}],["moddirective",{"_index":163,"title":{"directives/ModDirective.html":{}},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":513,"title":{},"body":{"components/SidebarContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["modname",{"_index":205,"title":{},"body":{"injectables/BemService.html":{}}}],["modnamehandler",{"_index":200,"title":{},"body":{"injectables/BemService.html":{}}}],["modnamehandler(str",{"_index":210,"title":{},"body":{"injectables/BemService.html":{}}}],["mods",{"_index":215,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["mods.split(/\\s",{"_index":251,"title":{},"body":{"injectables/BemService.html":{}}}],["mods[key",{"_index":235,"title":{},"body":{"injectables/BemService.html":{}}}],["module",{"_index":178,"title":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{}},"body":{}}],["modules",{"_index":180,"title":{"modules.html":{}},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":811,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["modvalue",{"_index":206,"title":{},"body":{"injectables/BemService.html":{}}}],["name",{"_index":81,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{}}}],["nameandunit",{"_index":687,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["nameandunit.split",{"_index":792,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["namednodemap",{"_index":782,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["navbar",{"_index":338,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":148,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["navbar.component",{"_index":369,"title":{},"body":{"modules/NavbarModule.html":{}}}],["navbar/navbar.module",{"_index":380,"title":{},"body":{"modules/SceneModule.html":{}}}],["navbarcomponent",{"_index":147,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navbarmodule",{"_index":355,"title":{"modules/NavbarModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules.html":{},"overview.html":{}}}],["navigationend",{"_index":117,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["navigator",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":514,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["needed",{"_index":505,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["new",{"_index":353,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":267,"title":{},"body":{"injectables/BemService.html":{},"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":423,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["ngdocheck",{"_index":620,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ngmodule",{"_index":191,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["ngonchanges",{"_index":279,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["ngonchanges(changerecord",{"_index":666,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ngonchanges(changes",{"_index":462,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["ngondestroy",{"_index":424,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ngoninit",{"_index":71,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ngstyle",{"_index":707,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["node",{"_index":680,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["non",{"_index":740,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["now",{"_index":888,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["null",{"_index":249,"title":{},"body":{"injectables/BemService.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":685,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["nx",{"_index":954,"title":{},"body":{"index.html":{}}}],["o",{"_index":899,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["object",{"_index":225,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":304,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["object.keys(mods).foreach((key",{"_index":233,"title":{},"body":{"injectables/BemService.html":{}}}],["object.keys(oldmods).foreach((key",{"_index":242,"title":{},"body":{"injectables/BemService.html":{}}}],["observable",{"_index":88,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["observableof",{"_index":862,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["observableof(this.iconsbyurl.get(name",{"_index":896,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["observablethrowerror",{"_index":864,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["observablethrowerror(`no",{"_index":908,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["observablethrowerror(err",{"_index":905,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["oldmods",{"_index":217,"title":{},"body":{"injectables/BemService.html":{}}}],["oldmods[key",{"_index":234,"title":{},"body":{"injectables/BemService.html":{}}}],["onchanges",{"_index":274,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ondestroy",{"_index":386,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ontitleclick",{"_index":343,"title":{},"body":{"components/NavbarComponent.html":{}}}],["opacity",{"_index":400,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["open",{"_index":504,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["option",{"_index":550,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["optional",{"_index":83,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":187,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"overview.html":{}}}],["output",{"_index":352,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{}}}],["outputs",{"_index":345,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{}}}],["overflow",{"_index":27,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["override",{"_index":774,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["overriding",{"_index":887,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["overview",{"_index":963,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["padding",{"_index":26,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["paddingamt",{"_index":532,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["page",{"_index":501,"title":{},"body":{"components/SidebarContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":488,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":683,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["parentregistry",{"_index":912,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{}}}],["parsemods",{"_index":201,"title":{},"body":{"injectables/BemService.html":{}}}],["parsemods(mods",{"_index":213,"title":{},"body":{"injectables/BemService.html":{}}}],["passing",{"_index":847,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["personal.svg",{"_index":105,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["pipe(filter((event",{"_index":134,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["platform_id",{"_index":471,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["platformid",{"_index":433,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{}}}],["play",{"_index":101,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["pointer",{"_index":402,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["portal",{"_index":113,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["position",{"_index":392,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["possibility",{"_index":883,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["previous",{"_index":675,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["previous.split",{"_index":798,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["primary",{"_index":48,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["private",{"_index":72,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["properly",{"_index":457,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["properties",{"_index":65,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["property",{"_index":315,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["protected",{"_index":872,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["provide",{"_index":819,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":889,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["providedin",{"_index":231,"title":{},"body":{"injectables/BemService.html":{}}}],["provider",{"_index":810,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["providers",{"_index":817,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["public",{"_index":278,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["push",{"_index":500,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["radius",{"_index":41,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["react",{"_index":456,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["readonly",{"_index":293,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["recompute",{"_index":447,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["record",{"_index":786,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["record.currentvalue",{"_index":789,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["register",{"_index":490,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["registry",{"_index":846,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service",{"_index":699,"title":{},"body":{"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{}}}],["registry.service.ts",{"_index":830,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["registry.service.ts:23",{"_index":858,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:24",{"_index":859,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:25",{"_index":841,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:37",{"_index":844,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:47",{"_index":854,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:84",{"_index":849,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:94",{"_index":857,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["relative",{"_index":393,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["remove",{"_index":495,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{}}}],["removes",{"_index":494,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["rename",{"_index":703,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["renderer",{"_index":219,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["renderer.addclass",{"_index":241,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["renderer.removeclass",{"_index":237,"title":{},"body":{"injectables/BemService.html":{}}}],["renderer2",{"_index":220,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["replace",{"_index":270,"title":{},"body":{"injectables/BemService.html":{}}}],["replace(/[a",{"_index":260,"title":{},"body":{"injectables/BemService.html":{}}}],["reset",{"_index":186,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"overview.html":{}}}],["resetdiffer",{"_index":621,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["responsetype",{"_index":608,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["results",{"_index":166,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":236,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":85,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":398,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["right}px",{"_index":543,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["root",{"_index":232,"title":{},"body":{"injectables/BemService.html":{}}}],["router",{"_index":76,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["routerlink",{"_index":96,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["routermodule",{"_index":379,"title":{},"body":{"modules/SceneModule.html":{}}}],["run",{"_index":957,"title":{},"body":{"index.html":{}}}],["running",{"_index":955,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":125,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["rxjs/operators",{"_index":127,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgIconRegistryService.html":{}}}],["s",{"_index":263,"title":{},"body":{"injectables/BemService.html":{}}}],["s.tolowercase",{"_index":264,"title":{},"body":{"injectables/BemService.html":{}}}],["scene",{"_index":15,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["scene'},{'name",{"_index":146,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["scene__body",{"_index":16,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["scene__container",{"_index":21,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["scenemodule",{"_index":370,"title":{"modules/SceneModule.html":{}},"body":{"modules/SceneModule.html":{},"modules.html":{},"overview.html":{}}}],["scrolling",{"_index":408,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["secondary",{"_index":56,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["see",{"_index":708,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["selected",{"_index":97,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["selectedavatar",{"_index":66,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["selectedavatarstate",{"_index":77,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["separate",{"_index":891,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["separators",{"_index":173,"title":{},"body":{"classes/BemConfig.html":{},"injectables/BemService.html":{}}}],["server",{"_index":885,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["server_url",{"_index":869,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverurl",{"_index":839,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":551,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["setclass",{"_index":622,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["setclass(target",{"_index":672,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setmods",{"_index":202,"title":{},"body":{"injectables/BemService.html":{}}}],["setmods(blockname",{"_index":216,"title":{},"body":{"injectables/BemService.html":{}}}],["setngcontentattribute",{"_index":623,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setngcontentattribute(parent",{"_index":679,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setsidebaritemsactive",{"_index":73,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["setstyle",{"_index":624,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["setstyle(nameandunit",{"_index":684,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setsvg",{"_index":625,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setsvg(svg",{"_index":688,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["setsvgstyle(values",{"_index":694,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["settimeout",{"_index":580,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["settings",{"_index":108,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["share",{"_index":867,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["show",{"_index":450,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["showbackdrop",{"_index":428,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["showbackdropchange",{"_index":430,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar",{"_index":152,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"components/SvgIconComponent.html":{}}}],["sidebar'},{'name",{"_index":150,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["sidebar._dockedsize",{"_index":535,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._height",{"_index":526,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._isdocked",{"_index":533,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._isleftorright",{"_index":520,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._isleftortop",{"_index":524,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._ismodeover",{"_index":534,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._ismodepush",{"_index":530,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._ismodeslide",{"_index":517,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._onrerender.subscribe",{"_index":565,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._onrerender.unsubscribe",{"_index":572,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._width",{"_index":525,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.close",{"_index":556,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.closeonclickbackdrop",{"_index":555,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.closestart.subscribe",{"_index":561,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.closestart.unsubscribe",{"_index":568,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.component",{"_index":311,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{}}}],["sidebar.directive",{"_index":588,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.directive.ts",{"_index":306,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"coverage.html":{}}}],["sidebar.directive.ts:11",{"_index":309,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["sidebar.dock",{"_index":531,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.modechange.subscribe",{"_index":563,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.modechange.unsubscribe",{"_index":570,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.opened",{"_index":518,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.openstart.subscribe",{"_index":558,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.openstart.unsubscribe",{"_index":566,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.position",{"_index":536,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.positionchange.subscribe",{"_index":564,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.positionchange.unsubscribe",{"_index":571,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.showbackdrop",{"_index":554,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.sidebarclose.subscribe",{"_index":562,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.sidebarclose.unsubscribe",{"_index":569,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.sidebaropen.subscribe",{"_index":559,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.sidebaropen.unsubscribe",{"_index":567,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar/sidebar.module",{"_index":381,"title":{},"body":{"modules/SceneModule.html":{}}}],["sidebar__backdrop",{"_index":395,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar__content",{"_index":406,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebarcomponent",{"_index":149,"title":{},"body":{"components/AppScene.html":{},"directives/CloseSidebarDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarcontainercomponent",{"_index":151,"title":{"components/SidebarContainerComponent.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarisopen",{"_index":67,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["sidebaritem",{"_index":29,"title":{"interfaces/SidebarItem.html":{}},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"coverage.html":{}}}],["sidebaritems",{"_index":68,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["sidebarmodule",{"_index":375,"title":{"modules/SidebarModule.html":{}},"body":{"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["sidebars",{"_index":460,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["simplechanges",{"_index":463,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["single",{"_index":575,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sizing",{"_index":391,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["skipself",{"_index":861,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["slide",{"_index":512,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["snake",{"_index":271,"title":{},"body":{"injectables/BemService.html":{}}}],["solid",{"_index":45,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["space",{"_index":529,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["src",{"_index":628,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["src/.../is",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../svg",{"_index":947,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/angular/bem/bem.config.ts",{"_index":170,"title":{},"body":{"classes/BemConfig.html":{},"coverage.html":{}}}],["src/lib/angular/bem/bem.config.ts:2",{"_index":177,"title":{},"body":{"classes/BemConfig.html":{}}}],["src/lib/angular/bem/bem.config.ts:3",{"_index":174,"title":{},"body":{"classes/BemConfig.html":{}}}],["src/lib/angular/bem/bem.config.ts:4",{"_index":175,"title":{},"body":{"classes/BemConfig.html":{}}}],["src/lib/angular/bem/bem.module.ts",{"_index":188,"title":{},"body":{"modules/BemModule.html":{}}}],["src/lib/angular/bem/bem.service.ts",{"_index":198,"title":{},"body":{"injectables/BemService.html":{},"coverage.html":{}}}],["src/lib/angular/bem/bem.service.ts:105",{"_index":211,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:13",{"_index":222,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:14",{"_index":224,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:16",{"_index":221,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:54",{"_index":207,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:8",{"_index":230,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:85",{"_index":214,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/block.directive.ts",{"_index":273,"title":{},"body":{"directives/BlockDirective.html":{},"coverage.html":{}}}],["src/lib/angular/bem/block.directive.ts:16",{"_index":286,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:17",{"_index":288,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:18",{"_index":287,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:19",{"_index":283,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:20",{"_index":285,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:21",{"_index":282,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:39",{"_index":284,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts",{"_index":322,"title":{},"body":{"directives/ElemDirective.html":{},"coverage.html":{}}}],["src/lib/angular/bem/elem.directive.ts:17",{"_index":329,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:18",{"_index":331,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:19",{"_index":328,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:20",{"_index":330,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:21",{"_index":325,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:22",{"_index":327,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:23",{"_index":324,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:43",{"_index":326,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/mod.directive.ts",{"_index":336,"title":{},"body":{"directives/ModDirective.html":{},"coverage.html":{}}}],["src/lib/angular/navbar/navbar.component.ts",{"_index":337,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/lib/angular/navbar/navbar.component.ts:67",{"_index":347,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/lib/angular/navbar/navbar.component.ts:68",{"_index":348,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/lib/angular/navbar/navbar.component.ts:70",{"_index":350,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/lib/angular/navbar/navbar.component.ts:72",{"_index":351,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/lib/angular/navbar/navbar.module.ts",{"_index":361,"title":{},"body":{"modules/NavbarModule.html":{}}}],["src/lib/angular/scene/app.scene.ts",{"_index":9,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"coverage.html":{}}}],["src/lib/angular/scene/app.scene.ts:166",{"_index":114,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:167",{"_index":94,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:169",{"_index":110,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:202",{"_index":92,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:203",{"_index":79,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:210",{"_index":84,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:218",{"_index":87,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/scene.module.ts",{"_index":376,"title":{},"body":{"modules/SceneModule.html":{}}}],["src/lib/angular/sidebar/close",{"_index":305,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"coverage.html":{}}}],["src/lib/angular/sidebar/sidebar",{"_index":383,"title":{},"body":{"components/SidebarContainerComponent.html":{},"coverage.html":{}}}],["src/lib/angular/sidebar/sidebar.component.ts",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["src/lib/angular/sidebar/sidebar.module.ts",{"_index":586,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/lib/angular/svg",{"_index":591,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/shared/platform/browser/is",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":950,"title":{"index.html":{}},"body":{}}],["statements",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":814,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["str",{"_index":212,"title":{},"body":{"injectables/BemService.html":{}}}],["stretch",{"_index":629,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["string",{"_index":111,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["stylize",{"_index":626,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["subscribe",{"_index":137,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["subscribes",{"_index":455,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["subscription",{"_index":698,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["super",{"_index":606,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["support",{"_index":961,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":882,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["svg",{"_index":155,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"modules.html":{}}}],["svg's",{"_index":775,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svg.clonenode(true",{"_index":758,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svg_icon_registry_provider",{"_index":812,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg_icon_registry_provider_factory",{"_index":911,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["svg_icon_registry_provider_factory(parentregistry",{"_index":948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["svgarialabel",{"_index":630,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgclass",{"_index":631,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgelement",{"_index":654,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["svghttploader",{"_index":590,"title":{"injectables/SvgHttpLoader.html":{}},"body":{"injectables/SvgHttpLoader.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["svgiconcomponent",{"_index":154,"title":{"components/SvgIconComponent.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"coverage.html":{},"overview.html":{}}}],["svgiconconfig",{"_index":807,"title":{"interfaces/SvgIconConfig.html":{}},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"coverage.html":{}}}],["svgiconhelper",{"_index":692,"title":{"classes/SvgIconHelper.html":{}},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"coverage.html":{}}}],["svgiconmodule",{"_index":360,"title":{"modules/SvgIconModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"modules.html":{},"overview.html":{}}}],["svgiconregistryservice",{"_index":638,"title":{"injectables/SvgIconRegistryService.html":{}},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["svgiconregistryservice(loader",{"_index":913,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["svgloader",{"_index":594,"title":{"classes/SvgLoader.html":{}},"body":{"injectables/SvgHttpLoader.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["svgloader:15",{"_index":602,"title":{},"body":{"injectables/SvgHttpLoader.html":{}}}],["svgobs",{"_index":744,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgobs.subscribe((svg",{"_index":747,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgstyle",{"_index":632,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["svgstyle(values",{"_index":710,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgsvgelement",{"_index":674,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["switch",{"_index":257,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{}}}],["table",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":868,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["tap((svg",{"_index":902,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["target",{"_index":678,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["template",{"_index":61,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["test",{"_index":958,"title":{},"body":{"index.html":{}}}],["tests",{"_index":956,"title":{},"body":{"index.html":{}}}],["text",{"_index":609,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["this._document",{"_index":875,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this._isbrowser",{"_index":479,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._markforcheck",{"_index":560,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._mods",{"_index":303,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this._modserialized",{"_index":299,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this._ontoggle",{"_index":481,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._ref.markforcheck",{"_index":581,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebar",{"_index":320,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["this._sidebar.close",{"_index":321,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["this._sidebars",{"_index":511,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.indexof(sidebar",{"_index":497,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.length",{"_index":573,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.push(sidebar",{"_index":492,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.some",{"_index":577,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.splice(index",{"_index":498,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._subscribe(sidebar",{"_index":493,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._svgstyle",{"_index":711,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this._unsubscribe",{"_index":484,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.allowsidebarbackdropcontrol",{"_index":574,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.applychanges(changes",{"_index":743,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.applyclass",{"_index":724,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.backdropclick.emit",{"_index":557,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.bemservice.generateclass(block.name",{"_index":335,"title":{},"body":{"directives/ElemDirective.html":{}}}],["this.bemservice.generateclass(name",{"_index":297,"title":{},"body":{"directives/BlockDirective.html":{}}}],["this.bemservice.parsemods(mods",{"_index":301,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.bemservice.setmods",{"_index":302,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.blockname",{"_index":333,"title":{},"body":{"directives/ElemDirective.html":{}}}],["this.cdr.markforcheck",{"_index":752,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.cfmod",{"_index":300,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.copyngcontentattribute(elem",{"_index":760,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.destroy",{"_index":715,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.differs.find(this._svgstyle).create",{"_index":757,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.differs.find(values).create",{"_index":713,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.doaria(changerecord.svgarialabel.currentvalue",{"_index":738,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.doaria(this.svgarialabel",{"_index":779,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.document",{"_index":874,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.document.createelement('div",{"_index":878,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.element",{"_index":295,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.element.nativeelement",{"_index":733,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.element.nativeelement.firstchild",{"_index":717,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.generateclass(blockname",{"_index":239,"title":{},"body":{"injectables/BemService.html":{}}}],["this.helper",{"_index":756,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.differ",{"_index":712,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.differ.diff(this._svgstyle",{"_index":742,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.icnsub",{"_index":746,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.icnsub.unsubscribe",{"_index":755,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.loaded",{"_index":720,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.svg",{"_index":739,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.http.get(url",{"_index":607,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["this.iconreg.getsvgbyname(this.name",{"_index":745,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.iconreg.loadsvg(this.src",{"_index":750,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.iconsbyurl.delete(url",{"_index":910,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsbyurl.has(name",{"_index":876,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsbyurl.has(url",{"_index":909,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsbyurl.set(name",{"_index":881,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsloadingbyurl.delete(name",{"_index":906,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsloadingbyurl.get(name",{"_index":898,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsloadingbyurl.has(name",{"_index":897,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsloadingbyurl.set(name",{"_index":907,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.ignorevalues",{"_index":243,"title":{},"body":{"injectables/BemService.html":{}}}],["this.init",{"_index":714,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.initsvg(svg",{"_index":748,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.klass",{"_index":726,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.loader.getsvg(url).pipe",{"_index":900,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.modcase",{"_index":258,"title":{},"body":{"injectables/BemService.html":{}}}],["this.modnamehandler(modname",{"_index":247,"title":{},"body":{"injectables/BemService.html":{}}}],["this.name",{"_index":294,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer",{"_index":296,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.renderer.addclass(target",{"_index":804,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.appendchild(elem",{"_index":759,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.removeattribute(icon",{"_index":772,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.removeattribute(svg",{"_index":806,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.removeclass(target",{"_index":801,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.removestyle(svg",{"_index":795,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.setattribute(icon",{"_index":771,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.setattribute(svg",{"_index":805,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.setstyle(svg",{"_index":794,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.resetdiffer",{"_index":754,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.router.events",{"_index":133,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.router.url.endswith(item.routerlink.join",{"_index":140,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.selectedavatarstate.avatar",{"_index":91,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.separators.el",{"_index":246,"title":{},"body":{"injectables/BemService.html":{}}}],["this.separators.mod",{"_index":248,"title":{},"body":{"injectables/BemService.html":{}}}],["this.separators.val",{"_index":250,"title":{},"body":{"injectables/BemService.html":{}}}],["this.serverurl",{"_index":894,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.setclass",{"_index":728,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.setclass(elem.firstchild",{"_index":761,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.setclass(elemsvg",{"_index":725,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.setsidebaritemsactive",{"_index":132,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.setstyle(record.key",{"_index":787,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.setsvg(svg",{"_index":753,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.showbackdrop",{"_index":578,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.showbackdropchange.emit(changes['showbackdrop'].currentvalue",{"_index":483,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.showbackdropchange.emit(hasopen",{"_index":579,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.sidebaritems.foreach((item",{"_index":138,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.src",{"_index":749,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.stylize",{"_index":722,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.svgarialabel",{"_index":777,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.svgclass",{"_index":762,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.titleclick.emit",{"_index":354,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.viewbox",{"_index":763,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["throwerror",{"_index":863,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["title",{"_index":69,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["titleclick",{"_index":346,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggled",{"_index":452,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["top",{"_index":35,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{}}}],["top}px",{"_index":542,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["touch",{"_index":409,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["transform",{"_index":412,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["transformamt",{"_index":523,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["transformdir",{"_index":519,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["transformstyle",{"_index":508,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["transition",{"_index":411,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["translate",{"_index":515,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["translate${transformdir}(${transformamt}px",{"_index":527,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["triggers",{"_index":444,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["true",{"_index":256,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":82,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":244,"title":{},"body":{"injectables/BemService.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":477,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["typescript",{"_index":475,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":663,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":791,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"index.html":{}}}],["unloadsvg",{"_index":837,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["unloadsvg(url",{"_index":856,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["unsubscribes",{"_index":459,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["url",{"_index":603,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["url.match(/^(http(s",{"_index":895,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["usage",{"_index":886,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["use",{"_index":884,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["useclass",{"_index":820,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["usefactory",{"_index":915,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["useless",{"_index":268,"title":{},"body":{"injectables/BemService.html":{}}}],["val",{"_index":229,"title":{},"body":{"injectables/BemService.html":{}}}],["value",{"_index":90,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":695,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["value}${unit",{"_index":793,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["var",{"_index":46,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{}}}],["variable",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":968,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vb",{"_index":770,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["vertical",{"_index":37,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["viewbox",{"_index":633,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["void",{"_index":86,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["w",{"_index":766,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["web",{"_index":951,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":407,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["webkittransform",{"_index":546,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["website",{"_index":339,"title":{},"body":{"components/NavbarComponent.html":{}}}],["whether",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["white",{"_index":51,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["width",{"_index":23,"title":{},"body":{"components/AppScene.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["widthstyle",{"_index":510,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["window",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.getcomputedstyle",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":489,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["works",{"_index":850,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["x",{"_index":521,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["y",{"_index":522,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["yes",{"_index":209,"title":{},"body":{"injectables/BemService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":404,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["z]/g",{"_index":261,"title":{},"body":{"injectables/BemService.html":{}}}],["zoom",{"_index":185,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppScene.html":{"url":"components/AppScene.html","title":"component - AppScene","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/angular/scene/app.scene.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-scene\n            \n\n\n            \n                styles\n                \n      .scene__body {\n        height: calc(100vh - 44px);\n      }\n\n      .scene__container {\n        height: 100%;\n        width: 100%;\n        /* margin: 0; */\n        padding: 0;\n        overflow: auto;\n      }\n\n      .sidebarItem {\n        &__text {\n          display: inline-block;\n          height: 55px;\n          margin-top: 15px;\n          vertical-align: top;\n        }\n\n        &__image {\n          width: 55px;\n          height: 55px;\n          border-radius: 50%;\n          margin-top: 15px;\n          &:hover {\n            border: 3px solid var(--color-primary);\n          }\n        }\n\n        &__text-content {\n          padding-left: 15px;\n          color: white;\n          width: 200px;\n          display: inline-block;\n          vertical-align: middle;\n          line-height: 55px;\n        }\n\n        .button {\n          &--secondary {\n            &:hover {\n              background-color: var(--color-primary);\n              color: var(--color-light);\n              .icon__svg {\n                fill: var(--color-light);\n              }\n            }\n          }\n        }\n      }\n    \n            \n\n            \n                template\n                \n  \n    \n      \n        \n        \n          \n            \n              \n                Account\n              \n              \n            \n\n            \n              \n                \n                  {{ item.name }}\n                \n                \n                  \n                \n              \n            \n\n            \n          \n        \n\n        \n          \n            \n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n    \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAvatar$\n                            \n                            \n                                sidebarIsOpen\n                            \n                            \n                                sidebarItems\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setSidebarItemsActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, selectedAvatarState: SelectedAvatarState)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/scene/app.scene.ts:203\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedAvatarState\n                                                  \n                                                        \n                                                                    SelectedAvatarState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/scene/app.scene.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setSidebarItemsActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSidebarItemsActive()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/scene/app.scene.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAvatar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.selectedAvatarState.avatar$\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/scene/app.scene.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebarIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/scene/app.scene.ts:167\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebarItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SidebarItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: 'Avatar',\n      routerLink: ['/selected-avatar'],\n      icon: 'assets/icons/mdi/account.svg',\n      active: false,\n    },\n    {\n      name: 'Play',\n      routerLink: ['/play'],\n      icon: 'assets/icons/mdi/play.svg',\n      active: false,\n    },\n    {\n      name: 'Inventory',\n      routerLink: ['/inventory'],\n      icon: 'assets/icons/mdi/bag-personal.svg',\n      active: false,\n    },\n    {\n      name: 'Marketplace',\n      routerLink: ['/marketplace'],\n      icon: 'assets/icons/mdi/store.svg',\n      active: false,\n    },\n    {\n      name: 'Settings',\n      routerLink: ['/settings'],\n      icon: 'assets/icons/mdi/cog.svg',\n      active: false,\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/scene/app.scene.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Metaverse Portal'\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/scene/app.scene.ts:166\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { SelectedAvatarState } from '@central-factory/agent-avatars/states/selected-avatar/selected-avatar.state';\nimport { Avatar } from '@central-factory/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface SidebarItem {\n  name: string;\n  routerLink: string[];\n  icon: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'cf-scene',\n  template: `\n    \n      \n        \n          \n            \n            \n              \n                \n                  \n                    Account\n                  \n                  \n                \n\n                \n                  \n                    \n                      {{ item.name }}\n                    \n                    \n                      \n                    \n                  \n                \n\n                \n              \n            \n\n            \n              \n                \n              \n            \n          \n\n          \n            \n              \n                \n              \n            \n          \n        \n        \n        \n      \n    \n  `,\n  styles: [\n    `\n      .scene__body {\n        height: calc(100vh - 44px);\n      }\n\n      .scene__container {\n        height: 100%;\n        width: 100%;\n        /* margin: 0; */\n        padding: 0;\n        overflow: auto;\n      }\n\n      .sidebarItem {\n        &__text {\n          display: inline-block;\n          height: 55px;\n          margin-top: 15px;\n          vertical-align: top;\n        }\n\n        &__image {\n          width: 55px;\n          height: 55px;\n          border-radius: 50%;\n          margin-top: 15px;\n          &:hover {\n            border: 3px solid var(--color-primary);\n          }\n        }\n\n        &__text-content {\n          padding-left: 15px;\n          color: white;\n          width: 200px;\n          display: inline-block;\n          vertical-align: middle;\n          line-height: 55px;\n        }\n\n        .button {\n          &--secondary {\n            &:hover {\n              background-color: var(--color-primary);\n              color: var(--color-light);\n              .icon__svg {\n                fill: var(--color-light);\n              }\n            }\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class AppScene implements OnInit {\n  title = 'Metaverse Portal';\n  sidebarIsOpen = false;\n\n  sidebarItems: SidebarItem[] = [\n    {\n      name: 'Avatar',\n      routerLink: ['/selected-avatar'],\n      icon: 'assets/icons/mdi/account.svg',\n      active: false,\n    },\n    {\n      name: 'Play',\n      routerLink: ['/play'],\n      icon: 'assets/icons/mdi/play.svg',\n      active: false,\n    },\n    {\n      name: 'Inventory',\n      routerLink: ['/inventory'],\n      icon: 'assets/icons/mdi/bag-personal.svg',\n      active: false,\n    },\n    {\n      name: 'Marketplace',\n      routerLink: ['/marketplace'],\n      icon: 'assets/icons/mdi/store.svg',\n      active: false,\n    },\n    {\n      name: 'Settings',\n      routerLink: ['/settings'],\n      icon: 'assets/icons/mdi/cog.svg',\n      active: false,\n    },\n  ];\n\n  selectedAvatar$: Observable =\n    this.selectedAvatarState.avatar$;\n\n  constructor(\n    private router: Router,\n    private selectedAvatarState: SelectedAvatarState\n  ) {}\n\n  ngOnInit() {\n    this.setSidebarItemsActive();\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => this.setSidebarItemsActive());\n  }\n\n  private setSidebarItemsActive() {\n    this.sidebarItems.forEach((item) => {\n      item.active = this.router.url.endsWith(item.routerLink.join('/'));\n    });\n  }\n}\n\n    \n\n\n    \n            \n      .scene__body {\n        height: calc(100vh - 44px);\n      }\n\n      .scene__container {\n        height: 100%;\n        width: 100%;\n        /* margin: 0; */\n        padding: 0;\n        overflow: auto;\n      }\n\n      .sidebarItem {\n        &__text {\n          display: inline-block;\n          height: 55px;\n          margin-top: 15px;\n          vertical-align: top;\n        }\n\n        &__image {\n          width: 55px;\n          height: 55px;\n          border-radius: 50%;\n          margin-top: 15px;\n          &:hover {\n            border: 3px solid var(--color-primary);\n          }\n        }\n\n        &__text-content {\n          padding-left: 15px;\n          color: white;\n          width: 200px;\n          display: inline-block;\n          vertical-align: middle;\n          line-height: 55px;\n        }\n\n        .button {\n          &--secondary {\n            &:hover {\n              background-color: var(--color-primary);\n              color: var(--color-light);\n              .icon__svg {\n                fill: var(--color-light);\n              }\n            }\n          }\n        }\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                Account                                                                                                    {{ item.name }}                                                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppScene', 'selector': 'cf-scene'},{'name': 'NavbarComponent', 'selector': 'cf-navbar'},{'name': 'SidebarComponent', 'selector': 'cf-sidebar'},{'name': 'SidebarContainerComponent', 'selector': 'cf-sidebar-container'},{'name': 'SvgIconComponent', 'selector': 'cf-svg-icon'}];\n    var DIRECTIVES = [{'name': 'BlockDirective', 'selector': '[cfBlock]'},{'name': 'CloseSidebarDirective', 'selector': '[cfCloseSidebar]'},{'name': 'ElemDirective', 'selector': '[cfElem]'},{'name': 'ModDirective', 'selector': '[cfMod]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppScene'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BemConfig.html":{"url":"classes/BemConfig.html","title":"class - BemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/bem.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ignoreValues\n                            \n                            \n                                    Optional\n                                modCase\n                            \n                            \n                                    Optional\n                                separators\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ignoreValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.config.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.config.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        separators\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.config.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BemConfig {\n  separators?: Array;\n  ignoreValues?: boolean;\n  modCase?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BemModule.html":{"url":"modules/BemModule.html","title":"module - BemModule","body":"\n                   \n\n\n\n\n    Modules\n    BemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BemModule\n\n\n\ncluster_BemModule_declarations\n\n\n\ncluster_BemModule_exports\n\n\n\n\nBlockDirective\n\nBlockDirective\n\n\n\nBemModule\n\nBemModule\n\nBemModule -->\n\nBlockDirective->BemModule\n\n\n\n\n\nElemDirective\n\nElemDirective\n\nBemModule -->\n\nElemDirective->BemModule\n\n\n\n\n\nModDirective\n\nModDirective\n\nBemModule -->\n\nModDirective->BemModule\n\n\n\n\n\nBlockDirective \n\nBlockDirective \n\nBlockDirective  -->\n\nBemModule->BlockDirective \n\n\n\n\n\nElemDirective \n\nElemDirective \n\nElemDirective  -->\n\nBemModule->ElemDirective \n\n\n\n\n\nModDirective \n\nModDirective \n\nModDirective  -->\n\nBemModule->ModDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/bem/bem.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockDirective\n                        \n                        \n                            ElemDirective\n                        \n                        \n                            ModDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockDirective\n                        \n                        \n                            ElemDirective\n                        \n                        \n                            ModDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BlockDirective } from './block.directive';\nimport { ElemDirective } from './elem.directive';\nimport { ModDirective } from './mod.directive';\n\n@NgModule({\n  declarations: [BlockDirective, ElemDirective, ModDirective],\n  exports: [BlockDirective, ElemDirective, ModDirective],\n})\nexport class BemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BemService.html":{"url":"injectables/BemService.html","title":"injectable - BemService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/bem.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ignoreValues\n                            \n                            \n                                modCase\n                            \n                            \n                                separators\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateClass\n                            \n                            \n                                    Private\n                                modNameHandler\n                            \n                            \n                                parseMods\n                            \n                            \n                                setMods\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateClass\n                        \n                    \n                \n            \n            \n                \ngenerateClass(blockName: string, elemName?: string, modName?: string, modValue?: boolean | string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/bem.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blockName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elemName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    modName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    modValue\n                                    \n                                            boolean | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        modNameHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    modNameHandler(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/bem.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseMods\n                        \n                    \n                \n            \n            \n                \nparseMods(mods: string | string[] | any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/bem.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mods\n                                    \n                                            string | string[] | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMods\n                        \n                    \n                \n            \n            \n                \nsetMods(blockName: string, elemName: string, mods: any, oldMods: any, element: ElementRef, renderer: Renderer2)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/bem.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blockName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elemName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mods\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldMods\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    renderer\n                                    \n                                                Renderer2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ignoreValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'kebab'\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        separators\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    el: '__',\n    mod: '--',\n    val: '-',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ElementRef, Injectable, Renderer2 } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BemService {\n  separators = {\n    el: '__',\n    mod: '--',\n    val: '-',\n  };\n  ignoreValues = false;\n  modCase = 'kebab';\n\n  setMods(\n    blockName: string,\n    elemName: string,\n    mods: any,\n    oldMods: any,\n    element: ElementRef,\n    renderer: Renderer2\n  ) {\n    Object.keys(mods).forEach((key) => {\n      if (oldMods[key]) {\n        if (mods[key] === oldMods[key]) {\n          return;\n        }\n\n        renderer.removeClass(\n          element.nativeElement,\n          this.generateClass(blockName, elemName, key, oldMods[key])\n        );\n      }\n\n      if (mods[key]) {\n        renderer.addClass(\n          element.nativeElement,\n          this.generateClass(blockName, elemName, key, mods[key])\n        );\n      }\n    });\n\n    Object.keys(oldMods).forEach((key) => {\n      if (!(key in mods) && oldMods[key]) {\n        renderer.removeClass(\n          element.nativeElement,\n          this.generateClass(blockName, elemName, key, oldMods[key])\n        );\n      }\n    });\n  }\n\n  generateClass(\n    blockName: string,\n    elemName?: string,\n    modName?: string,\n    modValue?: boolean | string\n  ): string {\n    if (this.ignoreValues) {\n      modValue = !!modValue;\n    }\n\n    if (typeof modValue !== 'string' && typeof modValue !== 'boolean') {\n      modValue = !!modValue;\n    }\n\n    let cls = blockName;\n\n    if (elemName) {\n      cls += this.separators.el + elemName;\n    }\n\n    if (modName) {\n      modName = this.modNameHandler(modName);\n      cls += this.separators.mod + modName;\n      if (typeof modValue !== 'boolean' && modValue != null) {\n        cls += this.separators.val + modValue;\n      }\n    }\n\n    return cls;\n  }\n\n  parseMods(mods: string | string[] | any) {\n    if (typeof mods === 'string') {\n      mods = mods.split(/\\s+/);\n    }\n\n    if (Array.isArray(mods)) {\n      const arr = mods;\n\n      mods = {};\n\n      arr.forEach((key) => {\n        mods[key] = true;\n      });\n    } else if (typeof mods !== 'object') {\n      return {};\n    }\n\n    return mods;\n  }\n\n  private modNameHandler(str: string): string {\n    switch (this.modCase) {\n      case 'kebab':\n        return str\n          ? str\n              .replace(/[A-Z]/g, function (s) {\n                return '-' + s.toLowerCase();\n              })\n              // eslint-disable-next-line no-useless-escape\n              .replace(/$\\-/, '')\n          : '';\n      case 'snake':\n        return str\n          ? str\n              .replace(/[A-Z]/g, function (s) {\n                return '_' + s.toLowerCase();\n              })\n              // eslint-disable-next-line no-useless-escape\n              .replace(/$\\-/, '')\n          : '';\n      default:\n        return str;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BlockDirective.html":{"url":"directives/BlockDirective.html","title":"directive - BlockDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  BlockDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/block.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [cfBlock]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mods\n                            \n                            \n                                    Private\n                                _modSerialized\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfMod\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, name: string, bemService: BemService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/bem/block.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bemService\n                                                  \n                                                        \n                                                                        BemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfMod\n                    \n                \n                \n                    \n                        Type :     string | string[] | any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/bem/block.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/block.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _mods\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _modSerialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Attribute,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n} from '@angular/core';\nimport { BemService } from './bem.service';\n\n@Directive({\n  selector: '[cfBlock]',\n})\nexport class BlockDirective implements OnChanges {\n  public element: ElementRef;\n  public renderer: Renderer2;\n  public name: string;\n  @Input() public cfMod: string | string[] | any;\n  private _mods: any;\n  private _modSerialized!: string;\n\n  constructor(\n    element: ElementRef,\n    renderer: Renderer2,\n    @Attribute('cfBlock') name: string,\n    private readonly bemService: BemService\n  ) {\n    this.name = name;\n    this.element = element;\n    this.renderer = renderer;\n\n    renderer.addClass(\n      element.nativeElement,\n      this.bemService.generateClass(name)\n    );\n  }\n\n  ngOnChanges() {\n    if (JSON.stringify(this.cfMod) !== this._modSerialized) {\n      this._modSerialized = JSON.stringify(this.cfMod);\n\n      let mods = this.cfMod;\n\n      const { renderer, element, name } = this;\n\n      mods = this.bemService.parseMods(mods);\n\n      this.bemService.setMods(\n        name,\n        '',\n        mods,\n        this._mods || {},\n        element,\n        renderer\n      );\n\n      this._mods = this._mods === mods ? Object.assign({}, mods) : mods;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CloseSidebarDirective.html":{"url":"directives/CloseSidebarDirective.html","title":"directive - CloseSidebarDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CloseSidebarDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/sidebar/close-sidebar.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [cfCloseSidebar]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_sidebar: SidebarComponent)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/sidebar/close-sidebar.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _sidebar\n                                                  \n                                                        \n                                                                        SidebarComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { SidebarComponent } from './sidebar.component';\n\n@Directive({\n  selector: '[cfCloseSidebar]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '(click)': '_onClick()',\n  },\n})\nexport class CloseSidebarDirective {\n  constructor(private _sidebar: SidebarComponent) {}\n\n  /** @internal */\n  _onClick(): void {\n    if (this._sidebar) {\n      this._sidebar.close();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ElemDirective.html":{"url":"directives/ElemDirective.html","title":"directive - ElemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ElemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/elem.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [cfElem]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mods\n                            \n                            \n                                    Private\n                                _modSerialized\n                            \n                            \n                                    Public\n                                blockName\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfMod\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, name: string, block: BlockDirective, bemService: BemService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/bem/elem.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        block\n                                                  \n                                                        \n                                                                        BlockDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bemService\n                                                  \n                                                        \n                                                                        BemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfMod\n                    \n                \n                \n                    \n                        Type :     string | string[] | any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/bem/elem.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/elem.directive.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _mods\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _modSerialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        blockName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Attribute,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n} from '@angular/core';\nimport { BemService } from './bem.service';\nimport { BlockDirective } from './block.directive';\n\n@Directive({\n  selector: '[cfElem]',\n})\nexport class ElemDirective implements OnChanges {\n  public element: ElementRef;\n  public renderer: Renderer2;\n  public blockName: string;\n  public name: string;\n  @Input() public cfMod: string | string[] | any;\n  private _mods: any;\n  private _modSerialized!: string;\n\n  constructor(\n    element: ElementRef,\n    renderer: Renderer2,\n    @Attribute('cfElem') name: string,\n    block: BlockDirective,\n    private readonly bemService: BemService\n  ) {\n    this.blockName = block.name;\n    this.name = name;\n    this.element = element;\n    this.renderer = renderer;\n\n    renderer.addClass(\n      element.nativeElement,\n      this.bemService.generateClass(block.name, name)\n    );\n  }\n\n  ngOnChanges() {\n    if (JSON.stringify(this.cfMod) !== this._modSerialized) {\n      this._modSerialized = JSON.stringify(this.cfMod);\n\n      let mods = this.cfMod;\n\n      const { renderer, element, blockName, name } = this;\n\n      mods = this.bemService.parseMods(mods);\n\n      this.bemService.setMods(\n        blockName,\n        name,\n        mods,\n        this._mods || {},\n        element,\n        renderer\n      );\n\n      this._mods = this._mods === mods ? Object.assign({}, mods) : mods;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ModDirective.html":{"url":"directives/ModDirective.html","title":"directive - ModDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ModDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/mod.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [cfMod]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[cfMod]',\n})\nexport class ModDirective {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/angular/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-navbar\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        \n\n        {{ title }}\n      \n    \n\n    \n      \n        \n          \n            \n            Website\n          \n          \n            \n            Documentation\n          \n          \n            \n            Blog\n          \n          \n            \n            \n              Developers\n            \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTitleClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                environment\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                titleClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        environment\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/navbar/navbar.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CF Portal'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/navbar/navbar.component.ts:68\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        titleClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/navbar/navbar.component.ts:70\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onTitleClick\n                        \n                    \n                \n            \n            \n                \nonTitleClick()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/navbar/navbar.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'cf-navbar',\n  template: `\n    \n      \n        \n          \n            \n\n            {{ title }}\n          \n        \n\n        \n          \n            \n              \n                \n                Website\n              \n              \n                \n                Documentation\n              \n              \n                \n                Blog\n              \n              \n                \n                \n                  Developers\n                \n              \n            \n          \n        \n      \n    \n  `,\n})\nexport class NavbarComponent {\n  @Input() environment: any;\n  @Input() title = 'CF Portal';\n\n  @Output() titleClick = new EventEmitter();\n\n  onTitleClick() {\n    this.titleClick.emit();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ title }}                                                              Website                                            Documentation                                            Blog                                                          Developers                                          '\n    var COMPONENTS = [{'name': 'AppScene', 'selector': 'cf-scene'},{'name': 'NavbarComponent', 'selector': 'cf-navbar'},{'name': 'SidebarComponent', 'selector': 'cf-sidebar'},{'name': 'SidebarContainerComponent', 'selector': 'cf-sidebar-container'},{'name': 'SvgIconComponent', 'selector': 'cf-svg-icon'}];\n    var DIRECTIVES = [{'name': 'BlockDirective', 'selector': '[cfBlock]'},{'name': 'CloseSidebarDirective', 'selector': '[cfCloseSidebar]'},{'name': 'ElemDirective', 'selector': '[cfElem]'},{'name': 'ModDirective', 'selector': '[cfMod]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavbarModule.html":{"url":"modules/NavbarModule.html","title":"module - NavbarModule","body":"\n                   \n\n\n\n\n    Modules\n    NavbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_imports\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavbarModule_declarations\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nBemModule\n\nBemModule\n\nNavbarModule -->\n\nBemModule->NavbarModule\n\n\n\n\n\nSvgIconModule\n\nSvgIconModule\n\nNavbarModule -->\n\nSvgIconModule->NavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/navbar/navbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BemModule\n                        \n                        \n                            SvgIconModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BemModule } from '../bem/bem.module';\nimport { SvgIconModule } from '../svg-icon/svg-icon.module';\nimport { NavbarComponent } from './navbar.component';\n\n@NgModule({\n  imports: [SvgIconModule, FlexLayoutModule, BemModule],\n  declarations: [NavbarComponent],\n  exports: [NavbarComponent],\n})\nexport class NavbarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SceneModule.html":{"url":"modules/SceneModule.html","title":"module - SceneModule","body":"\n                   \n\n\n\n\n    Modules\n    SceneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SceneModule\n\n\n\ncluster_SceneModule_exports\n\n\n\ncluster_SceneModule_imports\n\n\n\ncluster_SceneModule_declarations\n\n\n\n\nAppScene\n\nAppScene\n\n\n\nSceneModule\n\nSceneModule\n\nSceneModule -->\n\nAppScene->SceneModule\n\n\n\n\n\nAppScene \n\nAppScene \n\nAppScene  -->\n\nSceneModule->AppScene \n\n\n\n\n\nBemModule\n\nBemModule\n\nSceneModule -->\n\nBemModule->SceneModule\n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nSceneModule -->\n\nNavbarModule->SceneModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nSceneModule -->\n\nSidebarModule->SceneModule\n\n\n\n\n\nSvgIconModule\n\nSvgIconModule\n\nSceneModule -->\n\nSvgIconModule->SceneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/scene/scene.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppScene\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BemModule\n                        \n                        \n                            NavbarModule\n                        \n                        \n                            SidebarModule\n                        \n                        \n                            SvgIconModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppScene\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { BemModule } from '../bem/bem.module';\nimport { NavbarModule } from '../navbar/navbar.module';\nimport { SidebarModule } from '../sidebar/sidebar.module';\nimport { SvgIconModule } from '../svg-icon/svg-icon.module';\nimport { AppScene } from './app.scene';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SvgIconModule,\n    FlexLayoutModule,\n    BemModule,\n    RouterModule,\n    NavbarModule,\n    SidebarModule,\n  ],\n  declarations: [AppScene],\n  exports: [AppScene],\n})\nexport class SceneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarContainerComponent.html":{"url":"components/SidebarContainerComponent.html","title":"component - SidebarContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/angular/sidebar/sidebar-container.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-sidebar-container\n            \n\n\n            \n                styles\n                \n      :host {\n        box-sizing: border-box;\n        display: block;\n        position: relative;\n        height: 100%;\n        width: 100%;\n        overflow: hidden;\n      }\n\n      .cf-sidebar__backdrop {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: #000;\n        opacity: 0.75;\n        pointer-events: auto;\n        z-index: 1;\n      }\n\n      .cf-sidebar__content {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n      }\n\n      .cf-sidebar__content--animate {\n        -webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 0, 0.3, 1),\n          padding 0.3s cubic-bezier(0, 0, 0.3, 1);\n        transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1),\n          padding 0.3s cubic-bezier(0, 0, 0.3, 1);\n      }\n    \n            \n\n            \n                template\n                \n\n\n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isBrowser\n                            \n                            \n                                    Private\n                                _sidebars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _markForCheck\n                            \n                            \n                                    Private\n                                _onToggle\n                            \n                            \n                                    Private\n                                _subscribe\n                            \n                            \n                                    Private\n                                _unsubscribe\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowSidebarBackdropControl\n                            \n                            \n                                animate\n                            \n                            \n                                backdropClass\n                            \n                            \n                                contentClass\n                            \n                            \n                                showBackdrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                backdropClick\n                            \n                            \n                                showBackdropChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_ref: ChangeDetectorRef, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/sidebar/sidebar-container.component.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowSidebarBackdropControl\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        backdropClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        contentClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:94\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showBackdrop\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:90\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        backdropClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showBackdropChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:91\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _markForCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    _markForCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:320\n                \n            \n\n\n            \n                \n                    Triggers change detection to recompute styles.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _onToggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    _onToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:301\n                \n            \n\n\n            \n                \n                    Check if we should show the backdrop when a sidebar is toggled.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _subscribe\n                        \n                    \n                \n            \n            \n                \n                    \n                    _subscribe(sidebar: SidebarComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:267\n                \n            \n\n\n            \n                \n                    Subscribes from a sidebar events to react properly.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sidebar\n                                    \n                                                SidebarComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _unsubscribe\n                        \n                    \n                \n            \n            \n                \n                    \n                    _unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:283\n                \n            \n\n\n            \n                \n                    Unsubscribes from all sidebars.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/sidebar/sidebar-container.component.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _sidebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/sidebar/sidebar-container.component.ts:97\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n} from '@angular/core';\nimport { SidebarComponent } from './sidebar.component';\n\n// Based on https://github.com/central-factory/ng-sidebar\n@Component({\n  selector: 'cf-sidebar-container',\n  template: `\n    \n\n    \n\n    \n      \n    \n  `,\n  styles: [\n    `\n      :host {\n        box-sizing: border-box;\n        display: block;\n        position: relative;\n        height: 100%;\n        width: 100%;\n        overflow: hidden;\n      }\n\n      .cf-sidebar__backdrop {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: #000;\n        opacity: 0.75;\n        pointer-events: auto;\n        z-index: 1;\n      }\n\n      .cf-sidebar__content {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n      }\n\n      .cf-sidebar__content--animate {\n        -webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 0, 0.3, 1),\n          padding 0.3s cubic-bezier(0, 0, 0.3, 1);\n        transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1),\n          padding 0.3s cubic-bezier(0, 0, 0.3, 1);\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidebarContainerComponent\n  implements AfterContentInit, OnChanges, OnDestroy\n{\n  @Input() animate = true;\n\n  @Input() allowSidebarBackdropControl = true;\n  @Input() showBackdrop = false;\n  @Output() showBackdropChange = new EventEmitter();\n  @Output() backdropClick = new EventEmitter();\n\n  @Input() contentClass!: string;\n  @Input() backdropClass!: string;\n\n  private _sidebars: Array = [];\n\n  private _isBrowser: boolean;\n\n  constructor(\n    private _ref: ChangeDetectorRef,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    this._isBrowser = isPlatformBrowser(platformId);\n  }\n\n  ngAfterContentInit(): void {\n    if (!this._isBrowser) {\n      return;\n    }\n\n    this._onToggle();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this._isBrowser) {\n      return;\n    }\n\n    if (changes['showBackdrop']) {\n      this.showBackdropChange.emit(changes['showBackdrop'].currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (!this._isBrowser) {\n      return;\n    }\n\n    this._unsubscribe();\n  }\n\n  /**\n   * @internal\n   *\n   * Adds a sidebar to the container's list of sidebars.\n   *\n   * @param sidebar {Sidebar} A sidebar within the container to register.\n   */\n  _addSidebar(sidebar: SidebarComponent) {\n    this._sidebars.push(sidebar);\n    this._subscribe(sidebar);\n  }\n\n  /**\n   * @internal\n   *\n   * Removes a sidebar from the container's list of sidebars.\n   *\n   * @param sidebar {Sidebar} The sidebar to remove.\n   */\n  _removeSidebar(sidebar: SidebarComponent) {\n    const index = this._sidebars.indexOf(sidebar);\n    if (index !== -1) {\n      this._sidebars.splice(index, 1);\n    }\n  }\n\n  /**\n   * @internal\n   *\n   * Computes `margin` value to push page contents to accommodate open sidebars as needed.\n   *\n   * @return {CSSStyleDeclaration} margin styles for the page content.\n   */\n  _getContentStyle(): CSSStyleDeclaration {\n    let left = 0,\n      right = 0,\n      top = 0,\n      bottom = 0;\n\n    let transformStyle = '';\n    let heightStyle = '';\n    let widthStyle = '';\n\n    for (const sidebar of this._sidebars) {\n      // Slide mode: we need to translate the entire container\n      if (sidebar._isModeSlide) {\n        if (sidebar.opened) {\n          const transformDir = sidebar._isLeftOrRight ? 'X' : 'Y';\n          const transformAmt = `${sidebar._isLeftOrTop ? '' : '-'}${\n            sidebar._isLeftOrRight ? sidebar._width : sidebar._height\n          }`;\n\n          transformStyle = `translate${transformDir}(${transformAmt}px)`;\n        }\n      }\n\n      // Create a space for the sidebar\n      if ((sidebar._isModePush && sidebar.opened) || sidebar.dock) {\n        let paddingAmt = 0;\n\n        if (sidebar._isModeSlide && sidebar.opened) {\n          if (sidebar._isLeftOrRight) {\n            widthStyle = '100%';\n          } else {\n            heightStyle = '100%';\n          }\n        } else {\n          if (sidebar._isDocked || (sidebar._isModeOver && sidebar.dock)) {\n            paddingAmt = sidebar._dockedSize;\n          } else {\n            paddingAmt = sidebar._isLeftOrRight\n              ? sidebar._width\n              : sidebar._height;\n          }\n        }\n\n        switch (sidebar.position) {\n          case 'left':\n            left = Math.max(left, paddingAmt);\n            break;\n\n          case 'right':\n            right = Math.max(right, paddingAmt);\n            break;\n\n          case 'top':\n            top = Math.max(top, paddingAmt);\n            break;\n\n          case 'bottom':\n            bottom = Math.max(bottom, paddingAmt);\n            break;\n        }\n      }\n    }\n\n    return {\n      padding: `${top}px ${right}px ${bottom}px ${left}px`,\n      webkitTransform: transformStyle,\n      transform: transformStyle,\n      height: heightStyle,\n      width: widthStyle,\n    } as CSSStyleDeclaration;\n  }\n\n  /**\n   * @internal\n   *\n   * Closes sidebars when the backdrop is clicked, if they have the\n   * `closeOnClickBackdrop` option set.\n   */\n  _onBackdropClicked(): void {\n    let backdropClicked = false;\n    for (const sidebar of this._sidebars) {\n      if (\n        sidebar.opened &&\n        sidebar.showBackdrop &&\n        sidebar.closeOnClickBackdrop\n      ) {\n        sidebar.close();\n        backdropClicked = true;\n      }\n    }\n\n    if (backdropClicked) {\n      this.backdropClick.emit();\n    }\n  }\n\n  /**\n   * Subscribes from a sidebar events to react properly.\n   */\n  private _subscribe(sidebar: SidebarComponent): void {\n    sidebar.openStart.subscribe(() => this._onToggle());\n    sidebar.sidebarOpen.subscribe(() => this._markForCheck());\n\n    sidebar.closeStart.subscribe(() => this._onToggle());\n    sidebar.sidebarClose.subscribe(() => this._markForCheck());\n\n    sidebar.modeChange.subscribe(() => this._markForCheck());\n    sidebar.positionChange.subscribe(() => this._markForCheck());\n\n    sidebar._onRerender.subscribe(() => this._markForCheck());\n  }\n\n  /**\n   * Unsubscribes from all sidebars.\n   */\n  private _unsubscribe(): void {\n    for (const sidebar of this._sidebars) {\n      sidebar.openStart.unsubscribe();\n      sidebar.sidebarOpen.unsubscribe();\n\n      sidebar.closeStart.unsubscribe();\n      sidebar.sidebarClose.unsubscribe();\n\n      sidebar.modeChange.unsubscribe();\n      sidebar.positionChange.unsubscribe();\n\n      sidebar._onRerender.unsubscribe();\n    }\n  }\n\n  /**\n   * Check if we should show the backdrop when a sidebar is toggled.\n   */\n  private _onToggle(): void {\n    if (this._sidebars.length > 0 && this.allowSidebarBackdropControl) {\n      // Show backdrop if a single open sidebar has it set\n      const hasOpen = this._sidebars.some(\n        (sidebar) => sidebar.opened && sidebar.showBackdrop\n      );\n\n      this.showBackdrop = hasOpen;\n      this.showBackdropChange.emit(hasOpen);\n    }\n\n    setTimeout(() => {\n      this._markForCheck();\n    });\n  }\n\n  /**\n   * Triggers change detection to recompute styles.\n   */\n  private _markForCheck(): void {\n    this._ref.markForCheck();\n  }\n}\n\n    \n\n\n    \n            \n      :host {\n        box-sizing: border-box;\n        display: block;\n        position: relative;\n        height: 100%;\n        width: 100%;\n        overflow: hidden;\n      }\n\n      .cf-sidebar__backdrop {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: #000;\n        opacity: 0.75;\n        pointer-events: auto;\n        z-index: 1;\n      }\n\n      .cf-sidebar__content {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n      }\n\n      .cf-sidebar__content--animate {\n        -webkit-transition: -webkit-transform 0.3s cubic-bezier(0, 0, 0.3, 1),\n          padding 0.3s cubic-bezier(0, 0, 0.3, 1);\n        transition: transform 0.3s cubic-bezier(0, 0, 0.3, 1),\n          padding 0.3s cubic-bezier(0, 0, 0.3, 1);\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppScene', 'selector': 'cf-scene'},{'name': 'NavbarComponent', 'selector': 'cf-navbar'},{'name': 'SidebarComponent', 'selector': 'cf-sidebar'},{'name': 'SidebarContainerComponent', 'selector': 'cf-sidebar-container'},{'name': 'SvgIconComponent', 'selector': 'cf-svg-icon'}];\n    var DIRECTIVES = [{'name': 'BlockDirective', 'selector': '[cfBlock]'},{'name': 'CloseSidebarDirective', 'selector': '[cfCloseSidebar]'},{'name': 'ElemDirective', 'selector': '[cfElem]'},{'name': 'ModDirective', 'selector': '[cfMod]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SidebarItem.html":{"url":"interfaces/SidebarItem.html","title":"interface - SidebarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SidebarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/scene/app.scene.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            routerLink\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerLink:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { SelectedAvatarState } from '@central-factory/agent-avatars/states/selected-avatar/selected-avatar.state';\nimport { Avatar } from '@central-factory/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface SidebarItem {\n  name: string;\n  routerLink: string[];\n  icon: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'cf-scene',\n  template: `\n    \n      \n        \n          \n            \n            \n              \n                \n                  \n                    Account\n                  \n                  \n                \n\n                \n                  \n                    \n                      {{ item.name }}\n                    \n                    \n                      \n                    \n                  \n                \n\n                \n              \n            \n\n            \n              \n                \n              \n            \n          \n\n          \n            \n              \n                \n              \n            \n          \n        \n        \n        \n      \n    \n  `,\n  styles: [\n    `\n      .scene__body {\n        height: calc(100vh - 44px);\n      }\n\n      .scene__container {\n        height: 100%;\n        width: 100%;\n        /* margin: 0; */\n        padding: 0;\n        overflow: auto;\n      }\n\n      .sidebarItem {\n        &__text {\n          display: inline-block;\n          height: 55px;\n          margin-top: 15px;\n          vertical-align: top;\n        }\n\n        &__image {\n          width: 55px;\n          height: 55px;\n          border-radius: 50%;\n          margin-top: 15px;\n          &:hover {\n            border: 3px solid var(--color-primary);\n          }\n        }\n\n        &__text-content {\n          padding-left: 15px;\n          color: white;\n          width: 200px;\n          display: inline-block;\n          vertical-align: middle;\n          line-height: 55px;\n        }\n\n        .button {\n          &--secondary {\n            &:hover {\n              background-color: var(--color-primary);\n              color: var(--color-light);\n              .icon__svg {\n                fill: var(--color-light);\n              }\n            }\n          }\n        }\n      }\n    `,\n  ],\n})\nexport class AppScene implements OnInit {\n  title = 'Metaverse Portal';\n  sidebarIsOpen = false;\n\n  sidebarItems: SidebarItem[] = [\n    {\n      name: 'Avatar',\n      routerLink: ['/selected-avatar'],\n      icon: 'assets/icons/mdi/account.svg',\n      active: false,\n    },\n    {\n      name: 'Play',\n      routerLink: ['/play'],\n      icon: 'assets/icons/mdi/play.svg',\n      active: false,\n    },\n    {\n      name: 'Inventory',\n      routerLink: ['/inventory'],\n      icon: 'assets/icons/mdi/bag-personal.svg',\n      active: false,\n    },\n    {\n      name: 'Marketplace',\n      routerLink: ['/marketplace'],\n      icon: 'assets/icons/mdi/store.svg',\n      active: false,\n    },\n    {\n      name: 'Settings',\n      routerLink: ['/settings'],\n      icon: 'assets/icons/mdi/cog.svg',\n      active: false,\n    },\n  ];\n\n  selectedAvatar$: Observable =\n    this.selectedAvatarState.avatar$;\n\n  constructor(\n    private router: Router,\n    private selectedAvatarState: SelectedAvatarState\n  ) {}\n\n  ngOnInit() {\n    this.setSidebarItemsActive();\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => this.setSidebarItemsActive());\n  }\n\n  private setSidebarItemsActive() {\n    this.sidebarItems.forEach((item) => {\n      item.active = this.router.url.endsWith(item.routerLink.join('/'));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    SidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nCloseSidebarDirective\n\nCloseSidebarDirective\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nCloseSidebarDirective->SidebarModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nSidebarContainerComponent\n\nSidebarContainerComponent\n\nSidebarModule -->\n\nSidebarContainerComponent->SidebarModule\n\n\n\n\n\nCloseSidebarDirective \n\nCloseSidebarDirective \n\nCloseSidebarDirective  -->\n\nSidebarModule->CloseSidebarDirective \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\nSidebarContainerComponent \n\nSidebarContainerComponent \n\nSidebarContainerComponent  -->\n\nSidebarModule->SidebarContainerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/sidebar/sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CloseSidebarDirective\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            SidebarContainerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CloseSidebarDirective\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            SidebarContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CloseSidebarDirective } from './close-sidebar.directive';\nimport { SidebarContainerComponent } from './sidebar-container.component';\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    SidebarComponent,\n    SidebarContainerComponent,\n    CloseSidebarDirective,\n  ],\n  exports: [SidebarComponent, SidebarContainerComponent, CloseSidebarDirective],\n})\nexport class SidebarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgHttpLoader.html":{"url":"injectables/SvgHttpLoader.html","title":"injectable - SvgHttpLoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SvgHttpLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvgLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/svg-icon/svg-loader.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSvg\n                        \n                    \n                \n            \n            \n                \ngetSvg(url: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SvgLoader\n\n                \n            \n            \n                \n                        Defined in         SvgLoader:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport abstract class SvgLoader {\n  abstract getSvg(url: string): Observable;\n}\n\n@Injectable()\nexport class SvgHttpLoader extends SvgLoader {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getSvg(url: string): Observable {\n    return this.http.get(url, { responseType: 'text' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SvgIconComponent.html":{"url":"components/SvgIconComponent.html","title":"component - SvgIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SvgIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/angular/svg-icon/svg-icon.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-svg-icon\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _svgStyle\n                            \n                            \n                                    Private\n                                helper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyChanges\n                            \n                            \n                                    Private\n                                copyNgContentAttribute\n                            \n                            \n                                    Private\n                                destroy\n                            \n                            \n                                    Private\n                                doAria\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                initSvg\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetDiffer\n                            \n                            \n                                    Private\n                                setClass\n                            \n                            \n                                    Private\n                                setNgContentAttribute\n                            \n                            \n                                    Private\n                                setStyle\n                            \n                            \n                                    Private\n                                setSvg\n                            \n                            \n                                    Private\n                                stylize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyClass\n                            \n                            \n                                class\n                            \n                            \n                                name\n                            \n                            \n                                src\n                            \n                            \n                                stretch\n                            \n                            \n                                svgAriaLabel\n                            \n                            \n                                svgClass\n                            \n                            \n                                svgStyle\n                            \n                            \n                                viewBox\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    svgStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, differs: KeyValueDiffers, renderer: Renderer2, iconReg: SvgIconRegistryService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                        KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iconReg\n                                                  \n                                                        \n                                                                        SvgIconRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        applyClass\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        src\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stretch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgAriaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgStyle\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewBox\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:42\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        applyChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: KeyValueChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            KeyValueChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        copyNgContentAttribute\n                        \n                    \n                \n            \n            \n                \n                    \n                    copyNgContentAttribute(hostElem: any, icon: SVGElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hostElem\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                            SVGElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doAria\n                        \n                    \n                \n            \n            \n                \n                    \n                    doAria(label: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:326\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initSvg\n                        \n                    \n                \n            \n            \n                \n                    \n                    initSvg(svg: SVGElement | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                            SVGElement | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changeRecord: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changeRecord\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resetDiffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetDiffer()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setClass(target: HTMLElement | SVGSVGElement, previous: string | string[] | null, current: string | string[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            HTMLElement | SVGSVGElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previous\n                                    \n                                            string | string[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    current\n                                    \n                                            string | string[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setNgContentAttribute\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNgContentAttribute(parent: Node, attributeName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attributeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStyle(nameAndUnit: string, value: string | number | null | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:286\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameAndUnit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            string | number | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setSvg\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSvg(svg: SVGElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                            SVGElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        stylize\n                        \n                    \n                \n            \n            \n                \n                    \n                    stylize()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _svgStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        helper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SvgIconHelper()\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        svgStyle\n                    \n                \n\n\n                \n                    \n                        setsvgStyle(values: literal type | null)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            values\n                                                    \n                                                            \n                                                                        literal type | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueChangeRecord,\n  KeyValueChanges,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SvgIconRegistryService } from './svg-icon-registry.service';\n\nclass SvgIconHelper {\n  svg!: SVGElement;\n  icnSub!: Subscription;\n  differ?: KeyValueDiffer;\n  loaded = false;\n}\n\n@Component({\n  selector: 'cf-svg-icon',\n  template: '',\n})\nexport class SvgIconComponent implements OnInit, OnDestroy, OnChanges, DoCheck {\n  @Input() src!: string;\n  @Input() name?: string;\n  @Input() stretch = false;\n  @Input() applyClass = false;\n  @Input() svgClass?: any;\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('class') klass?: any;\n  @Input() viewBox?: string;\n  @Input() svgAriaLabel?: string;\n\n  // Adapted from ngStyle (see:  angular/packages/common/src/directives/ng_style.ts)\n  @Input()\n  set svgStyle(values: { [klass: string]: any } | null) {\n    this._svgStyle = values;\n    if (!this.helper.differ && values) {\n      this.helper.differ = this.differs.find(values).create();\n    }\n  }\n\n  private helper = new SvgIconHelper();\n  private _svgStyle: { [key: string]: any } | null = null;\n\n  constructor(\n    private element: ElementRef,\n    private differs: KeyValueDiffers,\n    private renderer: Renderer2,\n    private iconReg: SvgIconRegistryService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.init();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  ngOnChanges(changeRecord: SimpleChanges) {\n    const elemSvg = this.element.nativeElement.firstChild;\n\n    if (changeRecord.src || changeRecord.name) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n    if (changeRecord.stretch) {\n      this.stylize();\n    }\n\n    if (changeRecord.applyClass) {\n      if (this.applyClass) {\n        this.setClass(elemSvg, null, this.klass);\n      } else {\n        this.setClass(elemSvg, this.klass, null);\n      }\n    }\n\n    if (changeRecord.svgClass) {\n      this.setClass(\n        elemSvg,\n        changeRecord.svgClass.previousValue,\n        changeRecord.svgClass.currentValue\n      );\n    }\n\n    if (changeRecord.klass) {\n      const elem = this.element.nativeElement;\n      this.setClass(\n        elem,\n        changeRecord.klass.previousValue,\n        changeRecord.klass.currentValue\n      );\n\n      if (this.applyClass) {\n        this.setClass(\n          elemSvg,\n          changeRecord.klass.previousValue,\n          changeRecord.klass.currentValue\n        );\n      } else {\n        this.setClass(elemSvg, changeRecord.klass.previousValue, null);\n      }\n    }\n\n    if (changeRecord.viewBox) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n\n    if (changeRecord.svgAriaLabel) {\n      this.doAria(changeRecord.svgAriaLabel.currentValue);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.helper.svg && this.helper.differ) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const changes = this.helper.differ.diff(this._svgStyle!);\n      if (changes) {\n        this.applyChanges(changes);\n      }\n    }\n  }\n\n  private init() {\n    if (this.name) {\n      const svgObs = this.iconReg.getSvgByName(this.name);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe((svg) => this.initSvg(svg));\n      }\n    } else if (this.src) {\n      const svgObs = this.iconReg.loadSvg(this.src);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe((svg) => this.initSvg(svg));\n      }\n    } else {\n      const elem = this.element.nativeElement;\n      elem.innerHTML = '';\n      this.cdr.markForCheck();\n    }\n  }\n\n  private initSvg(svg: SVGElement | undefined): void {\n    if (!this.helper.loaded && svg) {\n      this.setSvg(svg);\n      this.resetDiffer();\n    }\n  }\n\n  private destroy() {\n    if (this.helper.icnSub) {\n      this.helper.icnSub.unsubscribe();\n    }\n    this.helper = new SvgIconHelper();\n  }\n\n  private resetDiffer() {\n    if (this._svgStyle && !this.helper.differ) {\n      this.helper.differ = this.differs.find(this._svgStyle).create();\n    }\n  }\n\n  private setSvg(svg: SVGElement) {\n    if (!this.helper.loaded && svg) {\n      this.helper.svg = svg;\n      const icon = svg.cloneNode(true) as SVGElement;\n      const elem = this.element.nativeElement;\n\n      elem.innerHTML = '';\n      this.renderer.appendChild(elem, icon);\n      this.helper.loaded = true;\n\n      this.copyNgContentAttribute(elem, icon);\n\n      if (this.klass && this.applyClass) {\n        this.setClass(elem.firstChild, null, this.klass);\n      }\n\n      if (this.svgClass) {\n        this.setClass(elem.firstChild, null, this.svgClass);\n      }\n\n      if (this.viewBox) {\n        if (this.viewBox === 'auto') {\n          // Attempt to convert height & width to a viewBox.\n          const w = icon.getAttribute('width');\n          const h = icon.getAttribute('height');\n          if (h && w) {\n            const vb = `0 0 ${w} ${h}`;\n            this.renderer.setAttribute(icon, 'viewBox', vb);\n            this.renderer.removeAttribute(icon, 'width');\n            this.renderer.removeAttribute(icon, 'height');\n          }\n        } else if (this.viewBox !== '') {\n          this.renderer.setAttribute(icon, 'viewBox', this.viewBox);\n          this.renderer.removeAttribute(icon, 'width');\n          this.renderer.removeAttribute(icon, 'height');\n        }\n      }\n\n      this.stylize();\n\n      // If there is not a svgAriaLabel and the SVG has an arial-label, then do not override\n      // the SVG's aria-label.\n      if (\n        !(\n          this.svgAriaLabel === undefined &&\n          elem.firstChild.hasAttribute('aria-label')\n        )\n      ) {\n        this.doAria(this.svgAriaLabel || '');\n      }\n\n      this.cdr.markForCheck();\n    }\n  }\n\n  private copyNgContentAttribute(hostElem: any, icon: SVGElement) {\n    const attributes = hostElem.attributes as NamedNodeMap;\n    const len = attributes.length;\n    for (let i = 0; i ) {\n    changes.forEachRemovedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, null)\n    );\n    changes.forEachAddedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, record.currentValue)\n    );\n    changes.forEachChangedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, record.currentValue)\n    );\n  }\n\n  private setStyle(\n    nameAndUnit: string,\n    value: string | number | null | undefined\n  ) {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value !== null && unit ? `${value}${unit}` : value;\n    const svg = this.element.nativeElement.firstChild;\n\n    if (value !== null) {\n      this.renderer.setStyle(svg, name, value as string);\n    } else {\n      this.renderer.removeStyle(svg, name);\n    }\n  }\n\n  private setClass(\n    target: HTMLElement | SVGSVGElement,\n    previous: string | string[] | null,\n    current: string | string[] | null\n  ) {\n    if (target) {\n      if (previous) {\n        const klasses = (\n          Array.isArray(previous) ? previous : previous.split(' ')\n        ).filter((klass) => klass);\n        for (const k of klasses) {\n          this.renderer.removeClass(target, k);\n        }\n      }\n      if (current) {\n        const klasses = (\n          Array.isArray(current) ? current : current.split(' ')\n        ).filter((klass) => klass);\n        for (const k of klasses) {\n          this.renderer.addClass(target, k);\n        }\n      }\n    }\n  }\n\n  private doAria(label: string) {\n    const svg = this.element.nativeElement.firstChild;\n    if (svg) {\n      if (label === '') {\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n        this.renderer.removeAttribute(svg, 'aria-label');\n      } else {\n        this.renderer.removeAttribute(svg, 'aria-hidden');\n        this.renderer.setAttribute(svg, 'aria-label', label);\n      }\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppScene', 'selector': 'cf-scene'},{'name': 'NavbarComponent', 'selector': 'cf-navbar'},{'name': 'SidebarComponent', 'selector': 'cf-sidebar'},{'name': 'SidebarContainerComponent', 'selector': 'cf-sidebar-container'},{'name': 'SvgIconComponent', 'selector': 'cf-svg-icon'}];\n    var DIRECTIVES = [{'name': 'BlockDirective', 'selector': '[cfBlock]'},{'name': 'CloseSidebarDirective', 'selector': '[cfCloseSidebar]'},{'name': 'ElemDirective', 'selector': '[cfElem]'},{'name': 'ModDirective', 'selector': '[cfMod]'}];\n    var ACTUAL_COMPONENT = {'name': 'SvgIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SvgIconConfig.html":{"url":"interfaces/SvgIconConfig.html","title":"interface - SvgIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SvgIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-icon.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            loader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loader:         Provider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Provider\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { SVG_ICON_REGISTRY_PROVIDER } from './svg-icon-registry.service';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { SvgHttpLoader, SvgLoader } from './svg-loader';\n\nexport interface SvgIconConfig {\n  loader?: Provider;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SvgIconComponent],\n  exports: [SvgIconComponent],\n})\nexport class SvgIconModule {\n  static forRoot(\n    config: SvgIconConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: SvgIconModule,\n      providers: [\n        SVG_ICON_REGISTRY_PROVIDER,\n        config.loader || { provide: SvgLoader, useClass: SvgHttpLoader },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvgIconHelper.html":{"url":"classes/SvgIconHelper.html","title":"class - SvgIconHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvgIconHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-icon.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                differ\n                            \n                            \n                                icnSub\n                            \n                            \n                                loaded\n                            \n                            \n                                svg\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        differ\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValueDiffer\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icnSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        svg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SVGElement\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueChangeRecord,\n  KeyValueChanges,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SvgIconRegistryService } from './svg-icon-registry.service';\n\nclass SvgIconHelper {\n  svg!: SVGElement;\n  icnSub!: Subscription;\n  differ?: KeyValueDiffer;\n  loaded = false;\n}\n\n@Component({\n  selector: 'cf-svg-icon',\n  template: '',\n})\nexport class SvgIconComponent implements OnInit, OnDestroy, OnChanges, DoCheck {\n  @Input() src!: string;\n  @Input() name?: string;\n  @Input() stretch = false;\n  @Input() applyClass = false;\n  @Input() svgClass?: any;\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('class') klass?: any;\n  @Input() viewBox?: string;\n  @Input() svgAriaLabel?: string;\n\n  // Adapted from ngStyle (see:  angular/packages/common/src/directives/ng_style.ts)\n  @Input()\n  set svgStyle(values: { [klass: string]: any } | null) {\n    this._svgStyle = values;\n    if (!this.helper.differ && values) {\n      this.helper.differ = this.differs.find(values).create();\n    }\n  }\n\n  private helper = new SvgIconHelper();\n  private _svgStyle: { [key: string]: any } | null = null;\n\n  constructor(\n    private element: ElementRef,\n    private differs: KeyValueDiffers,\n    private renderer: Renderer2,\n    private iconReg: SvgIconRegistryService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.init();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  ngOnChanges(changeRecord: SimpleChanges) {\n    const elemSvg = this.element.nativeElement.firstChild;\n\n    if (changeRecord.src || changeRecord.name) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n    if (changeRecord.stretch) {\n      this.stylize();\n    }\n\n    if (changeRecord.applyClass) {\n      if (this.applyClass) {\n        this.setClass(elemSvg, null, this.klass);\n      } else {\n        this.setClass(elemSvg, this.klass, null);\n      }\n    }\n\n    if (changeRecord.svgClass) {\n      this.setClass(\n        elemSvg,\n        changeRecord.svgClass.previousValue,\n        changeRecord.svgClass.currentValue\n      );\n    }\n\n    if (changeRecord.klass) {\n      const elem = this.element.nativeElement;\n      this.setClass(\n        elem,\n        changeRecord.klass.previousValue,\n        changeRecord.klass.currentValue\n      );\n\n      if (this.applyClass) {\n        this.setClass(\n          elemSvg,\n          changeRecord.klass.previousValue,\n          changeRecord.klass.currentValue\n        );\n      } else {\n        this.setClass(elemSvg, changeRecord.klass.previousValue, null);\n      }\n    }\n\n    if (changeRecord.viewBox) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n\n    if (changeRecord.svgAriaLabel) {\n      this.doAria(changeRecord.svgAriaLabel.currentValue);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.helper.svg && this.helper.differ) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const changes = this.helper.differ.diff(this._svgStyle!);\n      if (changes) {\n        this.applyChanges(changes);\n      }\n    }\n  }\n\n  private init() {\n    if (this.name) {\n      const svgObs = this.iconReg.getSvgByName(this.name);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe((svg) => this.initSvg(svg));\n      }\n    } else if (this.src) {\n      const svgObs = this.iconReg.loadSvg(this.src);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe((svg) => this.initSvg(svg));\n      }\n    } else {\n      const elem = this.element.nativeElement;\n      elem.innerHTML = '';\n      this.cdr.markForCheck();\n    }\n  }\n\n  private initSvg(svg: SVGElement | undefined): void {\n    if (!this.helper.loaded && svg) {\n      this.setSvg(svg);\n      this.resetDiffer();\n    }\n  }\n\n  private destroy() {\n    if (this.helper.icnSub) {\n      this.helper.icnSub.unsubscribe();\n    }\n    this.helper = new SvgIconHelper();\n  }\n\n  private resetDiffer() {\n    if (this._svgStyle && !this.helper.differ) {\n      this.helper.differ = this.differs.find(this._svgStyle).create();\n    }\n  }\n\n  private setSvg(svg: SVGElement) {\n    if (!this.helper.loaded && svg) {\n      this.helper.svg = svg;\n      const icon = svg.cloneNode(true) as SVGElement;\n      const elem = this.element.nativeElement;\n\n      elem.innerHTML = '';\n      this.renderer.appendChild(elem, icon);\n      this.helper.loaded = true;\n\n      this.copyNgContentAttribute(elem, icon);\n\n      if (this.klass && this.applyClass) {\n        this.setClass(elem.firstChild, null, this.klass);\n      }\n\n      if (this.svgClass) {\n        this.setClass(elem.firstChild, null, this.svgClass);\n      }\n\n      if (this.viewBox) {\n        if (this.viewBox === 'auto') {\n          // Attempt to convert height & width to a viewBox.\n          const w = icon.getAttribute('width');\n          const h = icon.getAttribute('height');\n          if (h && w) {\n            const vb = `0 0 ${w} ${h}`;\n            this.renderer.setAttribute(icon, 'viewBox', vb);\n            this.renderer.removeAttribute(icon, 'width');\n            this.renderer.removeAttribute(icon, 'height');\n          }\n        } else if (this.viewBox !== '') {\n          this.renderer.setAttribute(icon, 'viewBox', this.viewBox);\n          this.renderer.removeAttribute(icon, 'width');\n          this.renderer.removeAttribute(icon, 'height');\n        }\n      }\n\n      this.stylize();\n\n      // If there is not a svgAriaLabel and the SVG has an arial-label, then do not override\n      // the SVG's aria-label.\n      if (\n        !(\n          this.svgAriaLabel === undefined &&\n          elem.firstChild.hasAttribute('aria-label')\n        )\n      ) {\n        this.doAria(this.svgAriaLabel || '');\n      }\n\n      this.cdr.markForCheck();\n    }\n  }\n\n  private copyNgContentAttribute(hostElem: any, icon: SVGElement) {\n    const attributes = hostElem.attributes as NamedNodeMap;\n    const len = attributes.length;\n    for (let i = 0; i ) {\n    changes.forEachRemovedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, null)\n    );\n    changes.forEachAddedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, record.currentValue)\n    );\n    changes.forEachChangedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, record.currentValue)\n    );\n  }\n\n  private setStyle(\n    nameAndUnit: string,\n    value: string | number | null | undefined\n  ) {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value !== null && unit ? `${value}${unit}` : value;\n    const svg = this.element.nativeElement.firstChild;\n\n    if (value !== null) {\n      this.renderer.setStyle(svg, name, value as string);\n    } else {\n      this.renderer.removeStyle(svg, name);\n    }\n  }\n\n  private setClass(\n    target: HTMLElement | SVGSVGElement,\n    previous: string | string[] | null,\n    current: string | string[] | null\n  ) {\n    if (target) {\n      if (previous) {\n        const klasses = (\n          Array.isArray(previous) ? previous : previous.split(' ')\n        ).filter((klass) => klass);\n        for (const k of klasses) {\n          this.renderer.removeClass(target, k);\n        }\n      }\n      if (current) {\n        const klasses = (\n          Array.isArray(current) ? current : current.split(' ')\n        ).filter((klass) => klass);\n        for (const k of klasses) {\n          this.renderer.addClass(target, k);\n        }\n      }\n    }\n  }\n\n  private doAria(label: string) {\n    const svg = this.element.nativeElement.firstChild;\n    if (svg) {\n      if (label === '') {\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n        this.renderer.removeAttribute(svg, 'aria-label');\n      } else {\n        this.renderer.removeAttribute(svg, 'aria-hidden');\n        this.renderer.setAttribute(svg, 'aria-label', label);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SvgIconModule.html":{"url":"modules/SvgIconModule.html","title":"module - SvgIconModule","body":"\n                   \n\n\n\n\n    Modules\n    SvgIconModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SvgIconModule\n\n\n\ncluster_SvgIconModule_exports\n\n\n\ncluster_SvgIconModule_declarations\n\n\n\n\nSvgIconComponent\n\nSvgIconComponent\n\n\n\nSvgIconModule\n\nSvgIconModule\n\nSvgIconModule -->\n\nSvgIconComponent->SvgIconModule\n\n\n\n\n\nSvgIconComponent \n\nSvgIconComponent \n\nSvgIconComponent  -->\n\nSvgIconModule->SvgIconComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-icon.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SvgIconComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SvgIconComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: SvgIconConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                SvgIconConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { SVG_ICON_REGISTRY_PROVIDER } from './svg-icon-registry.service';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { SvgHttpLoader, SvgLoader } from './svg-loader';\n\nexport interface SvgIconConfig {\n  loader?: Provider;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SvgIconComponent],\n  exports: [SvgIconComponent],\n})\nexport class SvgIconModule {\n  static forRoot(\n    config: SvgIconConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: SvgIconModule,\n      providers: [\n        SVG_ICON_REGISTRY_PROVIDER,\n        config.loader || { provide: SvgLoader, useClass: SvgHttpLoader },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgIconRegistryService.html":{"url":"injectables/SvgIconRegistryService.html","title":"injectable - SvgIconRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SvgIconRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-icon-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                document\n                            \n                            \n                                    Private\n                                iconsByUrl\n                            \n                            \n                                    Private\n                                iconsLoadingByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSvg\n                            \n                            \n                                getSvgByName\n                            \n                            \n                                loadSvg\n                            \n                            \n                                unloadSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: SvgLoader, platformId: Record, serverUrl: string | undefined, _document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        SvgLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serverUrl\n                                                  \n                                                        \n                                                                    string | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSvg\n                        \n                    \n                \n            \n            \n                \naddSvg(name: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:37\n                \n            \n\n\n            \n                \n                    Add a SVG to the registry by passing a name and the SVG.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSvgByName\n                        \n                    \n                \n            \n            \n                \ngetSvgByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:84\n                \n            \n\n\n            \n                \n                    Get loaded SVG from registry by name. (also works by url because of blended map)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSvg\n                        \n                    \n                \n            \n            \n                \nloadSvg(url: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:47\n                \n            \n\n\n            \n                \n                    Load a SVG to the registry from a URL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        url\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unloadSvg\n                        \n                    \n                \n            \n            \n                \nunloadSvg(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:94\n                \n            \n\n\n            \n                \n                    Remove a SVG from the registry by URL (or name).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iconsByUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iconsLoadingByUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Optional,\n  PLATFORM_ID,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n  throwError as observableThrowError,\n} from 'rxjs';\nimport { catchError, finalize, map, share, tap } from 'rxjs/operators';\nimport { SvgLoader } from './svg-loader';\n\nexport const SERVER_URL = new InjectionToken('SERVER_URL');\n\n@Injectable()\nexport class SvgIconRegistryService {\n  private document: Document;\n  private iconsByUrl = new Map();\n  private iconsLoadingByUrl = new Map>();\n\n  constructor(\n    private loader: SvgLoader,\n    @Inject(PLATFORM_ID) private platformId: Record,\n    @Optional() @Inject(SERVER_URL) protected serverUrl: string | undefined,\n    @Optional() @Inject(DOCUMENT) private _document: any\n  ) {\n    this.document = this._document;\n  }\n\n  /** Add a SVG to the registry by passing a name and the SVG. */\n  addSvg(name: string, data: string) {\n    if (!this.iconsByUrl.has(name)) {\n      const div = this.document.createElement('DIV');\n      div.innerHTML = data;\n      const svg = div.querySelector('svg') as SVGElement;\n      this.iconsByUrl.set(name, svg);\n    }\n  }\n\n  /** Load a SVG to the registry from a URL. */\n  loadSvg(\n    url: string,\n    name: string = url\n  ): Observable | undefined {\n    // not sure if there should be a possibility to use name for server usage\n    // so overriding it for now if provided\n    // maybe should separate functionality for url and name use-cases\n    if (this.serverUrl && url.match(/^(http(s)?):/) === null) {\n      url = this.serverUrl + url;\n      name = url;\n    }\n\n    if (this.iconsByUrl.has(name)) {\n      return observableOf(this.iconsByUrl.get(name));\n    } else if (this.iconsLoadingByUrl.has(name)) {\n      return this.iconsLoadingByUrl.get(name);\n    }\n    const o = this.loader.getSvg(url).pipe(\n      map((svg) => {\n        const div = this.document.createElement('DIV');\n        div.innerHTML = svg;\n        return div.querySelector('svg') as SVGElement;\n      }),\n      tap((svg) => this.iconsByUrl.set(name, svg)),\n      catchError((err) => {\n        console.error(err);\n        return observableThrowError(err);\n      }),\n      finalize(() => this.iconsLoadingByUrl.delete(name)),\n      share()\n    ) as Observable;\n\n    this.iconsLoadingByUrl.set(name, o);\n    return o;\n  }\n\n  /** Get loaded SVG from registry by name. (also works by url because of blended map) */\n  getSvgByName(name: string): Observable | undefined {\n    if (this.iconsByUrl.has(name)) {\n      return observableOf(this.iconsByUrl.get(name));\n    } else if (this.iconsLoadingByUrl.has(name)) {\n      return this.iconsLoadingByUrl.get(name);\n    }\n    return observableThrowError(`No svg with name '${name}' has been loaded`);\n  }\n\n  /** Remove a SVG from the registry by URL (or name). */\n  unloadSvg(url: string) {\n    if (this.iconsByUrl.has(url)) {\n      this.iconsByUrl.delete(url);\n    }\n  }\n}\n\nexport function SVG_ICON_REGISTRY_PROVIDER_FACTORY(\n  parentRegistry: SvgIconRegistryService,\n  loader: SvgLoader,\n  platformId: any,\n  serverUrl?: string,\n  document?: any\n) {\n  return (\n    parentRegistry ||\n    new SvgIconRegistryService(loader, platformId, serverUrl, document)\n  );\n}\n\nexport const SVG_ICON_REGISTRY_PROVIDER = {\n  provide: SvgIconRegistryService,\n  deps: [\n    [new Optional(), new SkipSelf(), SvgIconRegistryService],\n    SvgLoader,\n    [PLATFORM_ID as InjectionToken],\n    [new Optional(), SERVER_URL as InjectionToken],\n    [new Optional(), DOCUMENT as InjectionToken],\n  ],\n  useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvgLoader.html":{"url":"classes/SvgLoader.html","title":"class - SvgLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvgLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-loader.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getSvg\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSvg(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-loader.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport abstract class SvgLoader {\n  abstract getSvg(url: string): Observable;\n}\n\n@Injectable()\nexport class SvgHttpLoader extends SvgLoader {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getSvg(url: string): Observable {\n    return this.http.get(url, { responseType: 'text' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/angular/bem/bem.config.ts\n            \n            class\n            BemConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/angular/bem/bem.service.ts\n            \n            injectable\n            BemService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/angular/bem/block.directive.ts\n            \n            directive\n            BlockDirective\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/angular/bem/elem.directive.ts\n            \n            directive\n            ElemDirective\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/angular/bem/mod.directive.ts\n            \n            directive\n            ModDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/angular/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/angular/scene/app.scene.ts\n            \n            component\n            AppScene\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/angular/scene/app.scene.ts\n            \n            interface\n            SidebarItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/angular/sidebar/close-sidebar.directive.ts\n            \n            directive\n            CloseSidebarDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/angular/sidebar/sidebar-container.component.ts\n            \n            component\n            SidebarContainerComponent\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                src/lib/angular/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                17 %\n                (11/64)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon-registry.service.ts\n            \n            injectable\n            SvgIconRegistryService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon-registry.service.ts\n            \n            function\n            SVG_ICON_REGISTRY_PROVIDER_FACTORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon-registry.service.ts\n            \n            variable\n            SERVER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon-registry.service.ts\n            \n            variable\n            SVG_ICON_REGISTRY_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon.component.ts\n            \n            component\n            SvgIconComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon.component.ts\n            \n            class\n            SvgIconHelper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon.module.ts\n            \n            interface\n            SvgIconConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-loader.ts\n            \n            class\n            SvgLoader\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-loader.ts\n            \n            injectable\n            SvgHttpLoader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/shared/platform/browser/is-ios.ts\n            \n            variable\n            isIOS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/shared/platform/browser/is-ltr.ts\n            \n            variable\n            isLTR\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SVG_ICON_REGISTRY_PROVIDER_FACTORY   (src/.../svg-icon-registry.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/angular/svg-icon/svg-icon-registry.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SVG_ICON_REGISTRY_PROVIDER_FACTORY\n                        \n                    \n                \n            \n            \n                \nSVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry: SvgIconRegistryService, loader: SvgLoader, platformId: any, serverUrl?: string, document?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentRegistry\n                                    \n                                                SvgIconRegistryService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loader\n                                    \n                                                SvgLoader\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platformId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    serverUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nweb-components\nThis library was generated with Nx.\nRunning unit tests\nRun nx test web-components to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SceneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SvgIconModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BemModule\n\n\n\ncluster_BemModule_declarations\n\n\n\ncluster_BemModule_exports\n\n\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_imports\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_SceneModule\n\n\n\ncluster_SceneModule_declarations\n\n\n\ncluster_SceneModule_imports\n\n\n\ncluster_SceneModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_SvgIconModule\n\n\n\ncluster_SvgIconModule_declarations\n\n\n\ncluster_SvgIconModule_exports\n\n\n\n\nBlockDirective\n\nBlockDirective\n\n\n\nBemModule\n\nBemModule\n\nBemModule -->\n\nBlockDirective->BemModule\n\n\n\n\n\nElemDirective\n\nElemDirective\n\nBemModule -->\n\nElemDirective->BemModule\n\n\n\n\n\nModDirective\n\nModDirective\n\nBemModule -->\n\nModDirective->BemModule\n\n\n\n\n\nBlockDirective \n\nBlockDirective \n\nBlockDirective  -->\n\nBemModule->BlockDirective \n\n\n\n\n\nElemDirective \n\nElemDirective \n\nElemDirective  -->\n\nBemModule->ElemDirective \n\n\n\n\n\nModDirective \n\nModDirective \n\nModDirective  -->\n\nBemModule->ModDirective \n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nBemModule->NavbarModule\n\n\n\n\n\nSceneModule\n\nSceneModule\n\nSceneModule -->\n\nBemModule->SceneModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\nSceneModule -->\n\nNavbarModule->SceneModule\n\n\n\n\n\nSvgIconModule\n\nSvgIconModule\n\nNavbarModule -->\n\nSvgIconModule->NavbarModule\n\n\n\nSceneModule -->\n\nSvgIconModule->SceneModule\n\n\n\n\n\nSvgIconComponent \n\nSvgIconComponent \n\nSvgIconComponent  -->\n\nSvgIconModule->SvgIconComponent \n\n\n\n\n\nAppScene\n\nAppScene\n\nSceneModule -->\n\nAppScene->SceneModule\n\n\n\n\n\nAppScene \n\nAppScene \n\nAppScene  -->\n\nSceneModule->AppScene \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nSceneModule -->\n\nSidebarModule->SceneModule\n\n\n\n\n\nCloseSidebarDirective \n\nCloseSidebarDirective \n\nCloseSidebarDirective  -->\n\nSidebarModule->CloseSidebarDirective \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\nSidebarContainerComponent \n\nSidebarContainerComponent \n\nSidebarContainerComponent  -->\n\nSidebarModule->SidebarContainerComponent \n\n\n\n\n\nCloseSidebarDirective\n\nCloseSidebarDirective\n\nSidebarModule -->\n\nCloseSidebarDirective->SidebarModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nSidebarContainerComponent\n\nSidebarContainerComponent\n\nSidebarModule -->\n\nSidebarContainerComponent->SidebarModule\n\n\n\n\n\nSvgIconComponent\n\nSvgIconComponent\n\nSvgIconModule -->\n\nSvgIconComponent->SvgIconModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isIOS   (src/.../is-ios.ts)\n                        \n                        \n                            isLTR   (src/.../is-ltr.ts)\n                        \n                        \n                            SERVER_URL   (src/.../svg-icon-registry.service.ts)\n                        \n                        \n                            SVG_ICON_REGISTRY_PROVIDER   (src/.../svg-icon-registry.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/shared/platform/browser/is-ios.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isIOS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): boolean => {\n  if (typeof window !== 'undefined' && typeof navigator !== 'undefined') {\n    return (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream\n    );\n  }\n\n  return false;\n}\n                    \n                \n\n            \n                \n                    Returns whether or not the current device is an iOS device.\n\n                \n            \n\n        \n    \n\n    src/lib/shared/platform/browser/is-ltr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLTR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): boolean => {\n  let dir = 'ltr';\n\n  if (typeof window !== 'undefined') {\n    if (window.getComputedStyle) {\n      dir = window\n        .getComputedStyle(document.body, null)\n        .getPropertyValue('direction');\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      dir = (document.body as any).currentStyle.direction;\n    }\n  }\n\n  return dir === 'ltr';\n}\n                    \n                \n\n            \n                \n                    Returns whether the page is in LTR mode. Defaults to true if it can't be computed.\n\n                \n            \n\n        \n    \n\n    src/lib/angular/svg-icon/svg-icon-registry.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SERVER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SERVER_URL')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_ICON_REGISTRY_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: SvgIconRegistryService,\n  deps: [\n    [new Optional(), new SkipSelf(), SvgIconRegistryService],\n    SvgLoader,\n    [PLATFORM_ID as InjectionToken],\n    [new Optional(), SERVER_URL as InjectionToken],\n    [new Optional(), DOCUMENT as InjectionToken],\n  ],\n  useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
