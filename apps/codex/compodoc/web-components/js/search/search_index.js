var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppScene.html",[0,0.909,1,1.105]],["body/components/AppScene.html",[0,1.245,1,1.664,2,1.729,3,0.214,4,0.214,5,1.48,6,1.48,7,0.177,8,1.684,9,1.559,10,2.558,11,0.965,12,1.867,13,2.58,14,2.86,15,1.729,16,3.38,17,0.039,18,3.38,19,0.381,20,1.053,21,3.38,22,3.38,23,3.38,24,2.91,25,1.053,26,2.814,27,1.77,28,3.719,29,1.161,30,2.37,31,4.133,32,4.268,33,1.163,34,2.37,35,0.653,36,1.167,37,0.557,38,0.428,39,2.37,40,0.955,41,1.161,42,2.37,43,2.277,44,1.664,45,1.664,46,2.86,47,2.37,48,2.535,49,2.37,50,2.558,51,3.719,52,4.597,53,1.552,54,2.86,55,4.597,56,3.956,57,2.86,58,2.86,59,3.719,60,2.86,61,2.86,62,3.719,63,2.86,64,3.719,65,2.86,66,2.37,67,1.013,68,2.86,69,2.462,70,2.37,71,0.533,72,0.252,73,2.86,74,1.684,75,2.86,76,1.956,77,1.956,78,1.956,79,1.956,80,1.956,81,1.067,82,1.956,83,1.684,84,0.313,85,1.067,86,1.067,87,0.076,88,2.86,89,1.956,90,1.956,91,1.956,92,1.956,93,1.956,94,1.956,95,1.956,96,1.956,97,1.48,98,2.164,99,1.411,100,0.591,101,2.814,102,1.48,103,1.48,104,0.965,105,1.48,106,0.965,107,1.48,108,0.965,109,1.318,110,1.48,111,0.794,112,0.721,113,0.875,114,0.794,115,1.48,116,0.875,117,1.48,118,0.875,119,1.48,120,0.875,121,1.067,122,1.48,123,0.021,124,0.021]],["title/classes/BemConfig.html",[87,0.096,125,2.125]],["body/classes/BemConfig.html",[3,0.39,4,0.39,7,0.323,17,0.037,19,0.693,20,1.571,33,1.244,37,0.684,38,1.075,67,1.162,84,0.39,86,2.326,87,0.138,123,0.032,124,0.032,125,3.672,126,2.696,127,3.563,128,4.567,129,4.567,130,4.567,131,4.317,132,4.317,133,4.266,134,4.317]],["title/modules/BemModule.html",[135,1.663,136,1.493]],["body/modules/BemModule.html",[3,0.349,4,0.349,7,0.289,17,0.038,71,0.588,72,0.412,84,0.349,87,0.124,114,2.045,118,2.253,120,2.253,123,0.03,124,0.03,136,3.057,137,1.575,138,2.411,139,3.192,140,3.192,141,3.192,142,2.411,143,1.93,144,1.93,145,3.867,146,2.411,147,2.411,148,2.411,149,3.192,150,3.867,151,3.867]],["title/injectables/BemService.html",[152,1.218,153,1.663]],["body/injectables/BemService.html",[3,0.2,4,0.2,7,0.166,17,0.039,19,0.356,20,1.003,25,1.003,27,1.454,33,1.138,35,1.202,36,0.881,37,0.604,38,0.788,40,1.202,41,0.743,44,1.611,45,1.454,48,1.484,67,1.371,71,0.236,72,0.236,84,0.2,86,2.099,87,0.071,99,1.604,123,0.02,124,0.02,128,3.251,129,3.251,130,3.251,152,1.343,153,1.834,154,1.385,155,1.83,156,3.938,157,3.298,158,3.298,159,3.938,160,2.217,161,5.488,162,4.887,163,5.557,164,2.217,165,3.849,166,3.251,167,3.298,168,2.217,169,4.887,170,3.298,171,2.217,172,3.9,173,2.217,174,3.938,175,2.425,176,2.19,177,2.425,178,2.217,179,2.217,180,3.938,181,2.217,182,2.343,183,3.298,184,3.298,185,3.298,186,3.298,187,2.217,188,2.217,189,2.217,190,2.217,191,4.663,192,4.362,193,2.165,194,3.298,195,2.798,196,3.938,197,3.099,198,1.575,199,2.217,200,2.217,201,3.849,202,4.663,203,2.217,204,2.217,205,2.217,206,1.233,207,2.217,208,2.217,209,2.217,210,0.998,211,2.217,212,2.217,213,1.233,214,1.83,215,2.217,216,2.722,217,3.298,218,3.298,219,2.343,220,3.298,221,3.298,222,1.646,223,1.646,224,1.646,225,1.646,226,3.298,227,3.298,228,3.298,229,2.217,230,2.217]],["title/directives/BlockDirective.html",[100,0.746,114,1.002]],["body/directives/BlockDirective.html",[3,0.273,4,0.273,7,0.226,9,1.853,11,1.233,12,1.38,17,0.039,19,0.486,20,1.252,25,1.252,27,2.048,29,1.38,33,1.269,35,0.834,36,1.169,37,0.686,38,0.547,40,0.834,41,1.014,67,1.313,71,0.439,72,0.322,84,0.273,87,0.097,99,2.299,100,1.026,113,1.118,114,1.38,121,2.106,123,0.025,124,0.025,153,3.084,172,3.851,175,3.014,176,3.182,177,3.014,195,2.15,198,2.15,210,1.362,231,2.498,232,2.602,233,4.117,234,3.863,235,3.863,236,4.776,237,3.137,238,2.289,239,2.15,240,4.117,241,3.026,242,3.026,243,3.026,244,3.026,245,3.026,246,3.026,247,2.498,248,2.054,249,2.498,250,3.026,251,2.498,252,1.89,253,2.498,254,2.498,255,3.026,256,3.399,257,3.399,258,2.498,259,2.498,260,2.498,261,3.863,262,2.498]],["title/directives/CloseSidebarDirective.html",[100,0.746,116,1.105]],["body/directives/CloseSidebarDirective.html",[3,0.367,4,0.367,7,0.304,11,2.032,12,1.671,17,0.039,29,1.364,33,0.915,35,1.122,36,0.822,37,0.503,38,0.735,41,1.364,71,0.531,72,0.434,84,0.367,87,0.13,100,1.243,106,2.29,113,1.503,116,1.842,123,0.031,124,0.031,222,2.031,223,2.031,224,2.031,225,2.031,263,4.117,264,3.36,265,4.988,266,4.07,267,4.07,268,4.988,269,2.892,270,2.892,271,2.542,272,4.988,273,4.07,274,4.07,275,4.988,276,2.892,277,3.36,278,4.07,279,4.07]],["title/directives/ElemDirective.html",[100,0.746,118,1.105]],["body/directives/ElemDirective.html",[3,0.261,4,0.261,7,0.216,9,1.795,11,1.177,12,1.337,17,0.039,19,0.464,20,1.213,25,1.213,27,2.023,29,1.337,33,1.274,35,0.796,36,1.17,37,0.69,38,0.522,40,0.796,41,0.968,67,1.323,71,0.487,72,0.308,84,0.261,87,0.092,99,2.273,100,0.994,113,1.067,114,1.651,118,1.473,121,2.056,123,0.025,124,0.025,149,2.385,153,3.046,165,4.266,172,3.797,175,2.972,176,3.15,177,2.972,195,2.052,198,2.052,210,1.3,232,2.54,234,3.77,235,3.77,236,4.856,237,3.077,238,2.218,239,2.052,247,2.385,248,1.99,249,2.385,251,2.385,252,1.804,253,2.385,254,2.385,256,3.292,257,3.292,258,2.385,259,2.385,260,2.385,261,3.77,262,2.385,280,2.385,281,3.988,282,4.568,283,3.988,284,2.889,285,2.889,286,2.889,287,2.889,288,2.889,289,2.889,290,2.889,291,2.889,292,2.889,293,2.889,294,2.889]],["title/directives/ModDirective.html",[100,0.746,120,1.105]],["body/directives/ModDirective.html",[3,0.415,4,0.415,7,0.343,11,1.872,12,1.797,17,0.037,71,0.49,72,0.49,84,0.415,87,0.147,100,1.337,113,1.697,120,1.981,121,2.414,123,0.033,124,0.033,295,3.793]],["title/components/NavbarComponent.html",[0,0.909,104,1.218]],["body/components/NavbarComponent.html",[0,1.492,1,1.228,2,2.189,3,0.3,4,0.3,5,2.077,6,2.077,7,0.248,11,1.355,12,1.989,13,2.91,15,2.189,17,0.038,19,0.534,24,3.957,25,1.334,33,1.173,36,0.992,37,0.607,40,0.916,41,1.114,44,1.228,45,1.228,53,0.916,67,0.748,69,3.116,71,0.354,72,0.354,84,0.3,87,0.106,97,2.077,98,2.74,99,1.786,100,0.829,101,3.259,102,2.077,103,2.077,104,2.125,105,2.077,106,1.355,107,2.077,108,1.355,109,1.849,110,2.077,111,1.114,112,1.011,113,1.228,114,1.114,115,2.077,116,1.228,117,2.077,118,1.228,119,2.077,120,1.228,121,1.497,122,2.077,123,0.027,124,0.027,238,2.439,248,2.449,296,2.745,297,4.386,298,4.907,299,4.051,300,4.907,301,4.907,302,5.218,303,4.907,304,3.62,305,4.907,306,3.326,307,3.326,308,4.051,309,3.326,310,3.326,311,3.62,312,1.497,313,3.326]],["title/modules/NavbarModule.html",[135,1.663,314,1.663]],["body/modules/NavbarModule.html",[3,0.352,4,0.352,7,0.291,17,0.038,71,0.607,72,0.416,84,0.352,87,0.125,104,2.488,112,1.186,123,0.03,124,0.03,136,2.899,137,1.589,138,2.424,142,2.424,143,1.946,144,1.946,146,2.424,147,2.424,148,2.424,314,3.38,315,3.22,316,3.22,317,3.22,318,3.22,319,2.615,320,3.901,321,2.702,322,4.01,323,3.22,324,3.22,325,3.22,326,1.075,327,3.22,328,3.901]],["title/modules/SceneModule.html",[135,1.663,329,1.868]],["body/modules/SceneModule.html",[1,2.23,3,0.324,4,0.324,7,0.268,17,0.039,71,0.63,72,0.382,74,2.548,84,0.324,87,0.115,112,1.091,123,0.028,124,0.028,136,2.837,137,1.461,138,2.299,142,2.299,143,1.79,144,1.79,146,2.299,147,2.299,148,2.299,314,3.161,319,2.559,321,2.562,322,3.803,323,2.961,324,2.961,325,2.961,326,0.988,327,2.961,329,3.819,330,2.961,331,2.961,332,2.961,333,2.961,334,3.161,335,3.587,336,2.878,337,1.79,338,4.607,339,3.587,340,3.587,341,3.587]],["title/components/SidebarContainerComponent.html",[0,0.909,108,1.218]],["body/components/SidebarContainerComponent.html",[0,0.917,1,0.54,2,1.189,3,0.132,4,0.132,5,0.913,6,0.913,7,0.109,9,1.072,11,0.595,12,1.648,13,2.162,15,1.189,17,0.039,19,0.484,20,0.724,25,0.724,27,2.017,29,0.798,33,1.206,35,0.831,36,0.83,37,0.62,38,0.545,40,1.194,41,1.759,44,1.285,45,1.415,48,1.357,53,0.403,67,0.782,71,0.321,72,0.156,84,0.132,86,1.724,87,0.047,97,0.913,98,1.488,99,0.971,100,0.364,101,2.173,102,0.913,103,0.913,104,0.595,105,0.913,106,1.764,107,0.913,108,1.417,109,3.119,110,0.913,111,0.49,112,0.444,113,0.54,114,0.49,115,0.913,116,0.54,117,0.913,118,0.54,119,0.913,120,0.54,121,0.658,122,0.913,123,0.015,124,0.015,133,1.967,182,2.143,193,1.56,210,1.95,213,2.13,214,1.207,216,2.871,222,0.729,223,0.729,224,0.729,225,0.729,232,1.677,237,1.488,238,1.325,248,2.05,269,1.039,277,2.871,304,1.967,308,3.162,311,2.49,312,1.072,337,0.729,342,4.47,343,1.207,344,3.016,345,2.143,346,2.383,347,2.383,348,3.478,349,3.016,350,3.016,351,3.478,352,3.478,353,2.383,354,3.478,355,3.478,356,2.471,357,3.016,358,3.016,359,3.016,360,3.016,361,3.016,362,3.016,363,3.016,364,1.462,365,2.471,366,2.143,367,2.383,368,2.383,369,1.462,370,1.462,371,1.462,372,1.462,373,1.462,374,1.462,375,1.462,376,1.462,377,2.383,378,2.383,379,2.383,380,2.383,381,3.016,382,1.462,383,2.383,384,3.016,385,3.478,386,2.383,387,2.383,388,1.462,389,2.383,390,2.383,391,2.383,392,2.383,393,1.462,394,2.383,395,4.108,396,1.462,397,2.383,398,2.471,399,1.462,400,1.039,401,1.462,402,1.462,403,1.462,404,1.462,405,1.207,406,1.039,407,1.462,408,1.462,409,1.462,410,0.913,411,1.462,412,1.462,413,1.207,414,3.478,415,1.462,416,3.016,417,1.462,418,1.462,419,1.462,420,1.462,421,2.383,422,2.383,423,2.383,424,1.462,425,1.462,426,1.462,427,1.462,428,1.462,429,1.462,430,1.207,431,1.462,432,1.462,433,2.383,434,1.462,435,1.462,436,2.383,437,1.462,438,1.967,439,1.462,440,1.462,441,2.383,442,1.462,443,3.016,444,1.462,445,1.462,446,3.016,447,2.566,448,3.016,449,3.016,450,3.016,451,3.478,452,3.016,453,3.016,454,3.016,455,1.462,456,1.207,457,1.462,458,1.462,459,1.462,460,2.383,461,3.83,462,1.462,463,3.478,464,1.462,465,1.462,466,1.462,467,1.462,468,2.383,469,2.383,470,1.462,471,1.462,472,1.462,473,1.462,474,2.383,475,4.332,476,1.967,477,1.462,478,1.462,479,1.462,480,1.462,481,1.462,482,3.478,483,1.462,484,1.462,485,1.462,486,1.462,487,1.462,488,1.462,489,1.462,490,1.462,491,1.462,492,1.462,493,1.039,494,1.039,495,1.462,496,1.462,497,1.462,498,1.462,499,1.693,500,1.462,501,3.016,502,2.383,503,1.462,504,1.462,505,1.462,506,1.462,507,1.462,508,4.108,509,1.462,510,1.462,511,1.462,512,1.462,513,1.462,514,1.462,515,1.462,516,1.462,517,1.462,518,1.462,519,1.462,520,1.462,521,1.462,522,1.462,523,1.462,524,2.383,525,1.462,526,1.462,527,1.462,528,1.462,529,1.462]],["title/interfaces/SidebarItem.html",[50,1.868,85,1.346]],["body/interfaces/SidebarItem.html",[0,1.275,1,1.149,3,0.281,4,0.281,7,0.232,8,2.21,9,1.4,10,2.62,12,1.042,13,1.552,14,2.568,15,1.552,16,2.568,17,0.039,18,2.568,19,0.5,20,1.275,21,2.568,22,2.568,23,2.568,24,2.21,26,1.943,27,1.753,28,2.568,29,1.042,31,3.918,32,3.918,36,1.163,37,0.628,43,2.333,46,2.568,48,2.46,50,2.965,51,3.463,52,4.75,53,1.586,54,2.568,55,4.75,56,3.918,57,2.568,58,2.568,59,3.463,60,2.568,61,2.568,62,3.463,63,2.568,64,3.463,65,2.568,67,1.294,68,2.568,69,2.21,71,0.582,72,0.331,73,3.463,74,2.21,75,3.463,76,2.568,77,2.568,78,2.568,79,2.568,80,2.568,81,1.4,82,2.568,83,2.21,84,0.379,85,1.4,86,2.136,87,0.099,88,3.463,89,2.568,90,2.568,91,2.568,92,2.568,93,2.568,94,2.568,95,2.568,96,2.568,123,0.026,124,0.026,530,2.21]],["title/modules/SidebarModule.html",[135,1.663,334,1.663]],["body/modules/SidebarModule.html",[3,0.341,4,0.341,7,0.282,17,0.038,71,0.601,72,0.402,84,0.341,87,0.121,106,2.477,108,2.477,109,2.1,116,2.246,123,0.029,124,0.029,137,1.538,138,2.376,142,2.376,143,1.885,144,1.885,146,2.376,147,2.376,148,2.376,269,2.683,321,2.1,334,3.396,336,2.974,337,1.885,531,3.118,532,3.118,533,3.118,534,3.777,535,3.777,536,3.777,537,3.777]],["title/injectables/SvgHttpLoader.html",[152,1.218,538,1.493]],["body/injectables/SvgHttpLoader.html",[3,0.349,4,0.349,7,0.289,17,0.038,19,0.621,25,1.469,29,1.296,33,1.086,35,1.331,36,0.976,37,0.597,38,0.873,40,1.066,43,3.07,67,1.241,71,0.561,72,0.412,81,1.741,84,0.436,87,0.154,123,0.03,124,0.03,152,1.968,154,2.415,193,1.575,276,2.748,326,1.331,538,2.411,539,1.619,540,2.748,541,3.989,542,2.039,543,3.989,544,3.867,545,4.557,546,3.867,547,3.989,548,4.351,549,3.867,550,3.867,551,2.748,552,3.192,553,3.989,554,3.192,555,3.192,556,3.192,557,3.192]],["title/components/SvgIconComponent.html",[0,0.909,111,1.002]],["body/components/SvgIconComponent.html",[0,0.754,1,0.411,2,0.946,3,0.1,4,0.1,5,0.694,6,0.694,7,0.083,9,0.853,10,1.548,11,0.453,12,1.503,13,1.907,15,0.946,17,0.039,19,0.178,20,0.576,25,0.576,26,1.83,27,2.144,29,0.635,33,1.242,35,1.236,36,1.05,37,0.659,38,0.81,40,1.384,41,1.704,44,1.082,45,1.699,48,1.48,53,1.199,67,1.269,71,0.264,72,0.118,81,0.5,84,0.1,86,0.853,87,0.094,97,0.694,98,1.184,99,1.193,100,0.277,101,1.83,102,0.694,103,0.694,104,0.453,105,0.694,106,0.453,107,0.694,108,0.453,109,0.618,110,0.694,111,0.982,112,1.458,113,0.411,114,0.373,115,0.694,116,0.411,117,0.694,118,0.411,119,0.694,120,0.411,121,0.5,122,0.694,123,0.012,124,0.012,175,1.629,176,1.378,177,1.629,197,0.79,206,3.004,210,2.338,213,1.054,222,0.946,223,0.946,224,0.946,225,0.946,232,1.378,237,1.184,238,1.054,239,0.79,248,2.172,252,0.694,270,0.79,271,1.184,312,1.116,326,1.53,345,1.761,356,2.081,365,2.081,398,2.081,400,1.761,410,0.694,447,1.548,493,1.761,494,1.761,499,0.79,539,1.861,558,0.79,559,2.046,560,2.046,561,2.046,562,1.896,563,1.896,564,2.418,565,1.896,566,2.418,567,1.896,568,2.418,569,2.418,570,2.046,571,1.896,572,2.046,573,1.896,574,2.479,575,2.046,576,2.046,577,2.046,578,2.418,579,2.046,580,2.929,581,2.955,582,1.896,583,2.046,584,2.418,585,2.046,586,1.318,587,2.046,588,1.896,589,1.112,590,1.112,591,1.112,592,1.112,593,1.112,594,1.112,595,1.112,596,1.896,597,1.112,598,1.112,599,2.046,600,1.112,601,1.565,602,3.186,603,1.112,604,1.112,605,1.112,606,1.565,607,1.112,608,3.324,609,1.112,610,1.565,611,2.387,612,1.112,613,1.112,614,1.565,615,1.112,616,1.112,617,1.112,618,1.112,619,1.112,620,1.112,621,2.046,622,2.046,623,2.714,624,2.336,625,1.112,626,2.046,627,1.112,628,1.896,629,1.896,630,1.112,631,1.112,632,1.112,633,2.046,634,1.112,635,1.565,636,1.565,637,1.112,638,1.112,639,2.479,640,1.83,641,1.112,642,1.112,643,2.046,644,2.418,645,1.565,646,1.565,647,0.694,648,0.918,649,0.918,650,0.79,651,0.918,652,0.918,653,2.418,654,0.918,655,0.918,656,0.918,657,0.918,658,0.918,659,1.565,660,2.714,661,0.918,662,2.046,663,2.046,664,2.046,665,2.046,666,0.918,667,0.918,668,2.714,669,0.918,670,1.565,671,0.918,672,2.046,673,2.046,674,2.418,675,0.918,676,2.046,677,0.918,678,0.918,679,0.918,680,2.418,681,2.046,682,2.046,683,1.565,684,0.918,685,0.918,686,0.918,687,1.565,688,0.918,689,0.918,690,0.918,691,0.918,692,2.418,693,0.918,694,2.046,695,1.565,696,1.565,697,0.918,698,0.918,699,1.565,700,1.565,701,0.918,702,0.918,703,0.918,704,0.918,705,0.918,706,0.918,707,0.918,708,0.918,709,1.565,710,1.565,711,2.418,712,0.918,713,0.918,714,0.918,715,2.046,716,0.918,717,2.046,718,0.918,719,1.565,720,1.565,721,2.418,722,0.918,723,0.918,724,0.918,725,2.714,726,0.918,727,0.918,728,0.918,729,0.918,730,0.918,731,0.918,732,0.918,733,0.918,734,0.918,735,1.761,736,2.046,737,0.918,738,1.565,739,0.918,740,1.347,741,0.918,742,0.918,743,0.918,744,0.918,745,2.418,746,0.918,747,0.918,748,1.565,749,2.418,750,0.918,751,0.918,752,0.918,753,0.918,754,1.565,755,1.565,756,1.565]],["title/interfaces/SvgIconConfig.html",[85,1.346,757,1.868]],["body/interfaces/SvgIconConfig.html",[3,0.346,4,0.346,7,0.286,17,0.039,19,0.616,20,1.461,37,0.474,38,0.868,53,1.056,71,0.604,72,0.408,84,0.434,85,1.726,87,0.123,111,1.759,112,1.596,123,0.03,124,0.03,146,1.913,147,1.913,148,2.62,193,1.562,319,2.163,321,2.132,326,1.056,336,3.002,337,1.913,530,2.724,538,2.398,539,1.285,542,1.775,647,2.395,757,3.279,758,2.724,759,3.541,760,4.543,761,3.967,762,2.672,763,3.165,764,3.165,765,3.165,766,3.165,767,3.165,768,3.165,769,2.395,770,3.165]],["title/classes/SvgIconHelper.html",[87,0.096,640,1.868]],["body/classes/SvgIconHelper.html",[0,0.795,3,0.148,4,0.148,7,0.123,9,0.739,10,1.634,12,0.55,13,0.819,15,0.819,17,0.039,19,0.264,20,0.795,26,1.025,27,2.011,29,0.55,33,0.836,36,0.752,37,0.403,38,0.473,41,0.55,44,0.606,45,1.677,48,1.674,53,1.193,67,1.198,71,0.347,72,0.175,81,0.739,84,0.148,87,0.084,99,0.668,111,0.55,112,1.574,123,0.016,124,0.016,126,1.025,175,1.454,176,0.912,177,1.454,197,1.166,206,2.996,210,2.528,213,1.454,222,1.305,223,1.305,224,1.305,225,1.305,232,1.454,248,2.486,252,1.025,270,1.166,271,1.634,312,1.177,326,1.12,345,1.858,356,1.166,365,1.858,398,1.858,400,1.858,410,1.025,447,2.037,493,2.317,494,2.317,499,1.166,539,1.362,558,1.166,559,2.159,560,1.354,561,1.354,564,1.354,566,1.354,568,1.354,569,1.354,570,1.354,572,1.354,575,1.354,576,1.354,577,1.354,578,2.159,579,1.354,581,3.07,583,1.354,584,2.159,585,1.354,586,1.177,587,1.354,599,1.354,601,1.354,602,3.076,606,1.354,608,3.749,610,1.354,611,2.037,614,1.354,621,1.354,622,1.354,623,2.692,624,2.317,626,2.159,633,1.354,635,1.354,636,1.354,640,2.323,643,2.159,644,3.07,645,2.692,646,2.692,647,1.025,648,2.692,649,2.692,650,2.317,651,1.354,652,1.354,653,3.07,654,1.354,655,1.354,656,1.354,657,1.354,658,1.354,659,2.159,660,3.354,661,1.354,662,2.692,663,2.692,664,2.692,665,2.692,666,1.354,667,1.354,668,3.354,669,1.354,670,2.159,671,1.354,672,2.692,673,2.692,674,3.07,675,1.354,676,2.692,677,1.354,678,1.354,679,1.354,680,3.07,681,2.692,682,2.692,683,2.159,684,1.354,685,1.354,686,1.354,687,2.159,688,1.354,689,1.354,690,1.354,691,1.354,692,3.07,693,1.354,694,2.692,695,2.159,696,2.159,697,1.354,698,1.354,699,2.159,700,2.159,701,1.354,702,1.354,703,1.354,704,1.354,705,1.354,706,1.354,707,1.354,708,1.354,709,2.159,710,2.159,711,3.07,712,1.354,713,1.354,714,1.354,715,2.692,716,1.354,717,2.692,718,1.354,719,2.159,720,2.159,721,3.07,722,1.354,723,1.354,724,1.354,725,3.354,726,1.354,727,1.354,728,1.354,729,1.354,730,1.354,731,1.354,732,1.354,733,1.354,734,1.354,735,2.317,736,2.692,737,1.354,738,2.159,739,1.354,740,1.858,741,1.354,742,1.354,743,1.354,744,1.354,745,3.07,746,1.354,747,1.354,748,2.159,749,3.07,750,1.354,751,1.354,752,1.354,753,1.354,754,2.159,755,2.159,756,2.159,771,1.641,772,1.641,773,1.641,774,1.641]],["title/modules/SvgIconModule.html",[135,1.663,319,1.346]],["body/modules/SvgIconModule.html",[3,0.32,4,0.32,7,0.265,17,0.039,25,1.08,33,0.798,35,0.978,36,0.717,37,0.439,38,0.642,40,0.978,44,1.311,45,1.311,53,0.978,71,0.59,72,0.378,84,0.413,85,1.598,87,0.113,111,2.021,112,1.54,123,0.028,124,0.028,137,1.446,138,2.284,142,2.284,143,1.772,144,1.772,146,2.284,147,2.284,148,2.528,193,1.446,319,2.631,321,1.975,326,1.261,336,2.859,337,1.772,538,2.284,539,1.534,542,1.691,647,2.218,757,3.342,758,2.523,759,2.859,760,3.779,761,4.181,762,2.545,763,2.931,764,3.779,765,3.779,766,3.779,767,2.931,768,2.931,769,2.218,770,2.931,775,2.931,776,2.931,777,2.931,778,3.551,779,3.551]],["title/injectables/SvgIconRegistryService.html",[152,1.218,586,1.346]],["body/injectables/SvgIconRegistryService.html",[3,0.182,4,0.182,7,0.15,17,0.039,19,0.323,20,0.933,25,0.933,27,2.01,29,1.028,33,1.136,35,1.233,36,1.178,37,0.583,38,0.97,40,1.145,41,1.028,43,2.621,44,1.373,45,1.373,53,1.426,67,1.316,71,0.476,72,0.215,81,0.906,83,1.431,84,0.375,87,0.064,112,1.721,123,0.019,124,0.019,152,1.25,154,1.258,193,2.108,206,1.12,210,2.121,219,1.431,312,2.376,326,1.426,337,1.005,366,3.178,405,1.662,406,2.18,413,1.662,430,2.532,539,1.734,542,1.741,551,3.99,586,2.013,602,2.18,611,3.061,650,2.641,735,2.641,759,2.596,762,1.12,769,1.258,780,1.258,781,3.677,782,3.716,783,3.716,784,3.068,785,3.068,786,3.716,787,3.068,788,2.014,789,3.692,790,3.716,791,3.068,792,3.068,793,4.156,794,2.014,795,3.068,796,5.051,797,3.068,798,3.068,799,2.014,800,3.068,801,3.068,802,4.9,803,2.014,804,2.014,805,3.068,806,3.068,807,2.014,808,2.014,809,2.014,810,3.43,811,2.532,812,2.014,813,2.014,814,2.014,815,2.014,816,3.068,817,3.068,818,2.014,819,2.18,820,1.662,821,2.014,822,2.014,823,2.014,824,2.014,825,2.014,826,3.716,827,3.068,828,3.068,829,3.068,830,3.068,831,3.068,832,2.014,833,2.014,834,3.068,835,2.014,836,2.014,837,2.014,838,2.014,839,2.014,840,2.014,841,2.014,842,2.014,843,2.014,844,3.068,845,2.014,846,3.068,847,3.068,848,3.068,849,3.716,850,2.014,851,2.014,852,2.014,853,2.014,854,2.014,855,2.014,856,2.014,857,2.014,858,2.014,859,2.014,860,2.014,861,1.916,862,2.532,863,2.014,864,1.662,865,1.662]],["title/classes/SvgLoader.html",[87,0.096,542,1.105]],["body/classes/SvgLoader.html",[3,0.36,4,0.36,7,0.298,17,0.038,19,0.64,25,1.498,33,0.897,35,1.099,36,0.806,37,0.493,38,0.721,40,1.099,43,3.104,67,1.255,71,0.569,72,0.425,81,1.795,84,0.445,87,0.157,123,0.03,124,0.03,126,2.491,152,2.006,193,1.625,276,2.834,326,1.357,538,1.99,539,1.651,540,2.834,541,3.292,542,1.974,543,4.066,545,4.066,547,3.292,548,4.411,551,2.834,552,3.292,553,4.607,554,3.292,555,3.292,556,3.292,557,3.292,866,3.988]],["title/coverage.html",[867,3.372]],["body/coverage.html",[0,1.652,1,1.235,7,0.25,8,3.128,17,0.038,37,0.413,50,2.089,53,1.441,85,1.981,87,0.157,100,1.303,104,1.362,106,1.362,108,1.362,111,1.121,114,1.121,116,1.235,118,1.235,120,1.235,123,0.027,124,0.027,125,2.376,127,2.761,152,2.004,153,1.86,155,2.761,219,2.376,231,2.761,263,2.761,264,2.761,280,2.761,295,2.761,296,2.761,299,2.761,312,1.505,326,1.609,342,2.761,343,2.761,447,3.814,476,3.634,538,1.669,539,1.957,540,3.128,542,1.235,558,3.128,586,1.505,640,2.089,757,2.089,758,2.376,762,1.86,780,3.266,819,2.376,861,2.089,867,2.761,868,3.344,869,3.344,870,3.344,871,4.402,872,3.344,873,3.344,874,5.229,875,4.921,876,4.921,877,3.344,878,3.344,879,3.344,880,3.344,881,3.344,882,3.344,883,3.344,884,5.229,885,3.344,886,3.344,887,3.634,888,2.761,889,2.761,890,4.402,891,2.761,892,2.761,893,3.344,894,3.344]],["title/miscellaneous/functions.html",[895,1.56,896,2.97]],["body/miscellaneous/functions.html",[17,0.034,19,0.714,35,1.225,36,0.898,37,0.55,38,0.803,53,1.449,67,1.183,123,0.032,124,0.032,166,4.342,326,1.225,366,3.737,539,1.49,542,1.943,586,2.368,759,3.286,780,3.286,781,3.737,789,4.342,861,3.286,862,3.67,895,2.777,896,3.67,897,3.67,898,4.446]],["title/index.html",[19,0.401,899,2.497,900,2.497]],["body/index.html",[2,2.7,17,0.033,123,0.033,124,0.033,740,3.845,901,5.412,902,4.667,903,4.667,904,5.412,905,4.667,906,5.412,907,4.667,908,4.667,909,4.667]],["title/modules.html",[137,1.664]],["body/modules.html",[17,0.033,112,1.807,123,0.033,124,0.033,136,2.27,137,1.853,314,2.529,319,2.047,329,2.841,334,2.529,910,5.945,911,5.945,912,5.945]],["title/overview.html",[913,3.372]],["body/overview.html",[1,2.09,2,1.635,17,0.038,104,2.305,106,2.305,108,2.305,111,1.896,113,1.21,114,1.896,116,2.09,118,2.09,120,2.09,123,0.027,124,0.027,126,2.047,136,2.991,137,1.335,138,2.167,139,2.705,140,2.705,141,2.705,142,2.167,143,1.635,144,1.635,154,2.047,314,3.265,315,2.705,316,2.705,317,2.705,318,2.705,319,2.547,329,3.744,330,2.705,331,2.705,332,2.705,333,2.705,334,3.314,530,2.328,531,2.705,532,2.705,533,2.705,775,2.705,776,2.705,777,2.705,913,2.705,914,4.343,915,3.277,916,4.343,917,3.277]],["title/miscellaneous/variables.html",[895,1.56,918,2.97]],["body/miscellaneous/variables.html",[17,0.039,19,0.544,37,0.419,38,0.895,40,1.224,44,1.941,45,1.941,48,1.525,53,1.365,86,1.999,123,0.027,124,0.027,182,2.408,193,2.017,201,4.088,206,1.884,213,1.884,222,2.216,223,2.216,224,2.216,225,2.216,271,2.774,312,2.456,326,0.934,406,2.408,410,2.774,438,2.797,456,2.797,539,1.136,542,1.252,586,1.999,611,3.094,624,2.408,762,2.469,769,2.117,780,3.094,781,2.408,810,4.088,811,2.797,819,3.519,820,2.797,861,2.117,864,2.797,865,2.797,887,3.666,888,3.666,889,3.666,891,3.666,892,3.666,895,2.117,897,3.666,918,2.797,919,4.441,920,5.256,921,3.389,922,4.441,923,3.389,924,3.389,925,4.441,926,4.441,927,3.389,928,5.256,929,4.953,930,3.389,931,3.389,932,3.389,933,3.389,934,3.389,935,3.389,936,3.389,937,3.389]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":447,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"coverage.html":{}}}],["0/1",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":433,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["1/1",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":476,"title":{},"body":{"components/SidebarContainerComponent.html":{},"coverage.html":{}}}],["11/64",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":917,"title":{},"body":{"overview.html":{}}}],["22",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":916,"title":{},"body":{"overview.html":{}}}],["4",{"_index":915,"title":{},"body":{"overview.html":{}}}],["4/18",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":914,"title":{},"body":{"overview.html":{}}}],["_",{"_index":230,"title":{},"body":{"injectables/BemService.html":{}}}],["__",{"_index":184,"title":{},"body":{"injectables/BemService.html":{}}}],["_addsidebar(sidebar",{"_index":426,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_document",{"_index":790,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["_getcontentstyle",{"_index":445,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_isbrowser",{"_index":349,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_markforcheck",{"_index":351,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_mods",{"_index":234,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["_modserialized",{"_index":235,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["_onbackdropclicked",{"_index":500,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_onclick",{"_index":275,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["_ontoggle",{"_index":352,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_ref",{"_index":368,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_removesidebar(sidebar",{"_index":431,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_sidebar",{"_index":268,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["_sidebars",{"_index":350,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_subscribe",{"_index":353,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_subscribe(sidebar",{"_index":387,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["_svgstyle",{"_index":560,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["_unsubscribe",{"_index":354,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["abstract",{"_index":553,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["accessors",{"_index":582,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["accommodate",{"_index":440,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["account",{"_index":16,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["active",{"_index":55,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["actual_component",{"_index":122,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["adapted",{"_index":654,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["add",{"_index":795,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["adds",{"_index":420,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["addsvg",{"_index":784,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["addsvg(name",{"_index":792,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["aftercontentinit",{"_index":344,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["allowsidebarbackdropcontrol",{"_index":357,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["angular",{"_index":270,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["angular/common",{"_index":337,"title":{},"body":{"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{}}}],["angular/common/http",{"_index":552,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["angular/core",{"_index":72,"title":{},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["angular/flex",{"_index":323,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["angular/packages/common/src/directives/ng_style.ts",{"_index":657,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["angular/router",{"_index":74,"title":{},"body":{"components/AppScene.html":{},"modules/SceneModule.html":{},"interfaces/SidebarItem.html":{}}}],["animate",{"_index":358,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["any).currentstyle.direction",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any).msstream",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.scene",{"_index":341,"title":{},"body":{"modules/SceneModule.html":{}}}],["applychanges",{"_index":562,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["applychanges(changes",{"_index":598,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["applyclass",{"_index":575,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["appscene",{"_index":1,"title":{"components/AppScene.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aria",{"_index":725,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["arial",{"_index":722,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["arr",{"_index":211,"title":{},"body":{"injectables/BemService.html":{}}}],["arr.foreach((key",{"_index":212,"title":{},"body":{"injectables/BemService.html":{}}}],["array",{"_index":133,"title":{},"body":{"classes/BemConfig.html":{},"components/SidebarContainerComponent.html":{}}}],["array.isarray(current",{"_index":751,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["array.isarray(mods",{"_index":209,"title":{},"body":{"injectables/BemService.html":{}}}],["array.isarray(previous",{"_index":746,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["assertion",{"_index":689,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["assets/icons/mdi/account.svg",{"_index":58,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["assets/icons/mdi/bag",{"_index":60,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["assets/icons/mdi/cog.svg",{"_index":65,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["assets/icons/mdi/play.svg",{"_index":54,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["assets/icons/mdi/store.svg",{"_index":63,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["attempt",{"_index":713,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["attribute",{"_index":247,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["attribute('cfblock",{"_index":250,"title":{},"body":{"directives/BlockDirective.html":{}}}],["attribute('cfelem",{"_index":291,"title":{},"body":{"directives/ElemDirective.html":{}}}],["attributename",{"_index":629,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["attributes",{"_index":729,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["attributes.length",{"_index":733,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["auto",{"_index":712,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["avatar",{"_index":56,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["avatar.state",{"_index":79,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["avatar/selected",{"_index":78,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["avatars/states/selected",{"_index":77,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["backdrop",{"_index":385,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["backdropclass",{"_index":359,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["backdropclick",{"_index":362,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["backdropclicked",{"_index":501,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["based",{"_index":407,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["bem.service",{"_index":249,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["bem/bem.module",{"_index":325,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["bemconfig",{"_index":125,"title":{"classes/BemConfig.html":{}},"body":{"classes/BemConfig.html":{},"coverage.html":{}}}],["bemmodule",{"_index":136,"title":{"modules/BemModule.html":{}},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules.html":{},"overview.html":{}}}],["bemservice",{"_index":153,"title":{"injectables/BemService.html":{}},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"coverage.html":{}}}],["blended",{"_index":801,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["block",{"_index":282,"title":{},"body":{"directives/ElemDirective.html":{}}}],["block.directive",{"_index":149,"title":{},"body":{"modules/BemModule.html":{},"directives/ElemDirective.html":{}}}],["block.name",{"_index":293,"title":{},"body":{"directives/ElemDirective.html":{}}}],["blockdirective",{"_index":114,"title":{"directives/BlockDirective.html":{}},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blockname",{"_index":165,"title":{},"body":{"injectables/BemService.html":{},"directives/ElemDirective.html":{}}}],["blog",{"_index":300,"title":{},"body":{"components/NavbarComponent.html":{}}}],["boolean",{"_index":86,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"miscellaneous/variables.html":{}}}],["bottom",{"_index":450,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["bottom}px",{"_index":489,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["break",{"_index":482,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["browse",{"_index":912,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":910,"title":{},"body":{"modules.html":{}}}],["can't",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":216,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{}}}],["cases",{"_index":843,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["catcherror",{"_index":815,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["catcherror((err",{"_index":853,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["cdr",{"_index":587,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["central",{"_index":75,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["cf",{"_index":13,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["cfblock",{"_index":233,"title":{},"body":{"directives/BlockDirective.html":{}}}],["cfblock]'},{'name",{"_index":115,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["cfclosesidebar",{"_index":265,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["cfclosesidebar]'},{'name",{"_index":117,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["cfelem",{"_index":281,"title":{},"body":{"directives/ElemDirective.html":{}}}],["cfelem]'},{'name",{"_index":119,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["cfmod",{"_index":121,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["change",{"_index":378,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["changedetection",{"_index":346,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["changedetectionstrategy",{"_index":404,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":347,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["changedetectorref",{"_index":365,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord",{"_index":616,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["changerecord.applyclass",{"_index":671,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.klass",{"_index":679,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.klass.currentvalue",{"_index":683,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.klass.previousvalue",{"_index":682,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.name",{"_index":667,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.src",{"_index":666,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.stretch",{"_index":669,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.svgarialabel",{"_index":685,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.svgclass",{"_index":675,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.svgclass.currentvalue",{"_index":678,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.svgclass.previousvalue",{"_index":677,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changerecord.viewbox",{"_index":684,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes",{"_index":400,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes.foreachaddeditem",{"_index":737,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes.foreachchangeditem",{"_index":739,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes.foreachremoveditem",{"_index":734,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["changes['showbackdrop",{"_index":417,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["check",{"_index":383,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["class",{"_index":87,"title":{"classes/BemConfig.html":{},"classes/SvgIconHelper.html":{},"classes/SvgLoader.html":{}},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["classes",{"_index":126,"title":{},"body":{"classes/BemConfig.html":{},"classes/SvgIconHelper.html":{},"classes/SvgLoader.html":{},"overview.html":{}}}],["click",{"_index":274,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["clicked",{"_index":496,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["close",{"_index":535,"title":{},"body":{"modules/SidebarModule.html":{}}}],["closeonclickbackdrop",{"_index":497,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["closes",{"_index":495,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["closesidebardirective",{"_index":116,"title":{"directives/CloseSidebarDirective.html":{}},"body":{"components/AppScene.html":{},"directives/CloseSidebarDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cls",{"_index":202,"title":{},"body":{"injectables/BemService.html":{}}}],["cluster_bemmodule",{"_index":139,"title":{},"body":{"modules/BemModule.html":{},"overview.html":{}}}],["cluster_bemmodule_declarations",{"_index":140,"title":{},"body":{"modules/BemModule.html":{},"overview.html":{}}}],["cluster_bemmodule_exports",{"_index":141,"title":{},"body":{"modules/BemModule.html":{},"overview.html":{}}}],["cluster_navbarmodule",{"_index":315,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_declarations",{"_index":318,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_exports",{"_index":317,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_imports",{"_index":316,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_scenemodule",{"_index":330,"title":{},"body":{"modules/SceneModule.html":{},"overview.html":{}}}],["cluster_scenemodule_declarations",{"_index":333,"title":{},"body":{"modules/SceneModule.html":{},"overview.html":{}}}],["cluster_scenemodule_exports",{"_index":331,"title":{},"body":{"modules/SceneModule.html":{},"overview.html":{}}}],["cluster_scenemodule_imports",{"_index":332,"title":{},"body":{"modules/SceneModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule",{"_index":531,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declarations",{"_index":532,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_exports",{"_index":533,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_svgiconmodule",{"_index":775,"title":{},"body":{"modules/SvgIconModule.html":{},"overview.html":{}}}],["cluster_svgiconmodule_declarations",{"_index":777,"title":{},"body":{"modules/SvgIconModule.html":{},"overview.html":{}}}],["cluster_svgiconmodule_exports",{"_index":776,"title":{},"body":{"modules/SvgIconModule.html":{},"overview.html":{}}}],["commonmodule",{"_index":336,"title":{},"body":{"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["component",{"_index":0,"title":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"coverage.html":{}}}],["component_template",{"_index":102,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["computes",{"_index":435,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["config",{"_index":766,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["config.loader",{"_index":768,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["console.error(err",{"_index":854,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["const",{"_index":210,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["constructor(_ref",{"_index":364,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["constructor(_sidebar",{"_index":266,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["constructor(element",{"_index":239,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{}}}],["constructor(http",{"_index":544,"title":{},"body":{"injectables/SvgHttpLoader.html":{}}}],["constructor(loader",{"_index":788,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["constructor(private",{"_index":276,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["constructor(router",{"_index":30,"title":{},"body":{"components/AppScene.html":{}}}],["container",{"_index":348,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container's",{"_index":421,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container'},{'name",{"_index":110,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["container.component",{"_index":537,"title":{},"body":{"modules/SidebarModule.html":{}}}],["container.component.ts",{"_index":343,"title":{},"body":{"components/SidebarContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:226",{"_index":388,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:242",{"_index":393,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:260",{"_index":382,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:279",{"_index":376,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:46",{"_index":370,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:48",{"_index":369,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:49",{"_index":373,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:50",{"_index":375,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:51",{"_index":374,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:53",{"_index":372,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:54",{"_index":371,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:56",{"_index":402,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:58",{"_index":367,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:68",{"_index":396,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:76",{"_index":399,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["container.component.ts:86",{"_index":401,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["content",{"_index":444,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["contentclass",{"_index":360,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["contents",{"_index":439,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["convert",{"_index":714,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["copyngcontentattribute",{"_index":563,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["copyngcontentattribute(hostelem",{"_index":601,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["coverage",{"_index":867,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":471,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["cssstyledeclaration",{"_index":443,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["current",{"_index":624,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["current.split",{"_index":752,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["data",{"_index":793,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["declarations",{"_index":146,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["default",{"_index":44,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["dependencies",{"_index":138,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"overview.html":{}}}],["deps",{"_index":864,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["destroy",{"_index":564,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["detection",{"_index":379,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["developers",{"_index":301,"title":{},"body":{"components/NavbarComponent.html":{}}}],["device",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["differ",{"_index":649,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["differs",{"_index":583,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["dir",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directive",{"_index":100,"title":{"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{}},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{}}}],["directives",{"_index":113,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"overview.html":{}}}],["disable",{"_index":223,"title":{},"body":{"injectables/BemService.html":{},"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["div",{"_index":827,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["div.innerhtml",{"_index":829,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["div.queryselector('svg",{"_index":830,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["doaria",{"_index":565,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["doaria(label",{"_index":606,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["docheck",{"_index":559,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["document",{"_index":781,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["document.body",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":299,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["el",{"_index":183,"title":{},"body":{"injectables/BemService.html":{}}}],["elem",{"_index":680,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["elem.directive",{"_index":150,"title":{},"body":{"modules/BemModule.html":{}}}],["elem.firstchild.hasattribute('aria",{"_index":727,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["elem.innerhtml",{"_index":699,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["elemdirective",{"_index":118,"title":{"directives/ElemDirective.html":{}},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":99,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["element.nativeelement",{"_index":195,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["elementref",{"_index":175,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["elemname",{"_index":161,"title":{},"body":{"injectables/BemService.html":{}}}],["elemsvg",{"_index":664,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["entire",{"_index":459,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["environment",{"_index":303,"title":{},"body":{"components/NavbarComponent.html":{}}}],["escape",{"_index":227,"title":{},"body":{"injectables/BemService.html":{}}}],["eslint",{"_index":222,"title":{},"body":{"injectables/BemService.html":{},"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":411,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["eslint/no",{"_index":271,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":91,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["eventemitter",{"_index":308,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{}}}],["events",{"_index":390,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["execute",{"_index":909,"title":{},"body":{"index.html":{}}}],["explicit",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":84,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["exports",{"_index":147,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["extends",{"_index":541,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["factory/agent",{"_index":76,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["factory/core",{"_index":80,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["factory/ng",{"_index":409,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["false",{"_index":48,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["filter",{"_index":82,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["filter((klass",{"_index":748,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["finalize",{"_index":816,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["flexlayoutmodule",{"_index":322,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["forroot",{"_index":765,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["forroot(config",{"_index":778,"title":{},"body":{"modules/SvgIconModule.html":{}}}],["function",{"_index":219,"title":{},"body":{"injectables/BemService.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{}}}],["functionality",{"_index":842,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["functions",{"_index":896,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generateclass",{"_index":156,"title":{},"body":{"injectables/BemService.html":{}}}],["generateclass(blockname",{"_index":160,"title":{},"body":{"injectables/BemService.html":{}}}],["generated",{"_index":903,"title":{},"body":{"index.html":{}}}],["getcomputedstyle(document.body",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getpropertyvalue('direction",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getsvg",{"_index":543,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["getsvg(url",{"_index":548,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["getsvgbyname",{"_index":785,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["getsvgbyname(name",{"_index":798,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["getting",{"_index":899,"title":{"index.html":{}},"body":{}}],["h",{"_index":717,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["hasopen",{"_index":524,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["height",{"_index":493,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["heightstyle",{"_index":452,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["helper",{"_index":561,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["hidden",{"_index":755,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["host",{"_index":272,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["hostelem",{"_index":604,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["hostelem.attributes",{"_index":730,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["html",{"_index":98,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["htmlelement",{"_index":621,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["http",{"_index":547,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["httpclient",{"_index":545,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["https://github.com/central",{"_index":408,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["icnsub",{"_index":648,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["icon",{"_index":53,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["icon.component",{"_index":763,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["icon.component.ts",{"_index":558,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"coverage.html":{}}}],["icon.component.ts:133",{"_index":613,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:143",{"_index":609,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:161",{"_index":612,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:168",{"_index":605,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:175",{"_index":619,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:181",{"_index":637,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:236",{"_index":603,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:24",{"_index":774,"title":{},"body":{"classes/SvgIconHelper.html":{}}}],["icon.component.ts:248",{"_index":630,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:25",{"_index":772,"title":{},"body":{"classes/SvgIconHelper.html":{}}}],["icon.component.ts:259",{"_index":638,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:26",{"_index":771,"title":{},"body":{"classes/SvgIconHelper.html":{}}}],["icon.component.ts:27",{"_index":773,"title":{},"body":{"classes/SvgIconHelper.html":{}}}],["icon.component.ts:271",{"_index":600,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:286",{"_index":634,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:301",{"_index":625,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:326",{"_index":607,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:35",{"_index":592,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:36",{"_index":591,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:37",{"_index":593,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:38",{"_index":589,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:39",{"_index":595,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:41",{"_index":590,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:42",{"_index":597,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:43",{"_index":594,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:47",{"_index":596,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:54",{"_index":641,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:55",{"_index":588,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:65",{"_index":618,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:69",{"_index":617,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:73",{"_index":615,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.getattribute('height",{"_index":718,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["icon.getattribute('width",{"_index":716,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["icon.module",{"_index":327,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["icon.module.ts",{"_index":758,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"coverage.html":{}}}],["icon.module.ts:17",{"_index":779,"title":{},"body":{"modules/SvgIconModule.html":{}}}],["icon/svg",{"_index":326,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["iconreg",{"_index":585,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["iconsbyurl",{"_index":782,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["iconsloadingbyurl",{"_index":783,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["identifier",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["ignorevalues",{"_index":128,"title":{},"body":{"classes/BemConfig.html":{},"injectables/BemService.html":{}}}],["implements",{"_index":9,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["import",{"_index":71,"title":{},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["imports",{"_index":321,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["inherited",{"_index":549,"title":{},"body":{"injectables/SvgHttpLoader.html":{}}}],["init",{"_index":566,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["initsvg",{"_index":567,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["initsvg(svg",{"_index":610,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["inject",{"_index":405,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{}}}],["inject(document",{"_index":823,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["inject(platform_id",{"_index":413,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{}}}],["inject(server_url",{"_index":821,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["injectable",{"_index":152,"title":{"injectables/BemService.html":{},"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{}},"body":{"injectables/BemService.html":{},"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["injectables",{"_index":154,"title":{},"body":{"injectables/BemService.html":{},"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":810,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('server_url",{"_index":820,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":248,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["input('class",{"_index":652,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["inputs",{"_index":238,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["instanceof",{"_index":92,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["interface",{"_index":85,"title":{"interfaces/SidebarItem.html":{},"interfaces/SvgIconConfig.html":{}},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"coverage.html":{}}}],["interfaces",{"_index":530,"title":{},"body":{"interfaces/SidebarItem.html":{},"interfaces/SvgIconConfig.html":{},"overview.html":{}}}],["internal",{"_index":277,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{}}}],["inventory",{"_index":59,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["ios",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ios.ts",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipad|iphone|ipod/.test(navigator.useragent",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isios",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isltr",{"_index":892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isplatformbrowser",{"_index":403,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["isplatformbrowser(platformid",{"_index":415,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["item.active",{"_index":95,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["item.name",{"_index":18,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["json.stringify(this.cfmod",{"_index":256,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["k",{"_index":749,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["kebab",{"_index":180,"title":{},"body":{"injectables/BemService.html":{}}}],["key",{"_index":197,"title":{},"body":{"injectables/BemService.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["keyvaluechangerecord",{"_index":644,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["keyvaluechanges",{"_index":599,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["keyvaluediffer",{"_index":645,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["keyvaluediffers",{"_index":584,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["klass",{"_index":653,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["klasses",{"_index":745,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["label",{"_index":608,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["layout",{"_index":324,"title":{},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{}}}],["left",{"_index":446,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["left}px",{"_index":490,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["legend",{"_index":97,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["len",{"_index":732,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["library",{"_index":902,"title":{},"body":{"index.html":{}}}],["line",{"_index":225,"title":{},"body":{"injectables/BemService.html":{},"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":422,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["literal",{"_index":639,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["load",{"_index":805,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["loaded",{"_index":650,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["loader",{"_index":759,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{}}}],["loader.ts",{"_index":540,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["loader.ts:10",{"_index":546,"title":{},"body":{"injectables/SvgHttpLoader.html":{}}}],["loader.ts:6",{"_index":866,"title":{},"body":{"classes/SvgLoader.html":{}}}],["loadsvg",{"_index":786,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["loadsvg(url",{"_index":803,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["ltr",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ltr.ts",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":802,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["map((svg",{"_index":851,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["margin",{"_index":436,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["marketplace",{"_index":62,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["matching",{"_index":124,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.max(bottom",{"_index":485,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["math.max(left",{"_index":481,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["math.max(right",{"_index":483,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["math.max(top",{"_index":484,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["maybe",{"_index":840,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["metaverse",{"_index":68,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["miscellaneous",{"_index":895,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":185,"title":{},"body":{"injectables/BemService.html":{}}}],["mod.directive",{"_index":151,"title":{},"body":{"modules/BemModule.html":{}}}],["modcase",{"_index":129,"title":{},"body":{"classes/BemConfig.html":{},"injectables/BemService.html":{}}}],["moddirective",{"_index":120,"title":{"directives/ModDirective.html":{}},"body":{"components/AppScene.html":{},"modules/BemModule.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":456,"title":{},"body":{"components/SidebarContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["modname",{"_index":162,"title":{},"body":{"injectables/BemService.html":{}}}],["modnamehandler",{"_index":157,"title":{},"body":{"injectables/BemService.html":{}}}],["modnamehandler(str",{"_index":167,"title":{},"body":{"injectables/BemService.html":{}}}],["mods",{"_index":172,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["mods.split(/\\s",{"_index":208,"title":{},"body":{"injectables/BemService.html":{}}}],["mods[key",{"_index":192,"title":{},"body":{"injectables/BemService.html":{}}}],["module",{"_index":135,"title":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{}},"body":{}}],["modules",{"_index":137,"title":{"modules.html":{}},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":761,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["modvalue",{"_index":163,"title":{},"body":{"injectables/BemService.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{}}}],["nameandunit",{"_index":635,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["nameandunit.split",{"_index":741,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["namednodemap",{"_index":731,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["navbar",{"_index":297,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":105,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["navbar.component",{"_index":328,"title":{},"body":{"modules/NavbarModule.html":{}}}],["navbar/navbar.module",{"_index":339,"title":{},"body":{"modules/SceneModule.html":{}}}],["navbarcomponent",{"_index":104,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navbarmodule",{"_index":314,"title":{"modules/NavbarModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules.html":{},"overview.html":{}}}],["navigationend",{"_index":73,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["navigator",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":457,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["needed",{"_index":442,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["new",{"_index":312,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":224,"title":{},"body":{"injectables/BemService.html":{},"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":355,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["ngdocheck",{"_index":568,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ngmodule",{"_index":148,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["ngonchanges",{"_index":237,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["ngonchanges(changerecord",{"_index":614,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ngonchanges(changes",{"_index":397,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["ngondestroy",{"_index":356,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ngstyle",{"_index":655,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["node",{"_index":628,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["non",{"_index":688,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["now",{"_index":838,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["null",{"_index":206,"title":{},"body":{"injectables/BemService.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":633,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["nx",{"_index":904,"title":{},"body":{"index.html":{}}}],["o",{"_index":849,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["object",{"_index":182,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":262,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["object.keys(mods).foreach((key",{"_index":190,"title":{},"body":{"injectables/BemService.html":{}}}],["object.keys(oldmods).foreach((key",{"_index":199,"title":{},"body":{"injectables/BemService.html":{}}}],["observable",{"_index":43,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["observableof",{"_index":812,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["observableof(this.iconsbyurl.get(name",{"_index":846,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["observablethrowerror",{"_index":814,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["observablethrowerror(`no",{"_index":858,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["observablethrowerror(err",{"_index":855,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["oldmods",{"_index":174,"title":{},"body":{"injectables/BemService.html":{}}}],["oldmods[key",{"_index":191,"title":{},"body":{"injectables/BemService.html":{}}}],["onchanges",{"_index":232,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ondestroy",{"_index":345,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["ontitleclick",{"_index":302,"title":{},"body":{"components/NavbarComponent.html":{}}}],["open",{"_index":441,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["option",{"_index":498,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":144,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"overview.html":{}}}],["output",{"_index":311,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{}}}],["outputs",{"_index":304,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{}}}],["override",{"_index":723,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["overriding",{"_index":837,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["overview",{"_index":913,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["padding",{"_index":486,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["paddingamt",{"_index":475,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["page",{"_index":438,"title":{},"body":{"components/SidebarContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":423,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":631,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["parentregistry",{"_index":862,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{}}}],["parsemods",{"_index":158,"title":{},"body":{"injectables/BemService.html":{}}}],["parsemods(mods",{"_index":170,"title":{},"body":{"injectables/BemService.html":{}}}],["passing",{"_index":797,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["personal.svg",{"_index":61,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["pipe(filter((event",{"_index":90,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["platform_id",{"_index":406,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["platformid",{"_index":366,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{}}}],["play",{"_index":51,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["portal",{"_index":69,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["possibility",{"_index":833,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["previous",{"_index":623,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["previous.split",{"_index":747,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["private",{"_index":27,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["properly",{"_index":392,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["property",{"_index":273,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["protected",{"_index":822,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["provide",{"_index":769,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":839,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["providedin",{"_index":188,"title":{},"body":{"injectables/BemService.html":{}}}],["provider",{"_index":760,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["providers",{"_index":767,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["public",{"_index":236,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["push",{"_index":437,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["react",{"_index":391,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["readonly",{"_index":251,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["recompute",{"_index":380,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["record",{"_index":735,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["record.currentvalue",{"_index":738,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["register",{"_index":425,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["registry",{"_index":796,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service",{"_index":647,"title":{},"body":{"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{}}}],["registry.service.ts",{"_index":780,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["registry.service.ts:23",{"_index":808,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:24",{"_index":809,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:25",{"_index":791,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:37",{"_index":794,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:47",{"_index":804,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:84",{"_index":799,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["registry.service.ts:94",{"_index":807,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["remove",{"_index":430,"title":{},"body":{"components/SidebarContainerComponent.html":{},"injectables/SvgIconRegistryService.html":{}}}],["removes",{"_index":429,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["rename",{"_index":651,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["renderer",{"_index":176,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["renderer.addclass",{"_index":198,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["renderer.removeclass",{"_index":194,"title":{},"body":{"injectables/BemService.html":{}}}],["renderer2",{"_index":177,"title":{},"body":{"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["replace",{"_index":228,"title":{},"body":{"injectables/BemService.html":{}}}],["replace(/[a",{"_index":217,"title":{},"body":{"injectables/BemService.html":{}}}],["reset",{"_index":143,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"overview.html":{}}}],["resetdiffer",{"_index":569,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["responsetype",{"_index":556,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["results",{"_index":123,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":193,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":40,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":448,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["right}px",{"_index":488,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["root",{"_index":189,"title":{},"body":{"injectables/BemService.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["routerlink",{"_index":52,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["routermodule",{"_index":338,"title":{},"body":{"modules/SceneModule.html":{}}}],["run",{"_index":907,"title":{},"body":{"index.html":{}}}],["running",{"_index":905,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":81,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["rxjs/operators",{"_index":83,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgIconRegistryService.html":{}}}],["s",{"_index":220,"title":{},"body":{"injectables/BemService.html":{}}}],["s.tolowercase",{"_index":221,"title":{},"body":{"injectables/BemService.html":{}}}],["scene",{"_index":14,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["scene'},{'name",{"_index":103,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["scenemodule",{"_index":329,"title":{"modules/SceneModule.html":{}},"body":{"modules/SceneModule.html":{},"modules.html":{},"overview.html":{}}}],["see",{"_index":656,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["selected",{"_index":57,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["selectedavatar",{"_index":21,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["selectedavatarstate",{"_index":32,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppScene.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["separate",{"_index":841,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["separators",{"_index":130,"title":{},"body":{"classes/BemConfig.html":{},"injectables/BemService.html":{}}}],["server",{"_index":835,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["server_url",{"_index":819,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverurl",{"_index":789,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":499,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["setclass",{"_index":570,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["setclass(target",{"_index":620,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setmods",{"_index":159,"title":{},"body":{"injectables/BemService.html":{}}}],["setmods(blockname",{"_index":173,"title":{},"body":{"injectables/BemService.html":{}}}],["setngcontentattribute",{"_index":571,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setngcontentattribute(parent",{"_index":627,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setsidebaritemsactive",{"_index":28,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["setstyle",{"_index":572,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["setstyle(nameandunit",{"_index":632,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setsvg",{"_index":573,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setsvg(svg",{"_index":636,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["setsvgstyle(values",{"_index":642,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["settimeout",{"_index":528,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["settings",{"_index":64,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["share",{"_index":817,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["show",{"_index":384,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["showbackdrop",{"_index":361,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["showbackdropchange",{"_index":363,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar",{"_index":109,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"components/SvgIconComponent.html":{}}}],["sidebar'},{'name",{"_index":107,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["sidebar._dockedsize",{"_index":479,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._height",{"_index":469,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._isdocked",{"_index":477,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._isleftorright",{"_index":463,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._isleftortop",{"_index":467,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._ismodeover",{"_index":478,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._ismodepush",{"_index":473,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._ismodeslide",{"_index":460,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._onrerender.subscribe",{"_index":513,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._onrerender.unsubscribe",{"_index":520,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar._width",{"_index":468,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.close",{"_index":504,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.closeonclickbackdrop",{"_index":503,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.closestart.subscribe",{"_index":509,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.closestart.unsubscribe",{"_index":516,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.component",{"_index":269,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{}}}],["sidebar.directive",{"_index":536,"title":{},"body":{"modules/SidebarModule.html":{}}}],["sidebar.directive.ts",{"_index":264,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"coverage.html":{}}}],["sidebar.directive.ts:11",{"_index":267,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["sidebar.dock",{"_index":474,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.modechange.subscribe",{"_index":511,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.modechange.unsubscribe",{"_index":518,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.opened",{"_index":461,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.openstart.subscribe",{"_index":506,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.openstart.unsubscribe",{"_index":514,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.position",{"_index":480,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.positionchange.subscribe",{"_index":512,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.positionchange.unsubscribe",{"_index":519,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.showbackdrop",{"_index":502,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.sidebarclose.subscribe",{"_index":510,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.sidebarclose.unsubscribe",{"_index":517,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.sidebaropen.subscribe",{"_index":507,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar.sidebaropen.unsubscribe",{"_index":515,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["sidebar/sidebar.module",{"_index":340,"title":{},"body":{"modules/SceneModule.html":{}}}],["sidebarcomponent",{"_index":106,"title":{},"body":{"components/AppScene.html":{},"directives/CloseSidebarDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarcontainercomponent",{"_index":108,"title":{"components/SidebarContainerComponent.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"modules/SidebarModule.html":{},"components/SvgIconComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarisopen",{"_index":22,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["sidebaritem",{"_index":50,"title":{"interfaces/SidebarItem.html":{}},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"coverage.html":{}}}],["sidebaritems",{"_index":23,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["sidebarmodule",{"_index":334,"title":{"modules/SidebarModule.html":{}},"body":{"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["sidebars",{"_index":395,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["simplechanges",{"_index":398,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["single",{"_index":523,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["skipself",{"_index":811,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["slide",{"_index":455,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["snake",{"_index":229,"title":{},"body":{"injectables/BemService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"modules/BemModule.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"directives/ModDirective.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"modules/SidebarModule.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["space",{"_index":472,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["src",{"_index":576,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["src/.../is",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../svg",{"_index":897,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/angular/bem/bem.config.ts",{"_index":127,"title":{},"body":{"classes/BemConfig.html":{},"coverage.html":{}}}],["src/lib/angular/bem/bem.config.ts:2",{"_index":134,"title":{},"body":{"classes/BemConfig.html":{}}}],["src/lib/angular/bem/bem.config.ts:3",{"_index":131,"title":{},"body":{"classes/BemConfig.html":{}}}],["src/lib/angular/bem/bem.config.ts:4",{"_index":132,"title":{},"body":{"classes/BemConfig.html":{}}}],["src/lib/angular/bem/bem.module.ts",{"_index":145,"title":{},"body":{"modules/BemModule.html":{}}}],["src/lib/angular/bem/bem.service.ts",{"_index":155,"title":{},"body":{"injectables/BemService.html":{},"coverage.html":{}}}],["src/lib/angular/bem/bem.service.ts:105",{"_index":168,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:13",{"_index":179,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:14",{"_index":181,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:16",{"_index":178,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:54",{"_index":164,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:8",{"_index":187,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/bem.service.ts:85",{"_index":171,"title":{},"body":{"injectables/BemService.html":{}}}],["src/lib/angular/bem/block.directive.ts",{"_index":231,"title":{},"body":{"directives/BlockDirective.html":{},"coverage.html":{}}}],["src/lib/angular/bem/block.directive.ts:16",{"_index":244,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:17",{"_index":246,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:18",{"_index":245,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:19",{"_index":241,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:20",{"_index":243,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:21",{"_index":240,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/block.directive.ts:39",{"_index":242,"title":{},"body":{"directives/BlockDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts",{"_index":280,"title":{},"body":{"directives/ElemDirective.html":{},"coverage.html":{}}}],["src/lib/angular/bem/elem.directive.ts:17",{"_index":288,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:18",{"_index":290,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:19",{"_index":287,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:20",{"_index":289,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:21",{"_index":284,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:22",{"_index":286,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:23",{"_index":283,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/elem.directive.ts:43",{"_index":285,"title":{},"body":{"directives/ElemDirective.html":{}}}],["src/lib/angular/bem/mod.directive.ts",{"_index":295,"title":{},"body":{"directives/ModDirective.html":{},"coverage.html":{}}}],["src/lib/angular/navbar/navbar.component.ts",{"_index":296,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/lib/angular/navbar/navbar.component.ts:67",{"_index":306,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/lib/angular/navbar/navbar.component.ts:68",{"_index":307,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/lib/angular/navbar/navbar.component.ts:70",{"_index":309,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/lib/angular/navbar/navbar.component.ts:72",{"_index":310,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/lib/angular/navbar/navbar.module.ts",{"_index":320,"title":{},"body":{"modules/NavbarModule.html":{}}}],["src/lib/angular/scene/app.scene.ts",{"_index":8,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{},"coverage.html":{}}}],["src/lib/angular/scene/app.scene.ts:110",{"_index":70,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:111",{"_index":49,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:113",{"_index":66,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:146",{"_index":47,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:147",{"_index":34,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:154",{"_index":39,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/app.scene.ts:162",{"_index":42,"title":{},"body":{"components/AppScene.html":{}}}],["src/lib/angular/scene/scene.module.ts",{"_index":335,"title":{},"body":{"modules/SceneModule.html":{}}}],["src/lib/angular/sidebar/close",{"_index":263,"title":{},"body":{"directives/CloseSidebarDirective.html":{},"coverage.html":{}}}],["src/lib/angular/sidebar/sidebar",{"_index":342,"title":{},"body":{"components/SidebarContainerComponent.html":{},"coverage.html":{}}}],["src/lib/angular/sidebar/sidebar.component.ts",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["src/lib/angular/sidebar/sidebar.module.ts",{"_index":534,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/lib/angular/svg",{"_index":539,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/shared/platform/browser/is",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":900,"title":{"index.html":{}},"body":{}}],["statements",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":764,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["str",{"_index":169,"title":{},"body":{"injectables/BemService.html":{}}}],["stretch",{"_index":577,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":381,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["stylize",{"_index":574,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["subscribe",{"_index":93,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["subscribes",{"_index":389,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["subscription",{"_index":646,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["super",{"_index":554,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["support",{"_index":911,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":832,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["svg",{"_index":112,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"modules.html":{}}}],["svg's",{"_index":724,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svg.clonenode(true",{"_index":706,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svg_icon_registry_provider",{"_index":762,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg_icon_registry_provider_factory",{"_index":861,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["svg_icon_registry_provider_factory(parentregistry",{"_index":898,"title":{},"body":{"miscellaneous/functions.html":{}}}],["svgarialabel",{"_index":578,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgclass",{"_index":579,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgelement",{"_index":602,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["svghttploader",{"_index":538,"title":{"injectables/SvgHttpLoader.html":{}},"body":{"injectables/SvgHttpLoader.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"classes/SvgLoader.html":{},"coverage.html":{}}}],["svgiconcomponent",{"_index":111,"title":{"components/SvgIconComponent.html":{}},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"coverage.html":{},"overview.html":{}}}],["svgiconconfig",{"_index":757,"title":{"interfaces/SvgIconConfig.html":{}},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"coverage.html":{}}}],["svgiconhelper",{"_index":640,"title":{"classes/SvgIconHelper.html":{}},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"coverage.html":{}}}],["svgiconmodule",{"_index":319,"title":{"modules/SvgIconModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"modules.html":{},"overview.html":{}}}],["svgiconregistryservice",{"_index":586,"title":{"injectables/SvgIconRegistryService.html":{}},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["svgiconregistryservice(loader",{"_index":863,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["svgloader",{"_index":542,"title":{"classes/SvgLoader.html":{}},"body":{"injectables/SvgHttpLoader.html":{},"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["svgloader:15",{"_index":550,"title":{},"body":{"injectables/SvgHttpLoader.html":{}}}],["svgobs",{"_index":692,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgobs.subscribe((svg",{"_index":695,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgstyle",{"_index":580,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["svgstyle(values",{"_index":658,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["svgsvgelement",{"_index":622,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["switch",{"_index":214,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{}}}],["table",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":818,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["tap((svg",{"_index":852,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["target",{"_index":626,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["template",{"_index":15,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["test",{"_index":908,"title":{},"body":{"index.html":{}}}],["tests",{"_index":906,"title":{},"body":{"index.html":{}}}],["text",{"_index":557,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["this._document",{"_index":825,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this._isbrowser",{"_index":414,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._markforcheck",{"_index":508,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._mods",{"_index":261,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this._modserialized",{"_index":257,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this._ontoggle",{"_index":416,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._ref.markforcheck",{"_index":529,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebar",{"_index":278,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["this._sidebar.close",{"_index":279,"title":{},"body":{"directives/CloseSidebarDirective.html":{}}}],["this._sidebars",{"_index":454,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.indexof(sidebar",{"_index":432,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.length",{"_index":521,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.push(sidebar",{"_index":427,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.some",{"_index":525,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._sidebars.splice(index",{"_index":434,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._subscribe(sidebar",{"_index":428,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this._svgstyle",{"_index":659,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this._unsubscribe",{"_index":419,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.allowsidebarbackdropcontrol",{"_index":522,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.applychanges(changes",{"_index":691,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.applyclass",{"_index":672,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.backdropclick.emit",{"_index":505,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.bemservice.generateclass(block.name",{"_index":294,"title":{},"body":{"directives/ElemDirective.html":{}}}],["this.bemservice.generateclass(name",{"_index":255,"title":{},"body":{"directives/BlockDirective.html":{}}}],["this.bemservice.parsemods(mods",{"_index":259,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.bemservice.setmods",{"_index":260,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.blockname",{"_index":292,"title":{},"body":{"directives/ElemDirective.html":{}}}],["this.cdr.markforcheck",{"_index":700,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.cfmod",{"_index":258,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.copyngcontentattribute(elem",{"_index":708,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.destroy",{"_index":663,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.differs.find(this._svgstyle).create",{"_index":705,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.differs.find(values).create",{"_index":661,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.doaria(changerecord.svgarialabel.currentvalue",{"_index":686,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.doaria(this.svgarialabel",{"_index":728,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.document",{"_index":824,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.document.createelement('div",{"_index":828,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.element",{"_index":253,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.element.nativeelement",{"_index":681,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.element.nativeelement.firstchild",{"_index":665,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.generateclass(blockname",{"_index":196,"title":{},"body":{"injectables/BemService.html":{}}}],["this.helper",{"_index":704,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.differ",{"_index":660,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.differ.diff(this._svgstyle",{"_index":690,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.icnsub",{"_index":694,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.icnsub.unsubscribe",{"_index":703,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.loaded",{"_index":668,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.helper.svg",{"_index":687,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.http.get(url",{"_index":555,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"classes/SvgLoader.html":{}}}],["this.iconreg.getsvgbyname(this.name",{"_index":693,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.iconreg.loadsvg(this.src",{"_index":698,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.iconsbyurl.delete(url",{"_index":860,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsbyurl.has(name",{"_index":826,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsbyurl.has(url",{"_index":859,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsbyurl.set(name",{"_index":831,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsloadingbyurl.delete(name",{"_index":856,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsloadingbyurl.get(name",{"_index":848,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsloadingbyurl.has(name",{"_index":847,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.iconsloadingbyurl.set(name",{"_index":857,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.ignorevalues",{"_index":200,"title":{},"body":{"injectables/BemService.html":{}}}],["this.init",{"_index":662,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.initsvg(svg",{"_index":696,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.klass",{"_index":674,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.loader.getsvg(url).pipe",{"_index":850,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.modcase",{"_index":215,"title":{},"body":{"injectables/BemService.html":{}}}],["this.modnamehandler(modname",{"_index":204,"title":{},"body":{"injectables/BemService.html":{}}}],["this.name",{"_index":252,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer",{"_index":254,"title":{},"body":{"directives/BlockDirective.html":{},"directives/ElemDirective.html":{}}}],["this.renderer.addclass(target",{"_index":753,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.appendchild(elem",{"_index":707,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.removeattribute(icon",{"_index":721,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.removeattribute(svg",{"_index":756,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.removeclass(target",{"_index":750,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.removestyle(svg",{"_index":744,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.setattribute(icon",{"_index":720,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.setattribute(svg",{"_index":754,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.renderer.setstyle(svg",{"_index":743,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.resetdiffer",{"_index":702,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.router.events",{"_index":89,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.router.url.endswith(item.routerlink.join",{"_index":96,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.selectedavatarstate.avatar",{"_index":46,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.separators.el",{"_index":203,"title":{},"body":{"injectables/BemService.html":{}}}],["this.separators.mod",{"_index":205,"title":{},"body":{"injectables/BemService.html":{}}}],["this.separators.val",{"_index":207,"title":{},"body":{"injectables/BemService.html":{}}}],["this.serverurl",{"_index":844,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["this.setclass",{"_index":676,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.setclass(elem.firstchild",{"_index":709,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.setclass(elemsvg",{"_index":673,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.setsidebaritemsactive",{"_index":88,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.setstyle(record.key",{"_index":736,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.setsvg(svg",{"_index":701,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.showbackdrop",{"_index":526,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.showbackdropchange.emit(changes['showbackdrop'].currentvalue",{"_index":418,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.showbackdropchange.emit(hasopen",{"_index":527,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["this.sidebaritems.foreach((item",{"_index":94,"title":{},"body":{"components/AppScene.html":{},"interfaces/SidebarItem.html":{}}}],["this.src",{"_index":697,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.stylize",{"_index":670,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.svgarialabel",{"_index":726,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.svgclass",{"_index":710,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["this.titleclick.emit",{"_index":313,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.viewbox",{"_index":711,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["throwerror",{"_index":813,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"interfaces/SidebarItem.html":{}}}],["titleclick",{"_index":305,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggled",{"_index":386,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["top",{"_index":449,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["top}px",{"_index":487,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["transform",{"_index":492,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["transformamt",{"_index":466,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["transformdir",{"_index":462,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["transformstyle",{"_index":451,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["translate",{"_index":458,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["translate${transformdir}(${transformamt}px",{"_index":470,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["triggers",{"_index":377,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["true",{"_index":213,"title":{},"body":{"injectables/BemService.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AppScene.html":{},"classes/BemConfig.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"interfaces/SidebarItem.html":{},"injectables/SvgHttpLoader.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconConfig.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":201,"title":{},"body":{"injectables/BemService.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":412,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["typescript",{"_index":410,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":611,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":740,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"index.html":{}}}],["unloadsvg",{"_index":787,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["unloadsvg(url",{"_index":806,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["unsubscribes",{"_index":394,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["url",{"_index":551,"title":{},"body":{"injectables/SvgHttpLoader.html":{},"injectables/SvgIconRegistryService.html":{},"classes/SvgLoader.html":{}}}],["url.match(/^(http(s",{"_index":845,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["usage",{"_index":836,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["use",{"_index":834,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["useclass",{"_index":770,"title":{},"body":{"interfaces/SvgIconConfig.html":{},"modules/SvgIconModule.html":{}}}],["usefactory",{"_index":865,"title":{},"body":{"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["useless",{"_index":226,"title":{},"body":{"injectables/BemService.html":{}}}],["val",{"_index":186,"title":{},"body":{"injectables/BemService.html":{}}}],["value",{"_index":45,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"modules/SvgIconModule.html":{},"injectables/SvgIconRegistryService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":643,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["value}${unit",{"_index":742,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["var",{"_index":101,"title":{},"body":{"components/AppScene.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{}}}],["variable",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":918,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vb",{"_index":719,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["viewbox",{"_index":581,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["void",{"_index":41,"title":{},"body":{"components/AppScene.html":{},"injectables/BemService.html":{},"directives/BlockDirective.html":{},"directives/CloseSidebarDirective.html":{},"directives/ElemDirective.html":{},"components/NavbarComponent.html":{},"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{},"injectables/SvgIconRegistryService.html":{}}}],["w",{"_index":715,"title":{},"body":{"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["web",{"_index":901,"title":{},"body":{"index.html":{}}}],["webkittransform",{"_index":491,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["website",{"_index":298,"title":{},"body":{"components/NavbarComponent.html":{}}}],["whether",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["width",{"_index":494,"title":{},"body":{"components/SidebarContainerComponent.html":{},"components/SvgIconComponent.html":{},"classes/SvgIconHelper.html":{}}}],["widthstyle",{"_index":453,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["window",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window.getcomputedstyle",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":424,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["works",{"_index":800,"title":{},"body":{"injectables/SvgIconRegistryService.html":{}}}],["x",{"_index":464,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["y",{"_index":465,"title":{},"body":{"components/SidebarContainerComponent.html":{}}}],["yes",{"_index":166,"title":{},"body":{"injectables/BemService.html":{},"miscellaneous/functions.html":{}}}],["z]/g",{"_index":218,"title":{},"body":{"injectables/BemService.html":{}}}],["zoom",{"_index":142,"title":{},"body":{"modules/BemModule.html":{},"modules/NavbarModule.html":{},"modules/SceneModule.html":{},"modules/SidebarModule.html":{},"modules/SvgIconModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppScene.html":{"url":"components/AppScene.html","title":"component - AppScene","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppScene\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/angular/scene/app.scene.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-scene\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        \n        \n          \n            \n              \n                Account\n              \n              \n            \n\n            \n              \n                \n                  {{ item.name }}\n                \n                \n                  \n                \n              \n            \n\n            \n          \n        \n\n        \n          \n            \n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n    \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedAvatar$\n                            \n                            \n                                sidebarIsOpen\n                            \n                            \n                                sidebarItems\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setSidebarItemsActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, selectedAvatarState: SelectedAvatarState)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/scene/app.scene.ts:147\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedAvatarState\n                                                  \n                                                        \n                                                                    SelectedAvatarState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/scene/app.scene.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setSidebarItemsActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSidebarItemsActive()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/scene/app.scene.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAvatar$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.selectedAvatarState.avatar$\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/scene/app.scene.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebarIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/scene/app.scene.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sidebarItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SidebarItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: 'Play',\n      routerLink: ['/play'],\n      icon: 'assets/icons/mdi/play.svg',\n      active: false,\n    },\n    {\n      name: 'Avatar',\n      routerLink: ['/selected-avatar'],\n      icon: 'assets/icons/mdi/account.svg',\n      active: false,\n    },\n    {\n      name: 'Inventory',\n      routerLink: ['/inventory'],\n      icon: 'assets/icons/mdi/bag-personal.svg',\n      active: false,\n    },\n    {\n      name: 'Marketplace',\n      routerLink: ['/marketplace'],\n      icon: 'assets/icons/mdi/store.svg',\n      active: false,\n    },\n    {\n      name: 'Settings',\n      routerLink: ['/settings'],\n      icon: 'assets/icons/mdi/cog.svg',\n      active: false,\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/scene/app.scene.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Metaverse Portal'\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/scene/app.scene.ts:110\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { SelectedAvatarState } from '@central-factory/agent-avatars/states/selected-avatar/selected-avatar.state';\nimport { Avatar } from '@central-factory/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface SidebarItem {\n  name: string;\n  routerLink: string[];\n  icon: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'cf-scene',\n  template: `\n    \n      \n        \n          \n            \n            \n              \n                \n                  \n                    Account\n                  \n                  \n                \n\n                \n                  \n                    \n                      {{ item.name }}\n                    \n                    \n                      \n                    \n                  \n                \n\n                \n              \n            \n\n            \n              \n                \n              \n            \n          \n\n          \n            \n              \n                \n              \n            \n          \n        \n        \n        \n      \n    \n  `,\n})\nexport class AppScene implements OnInit {\n  title = 'Metaverse Portal';\n  sidebarIsOpen = false;\n\n  sidebarItems: SidebarItem[] = [\n    {\n      name: 'Play',\n      routerLink: ['/play'],\n      icon: 'assets/icons/mdi/play.svg',\n      active: false,\n    },\n    {\n      name: 'Avatar',\n      routerLink: ['/selected-avatar'],\n      icon: 'assets/icons/mdi/account.svg',\n      active: false,\n    },\n    {\n      name: 'Inventory',\n      routerLink: ['/inventory'],\n      icon: 'assets/icons/mdi/bag-personal.svg',\n      active: false,\n    },\n    {\n      name: 'Marketplace',\n      routerLink: ['/marketplace'],\n      icon: 'assets/icons/mdi/store.svg',\n      active: false,\n    },\n    {\n      name: 'Settings',\n      routerLink: ['/settings'],\n      icon: 'assets/icons/mdi/cog.svg',\n      active: false,\n    },\n  ];\n\n  selectedAvatar$: Observable =\n    this.selectedAvatarState.avatar$;\n\n  constructor(\n    private router: Router,\n    private selectedAvatarState: SelectedAvatarState\n  ) {}\n\n  ngOnInit() {\n    this.setSidebarItemsActive();\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => this.setSidebarItemsActive());\n  }\n\n  private setSidebarItemsActive() {\n    this.sidebarItems.forEach((item) => {\n      item.active = this.router.url.endsWith(item.routerLink.join('/'));\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                Account                                                                                                    {{ item.name }}                                                                                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AppScene', 'selector': 'cf-scene'},{'name': 'NavbarComponent', 'selector': 'cf-navbar'},{'name': 'SidebarComponent', 'selector': 'cf-sidebar'},{'name': 'SidebarContainerComponent', 'selector': 'cf-sidebar-container'},{'name': 'SvgIconComponent', 'selector': 'cf-svg-icon'}];\n    var DIRECTIVES = [{'name': 'BlockDirective', 'selector': '[cfBlock]'},{'name': 'CloseSidebarDirective', 'selector': '[cfCloseSidebar]'},{'name': 'ElemDirective', 'selector': '[cfElem]'},{'name': 'ModDirective', 'selector': '[cfMod]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppScene'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BemConfig.html":{"url":"classes/BemConfig.html","title":"class - BemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/bem.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ignoreValues\n                            \n                            \n                                    Optional\n                                modCase\n                            \n                            \n                                    Optional\n                                separators\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ignoreValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.config.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.config.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        separators\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.config.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BemConfig {\n  separators?: Array;\n  ignoreValues?: boolean;\n  modCase?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BemModule.html":{"url":"modules/BemModule.html","title":"module - BemModule","body":"\n                   \n\n\n\n\n    Modules\n    BemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BemModule\n\n\n\ncluster_BemModule_declarations\n\n\n\ncluster_BemModule_exports\n\n\n\n\nBlockDirective\n\nBlockDirective\n\n\n\nBemModule\n\nBemModule\n\nBemModule -->\n\nBlockDirective->BemModule\n\n\n\n\n\nElemDirective\n\nElemDirective\n\nBemModule -->\n\nElemDirective->BemModule\n\n\n\n\n\nModDirective\n\nModDirective\n\nBemModule -->\n\nModDirective->BemModule\n\n\n\n\n\nBlockDirective \n\nBlockDirective \n\nBlockDirective  -->\n\nBemModule->BlockDirective \n\n\n\n\n\nElemDirective \n\nElemDirective \n\nElemDirective  -->\n\nBemModule->ElemDirective \n\n\n\n\n\nModDirective \n\nModDirective \n\nModDirective  -->\n\nBemModule->ModDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/bem/bem.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockDirective\n                        \n                        \n                            ElemDirective\n                        \n                        \n                            ModDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockDirective\n                        \n                        \n                            ElemDirective\n                        \n                        \n                            ModDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BlockDirective } from './block.directive';\nimport { ElemDirective } from './elem.directive';\nimport { ModDirective } from './mod.directive';\n\n@NgModule({\n  declarations: [BlockDirective, ElemDirective, ModDirective],\n  exports: [BlockDirective, ElemDirective, ModDirective],\n})\nexport class BemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BemService.html":{"url":"injectables/BemService.html","title":"injectable - BemService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/bem.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ignoreValues\n                            \n                            \n                                modCase\n                            \n                            \n                                separators\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateClass\n                            \n                            \n                                    Private\n                                modNameHandler\n                            \n                            \n                                parseMods\n                            \n                            \n                                setMods\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateClass\n                        \n                    \n                \n            \n            \n                \ngenerateClass(blockName: string, elemName?: string, modName?: string, modValue?: boolean | string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/bem.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blockName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elemName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    modName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    modValue\n                                    \n                                            boolean | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        modNameHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    modNameHandler(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/bem.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseMods\n                        \n                    \n                \n            \n            \n                \nparseMods(mods: string | string[] | any)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/bem.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mods\n                                    \n                                            string | string[] | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMods\n                        \n                    \n                \n            \n            \n                \nsetMods(blockName: string, elemName: string, mods: any, oldMods: any, element: ElementRef, renderer: Renderer2)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/bem.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blockName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elemName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mods\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldMods\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    renderer\n                                    \n                                                Renderer2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ignoreValues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'kebab'\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        separators\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    el: '__',\n    mod: '--',\n    val: '-',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/bem.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ElementRef, Injectable, Renderer2 } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BemService {\n  separators = {\n    el: '__',\n    mod: '--',\n    val: '-',\n  };\n  ignoreValues = false;\n  modCase = 'kebab';\n\n  setMods(\n    blockName: string,\n    elemName: string,\n    mods: any,\n    oldMods: any,\n    element: ElementRef,\n    renderer: Renderer2\n  ) {\n    Object.keys(mods).forEach((key) => {\n      if (oldMods[key]) {\n        if (mods[key] === oldMods[key]) {\n          return;\n        }\n\n        renderer.removeClass(\n          element.nativeElement,\n          this.generateClass(blockName, elemName, key, oldMods[key])\n        );\n      }\n\n      if (mods[key]) {\n        renderer.addClass(\n          element.nativeElement,\n          this.generateClass(blockName, elemName, key, mods[key])\n        );\n      }\n    });\n\n    Object.keys(oldMods).forEach((key) => {\n      if (!(key in mods) && oldMods[key]) {\n        renderer.removeClass(\n          element.nativeElement,\n          this.generateClass(blockName, elemName, key, oldMods[key])\n        );\n      }\n    });\n  }\n\n  generateClass(\n    blockName: string,\n    elemName?: string,\n    modName?: string,\n    modValue?: boolean | string\n  ): string {\n    if (this.ignoreValues) {\n      modValue = !!modValue;\n    }\n\n    if (typeof modValue !== 'string' && typeof modValue !== 'boolean') {\n      modValue = !!modValue;\n    }\n\n    let cls = blockName;\n\n    if (elemName) {\n      cls += this.separators.el + elemName;\n    }\n\n    if (modName) {\n      modName = this.modNameHandler(modName);\n      cls += this.separators.mod + modName;\n      if (typeof modValue !== 'boolean' && modValue != null) {\n        cls += this.separators.val + modValue;\n      }\n    }\n\n    return cls;\n  }\n\n  parseMods(mods: string | string[] | any) {\n    if (typeof mods === 'string') {\n      mods = mods.split(/\\s+/);\n    }\n\n    if (Array.isArray(mods)) {\n      const arr = mods;\n\n      mods = {};\n\n      arr.forEach((key) => {\n        mods[key] = true;\n      });\n    } else if (typeof mods !== 'object') {\n      return {};\n    }\n\n    return mods;\n  }\n\n  private modNameHandler(str: string): string {\n    switch (this.modCase) {\n      case 'kebab':\n        return str\n          ? str\n              .replace(/[A-Z]/g, function (s) {\n                return '-' + s.toLowerCase();\n              })\n              // eslint-disable-next-line no-useless-escape\n              .replace(/$\\-/, '')\n          : '';\n      case 'snake':\n        return str\n          ? str\n              .replace(/[A-Z]/g, function (s) {\n                return '_' + s.toLowerCase();\n              })\n              // eslint-disable-next-line no-useless-escape\n              .replace(/$\\-/, '')\n          : '';\n      default:\n        return str;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BlockDirective.html":{"url":"directives/BlockDirective.html","title":"directive - BlockDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  BlockDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/block.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [cfBlock]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mods\n                            \n                            \n                                    Private\n                                _modSerialized\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfMod\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, name: string, bemService: BemService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/bem/block.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bemService\n                                                  \n                                                        \n                                                                        BemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfMod\n                    \n                \n                \n                    \n                        Type :     string | string[] | any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/bem/block.directive.ts:19\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/block.directive.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _mods\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _modSerialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/block.directive.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Attribute,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n} from '@angular/core';\nimport { BemService } from './bem.service';\n\n@Directive({\n  selector: '[cfBlock]',\n})\nexport class BlockDirective implements OnChanges {\n  public element: ElementRef;\n  public renderer: Renderer2;\n  public name: string;\n  @Input() public cfMod: string | string[] | any;\n  private _mods: any;\n  private _modSerialized!: string;\n\n  constructor(\n    element: ElementRef,\n    renderer: Renderer2,\n    @Attribute('cfBlock') name: string,\n    private readonly bemService: BemService\n  ) {\n    this.name = name;\n    this.element = element;\n    this.renderer = renderer;\n\n    renderer.addClass(\n      element.nativeElement,\n      this.bemService.generateClass(name)\n    );\n  }\n\n  ngOnChanges() {\n    if (JSON.stringify(this.cfMod) !== this._modSerialized) {\n      this._modSerialized = JSON.stringify(this.cfMod);\n\n      let mods = this.cfMod;\n\n      const { renderer, element, name } = this;\n\n      mods = this.bemService.parseMods(mods);\n\n      this.bemService.setMods(\n        name,\n        '',\n        mods,\n        this._mods || {},\n        element,\n        renderer\n      );\n\n      this._mods = this._mods === mods ? Object.assign({}, mods) : mods;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CloseSidebarDirective.html":{"url":"directives/CloseSidebarDirective.html","title":"directive - CloseSidebarDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CloseSidebarDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/sidebar/close-sidebar.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [cfCloseSidebar]\n                    \n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_sidebar: SidebarComponent)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/sidebar/close-sidebar.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _sidebar\n                                                  \n                                                        \n                                                                        SidebarComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { SidebarComponent } from './sidebar.component';\n\n@Directive({\n  selector: '[cfCloseSidebar]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '(click)': '_onClick()',\n  },\n})\nexport class CloseSidebarDirective {\n  constructor(private _sidebar: SidebarComponent) {}\n\n  /** @internal */\n  _onClick(): void {\n    if (this._sidebar) {\n      this._sidebar.close();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ElemDirective.html":{"url":"directives/ElemDirective.html","title":"directive - ElemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ElemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/elem.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [cfElem]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mods\n                            \n                            \n                                    Private\n                                _modSerialized\n                            \n                            \n                                    Public\n                                blockName\n                            \n                            \n                                    Public\n                                element\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfMod\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, renderer: Renderer2, name: string, block: BlockDirective, bemService: BemService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/bem/elem.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        block\n                                                  \n                                                        \n                                                                        BlockDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bemService\n                                                  \n                                                        \n                                                                        BemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfMod\n                    \n                \n                \n                    \n                        Type :     string | string[] | any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/bem/elem.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/bem/elem.directive.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _mods\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _modSerialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        blockName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/bem/elem.directive.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Attribute,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n} from '@angular/core';\nimport { BemService } from './bem.service';\nimport { BlockDirective } from './block.directive';\n\n@Directive({\n  selector: '[cfElem]',\n})\nexport class ElemDirective implements OnChanges {\n  public element: ElementRef;\n  public renderer: Renderer2;\n  public blockName: string;\n  public name: string;\n  @Input() public cfMod: string | string[] | any;\n  private _mods: any;\n  private _modSerialized!: string;\n\n  constructor(\n    element: ElementRef,\n    renderer: Renderer2,\n    @Attribute('cfElem') name: string,\n    block: BlockDirective,\n    private readonly bemService: BemService\n  ) {\n    this.blockName = block.name;\n    this.name = name;\n    this.element = element;\n    this.renderer = renderer;\n\n    renderer.addClass(\n      element.nativeElement,\n      this.bemService.generateClass(block.name, name)\n    );\n  }\n\n  ngOnChanges() {\n    if (JSON.stringify(this.cfMod) !== this._modSerialized) {\n      this._modSerialized = JSON.stringify(this.cfMod);\n\n      let mods = this.cfMod;\n\n      const { renderer, element, blockName, name } = this;\n\n      mods = this.bemService.parseMods(mods);\n\n      this.bemService.setMods(\n        blockName,\n        name,\n        mods,\n        this._mods || {},\n        element,\n        renderer\n      );\n\n      this._mods = this._mods === mods ? Object.assign({}, mods) : mods;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ModDirective.html":{"url":"directives/ModDirective.html","title":"directive - ModDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ModDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/bem/mod.directive.ts\n        \n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [cfMod]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[cfMod]',\n})\nexport class ModDirective {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/angular/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-navbar\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        \n\n        {{ title }}\n      \n    \n\n    \n      \n        \n          \n            \n            Website\n          \n          \n            \n            Documentation\n          \n          \n            \n            Blog\n          \n          \n            \n            \n              Developers\n            \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTitleClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                environment\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                titleClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        environment\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/navbar/navbar.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CF Portal'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/navbar/navbar.component.ts:68\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        titleClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/navbar/navbar.component.ts:70\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onTitleClick\n                        \n                    \n                \n            \n            \n                \nonTitleClick()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/navbar/navbar.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'cf-navbar',\n  template: `\n    \n      \n        \n          \n            \n\n            {{ title }}\n          \n        \n\n        \n          \n            \n              \n                \n                Website\n              \n              \n                \n                Documentation\n              \n              \n                \n                Blog\n              \n              \n                \n                \n                  Developers\n                \n              \n            \n          \n        \n      \n    \n  `,\n})\nexport class NavbarComponent {\n  @Input() environment: any;\n  @Input() title = 'CF Portal';\n\n  @Output() titleClick = new EventEmitter();\n\n  onTitleClick() {\n    this.titleClick.emit();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ title }}                                                              Website                                            Documentation                                            Blog                                                          Developers                                          '\n    var COMPONENTS = [{'name': 'AppScene', 'selector': 'cf-scene'},{'name': 'NavbarComponent', 'selector': 'cf-navbar'},{'name': 'SidebarComponent', 'selector': 'cf-sidebar'},{'name': 'SidebarContainerComponent', 'selector': 'cf-sidebar-container'},{'name': 'SvgIconComponent', 'selector': 'cf-svg-icon'}];\n    var DIRECTIVES = [{'name': 'BlockDirective', 'selector': '[cfBlock]'},{'name': 'CloseSidebarDirective', 'selector': '[cfCloseSidebar]'},{'name': 'ElemDirective', 'selector': '[cfElem]'},{'name': 'ModDirective', 'selector': '[cfMod]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavbarModule.html":{"url":"modules/NavbarModule.html","title":"module - NavbarModule","body":"\n                   \n\n\n\n\n    Modules\n    NavbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_imports\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavbarModule_declarations\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nBemModule\n\nBemModule\n\nNavbarModule -->\n\nBemModule->NavbarModule\n\n\n\n\n\nSvgIconModule\n\nSvgIconModule\n\nNavbarModule -->\n\nSvgIconModule->NavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/navbar/navbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BemModule\n                        \n                        \n                            SvgIconModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BemModule } from '../bem/bem.module';\nimport { SvgIconModule } from '../svg-icon/svg-icon.module';\nimport { NavbarComponent } from './navbar.component';\n\n@NgModule({\n  imports: [SvgIconModule, FlexLayoutModule, BemModule],\n  declarations: [NavbarComponent],\n  exports: [NavbarComponent],\n})\nexport class NavbarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SceneModule.html":{"url":"modules/SceneModule.html","title":"module - SceneModule","body":"\n                   \n\n\n\n\n    Modules\n    SceneModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SceneModule\n\n\n\ncluster_SceneModule_exports\n\n\n\ncluster_SceneModule_imports\n\n\n\ncluster_SceneModule_declarations\n\n\n\n\nAppScene\n\nAppScene\n\n\n\nSceneModule\n\nSceneModule\n\nSceneModule -->\n\nAppScene->SceneModule\n\n\n\n\n\nAppScene \n\nAppScene \n\nAppScene  -->\n\nSceneModule->AppScene \n\n\n\n\n\nBemModule\n\nBemModule\n\nSceneModule -->\n\nBemModule->SceneModule\n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nSceneModule -->\n\nNavbarModule->SceneModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nSceneModule -->\n\nSidebarModule->SceneModule\n\n\n\n\n\nSvgIconModule\n\nSvgIconModule\n\nSceneModule -->\n\nSvgIconModule->SceneModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/scene/scene.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppScene\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BemModule\n                        \n                        \n                            NavbarModule\n                        \n                        \n                            SidebarModule\n                        \n                        \n                            SvgIconModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AppScene\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { BemModule } from '../bem/bem.module';\nimport { NavbarModule } from '../navbar/navbar.module';\nimport { SidebarModule } from '../sidebar/sidebar.module';\nimport { SvgIconModule } from '../svg-icon/svg-icon.module';\nimport { AppScene } from './app.scene';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SvgIconModule,\n    FlexLayoutModule,\n    BemModule,\n    RouterModule,\n    NavbarModule,\n    SidebarModule,\n  ],\n  declarations: [AppScene],\n  exports: [AppScene],\n})\nexport class SceneModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarContainerComponent.html":{"url":"components/SidebarContainerComponent.html","title":"component - SidebarContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/angular/sidebar/sidebar-container.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-sidebar-container\n            \n\n\n\n            \n                template\n                \n\n\n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isBrowser\n                            \n                            \n                                    Private\n                                _sidebars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _markForCheck\n                            \n                            \n                                    Private\n                                _onToggle\n                            \n                            \n                                    Private\n                                _subscribe\n                            \n                            \n                                    Private\n                                _unsubscribe\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowSidebarBackdropControl\n                            \n                            \n                                animate\n                            \n                            \n                                backdropClass\n                            \n                            \n                                contentClass\n                            \n                            \n                                showBackdrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                backdropClick\n                            \n                            \n                                showBackdropChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_ref: ChangeDetectorRef, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/sidebar/sidebar-container.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowSidebarBackdropControl\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        backdropClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        contentClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showBackdrop\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:49\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        backdropClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showBackdropChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:50\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _markForCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    _markForCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:279\n                \n            \n\n\n            \n                \n                    Triggers change detection to recompute styles.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _onToggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    _onToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:260\n                \n            \n\n\n            \n                \n                    Check if we should show the backdrop when a sidebar is toggled.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _subscribe\n                        \n                    \n                \n            \n            \n                \n                    \n                    _subscribe(sidebar: SidebarComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:226\n                \n            \n\n\n            \n                \n                    Subscribes from a sidebar events to react properly.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sidebar\n                                    \n                                                SidebarComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _unsubscribe\n                        \n                    \n                \n            \n            \n                \n                    \n                    _unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:242\n                \n            \n\n\n            \n                \n                    Unsubscribes from all sidebars.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/sidebar/sidebar-container.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/sidebar/sidebar-container.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _sidebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/sidebar/sidebar-container.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n} from '@angular/core';\nimport { SidebarComponent } from './sidebar.component';\n\n// Based on https://github.com/central-factory/ng-sidebar\n@Component({\n  selector: 'cf-sidebar-container',\n  template: `\n    \n\n    \n\n    \n      \n    \n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidebarContainerComponent\n  implements AfterContentInit, OnChanges, OnDestroy\n{\n  @Input() animate = true;\n\n  @Input() allowSidebarBackdropControl = true;\n  @Input() showBackdrop = false;\n  @Output() showBackdropChange = new EventEmitter();\n  @Output() backdropClick = new EventEmitter();\n\n  @Input() contentClass!: string;\n  @Input() backdropClass!: string;\n\n  private _sidebars: Array = [];\n\n  private _isBrowser: boolean;\n\n  constructor(\n    private _ref: ChangeDetectorRef,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    this._isBrowser = isPlatformBrowser(platformId);\n  }\n\n  ngAfterContentInit(): void {\n    if (!this._isBrowser) {\n      return;\n    }\n\n    this._onToggle();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this._isBrowser) {\n      return;\n    }\n\n    if (changes['showBackdrop']) {\n      this.showBackdropChange.emit(changes['showBackdrop'].currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (!this._isBrowser) {\n      return;\n    }\n\n    this._unsubscribe();\n  }\n\n  /**\n   * @internal\n   *\n   * Adds a sidebar to the container's list of sidebars.\n   *\n   * @param sidebar {Sidebar} A sidebar within the container to register.\n   */\n  _addSidebar(sidebar: SidebarComponent) {\n    this._sidebars.push(sidebar);\n    this._subscribe(sidebar);\n  }\n\n  /**\n   * @internal\n   *\n   * Removes a sidebar from the container's list of sidebars.\n   *\n   * @param sidebar {Sidebar} The sidebar to remove.\n   */\n  _removeSidebar(sidebar: SidebarComponent) {\n    const index = this._sidebars.indexOf(sidebar);\n    if (index !== -1) {\n      this._sidebars.splice(index, 1);\n    }\n  }\n\n  /**\n   * @internal\n   *\n   * Computes `margin` value to push page contents to accommodate open sidebars as needed.\n   *\n   * @return {CSSStyleDeclaration} margin styles for the page content.\n   */\n  _getContentStyle(): CSSStyleDeclaration {\n    let left = 0,\n      right = 0,\n      top = 0,\n      bottom = 0;\n\n    let transformStyle = '';\n    let heightStyle = '';\n    let widthStyle = '';\n\n    for (const sidebar of this._sidebars) {\n      // Slide mode: we need to translate the entire container\n      if (sidebar._isModeSlide) {\n        if (sidebar.opened) {\n          const transformDir = sidebar._isLeftOrRight ? 'X' : 'Y';\n          const transformAmt = `${sidebar._isLeftOrTop ? '' : '-'}${\n            sidebar._isLeftOrRight ? sidebar._width : sidebar._height\n          }`;\n\n          transformStyle = `translate${transformDir}(${transformAmt}px)`;\n        }\n      }\n\n      // Create a space for the sidebar\n      if ((sidebar._isModePush && sidebar.opened) || sidebar.dock) {\n        let paddingAmt = 0;\n\n        if (sidebar._isModeSlide && sidebar.opened) {\n          if (sidebar._isLeftOrRight) {\n            widthStyle = '100%';\n          } else {\n            heightStyle = '100%';\n          }\n        } else {\n          if (sidebar._isDocked || (sidebar._isModeOver && sidebar.dock)) {\n            paddingAmt = sidebar._dockedSize;\n          } else {\n            paddingAmt = sidebar._isLeftOrRight\n              ? sidebar._width\n              : sidebar._height;\n          }\n        }\n\n        switch (sidebar.position) {\n          case 'left':\n            left = Math.max(left, paddingAmt);\n            break;\n\n          case 'right':\n            right = Math.max(right, paddingAmt);\n            break;\n\n          case 'top':\n            top = Math.max(top, paddingAmt);\n            break;\n\n          case 'bottom':\n            bottom = Math.max(bottom, paddingAmt);\n            break;\n        }\n      }\n    }\n\n    return {\n      padding: `${top}px ${right}px ${bottom}px ${left}px`,\n      webkitTransform: transformStyle,\n      transform: transformStyle,\n      height: heightStyle,\n      width: widthStyle,\n    } as CSSStyleDeclaration;\n  }\n\n  /**\n   * @internal\n   *\n   * Closes sidebars when the backdrop is clicked, if they have the\n   * `closeOnClickBackdrop` option set.\n   */\n  _onBackdropClicked(): void {\n    let backdropClicked = false;\n    for (const sidebar of this._sidebars) {\n      if (\n        sidebar.opened &&\n        sidebar.showBackdrop &&\n        sidebar.closeOnClickBackdrop\n      ) {\n        sidebar.close();\n        backdropClicked = true;\n      }\n    }\n\n    if (backdropClicked) {\n      this.backdropClick.emit();\n    }\n  }\n\n  /**\n   * Subscribes from a sidebar events to react properly.\n   */\n  private _subscribe(sidebar: SidebarComponent): void {\n    sidebar.openStart.subscribe(() => this._onToggle());\n    sidebar.sidebarOpen.subscribe(() => this._markForCheck());\n\n    sidebar.closeStart.subscribe(() => this._onToggle());\n    sidebar.sidebarClose.subscribe(() => this._markForCheck());\n\n    sidebar.modeChange.subscribe(() => this._markForCheck());\n    sidebar.positionChange.subscribe(() => this._markForCheck());\n\n    sidebar._onRerender.subscribe(() => this._markForCheck());\n  }\n\n  /**\n   * Unsubscribes from all sidebars.\n   */\n  private _unsubscribe(): void {\n    for (const sidebar of this._sidebars) {\n      sidebar.openStart.unsubscribe();\n      sidebar.sidebarOpen.unsubscribe();\n\n      sidebar.closeStart.unsubscribe();\n      sidebar.sidebarClose.unsubscribe();\n\n      sidebar.modeChange.unsubscribe();\n      sidebar.positionChange.unsubscribe();\n\n      sidebar._onRerender.unsubscribe();\n    }\n  }\n\n  /**\n   * Check if we should show the backdrop when a sidebar is toggled.\n   */\n  private _onToggle(): void {\n    if (this._sidebars.length > 0 && this.allowSidebarBackdropControl) {\n      // Show backdrop if a single open sidebar has it set\n      const hasOpen = this._sidebars.some(\n        (sidebar) => sidebar.opened && sidebar.showBackdrop\n      );\n\n      this.showBackdrop = hasOpen;\n      this.showBackdropChange.emit(hasOpen);\n    }\n\n    setTimeout(() => {\n      this._markForCheck();\n    });\n  }\n\n  /**\n   * Triggers change detection to recompute styles.\n   */\n  private _markForCheck(): void {\n    this._ref.markForCheck();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppScene', 'selector': 'cf-scene'},{'name': 'NavbarComponent', 'selector': 'cf-navbar'},{'name': 'SidebarComponent', 'selector': 'cf-sidebar'},{'name': 'SidebarContainerComponent', 'selector': 'cf-sidebar-container'},{'name': 'SvgIconComponent', 'selector': 'cf-svg-icon'}];\n    var DIRECTIVES = [{'name': 'BlockDirective', 'selector': '[cfBlock]'},{'name': 'CloseSidebarDirective', 'selector': '[cfCloseSidebar]'},{'name': 'ElemDirective', 'selector': '[cfElem]'},{'name': 'ModDirective', 'selector': '[cfMod]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SidebarItem.html":{"url":"interfaces/SidebarItem.html","title":"interface - SidebarItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SidebarItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/scene/app.scene.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            routerLink\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routerLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routerLink:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { SelectedAvatarState } from '@central-factory/agent-avatars/states/selected-avatar/selected-avatar.state';\nimport { Avatar } from '@central-factory/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport interface SidebarItem {\n  name: string;\n  routerLink: string[];\n  icon: string;\n  active: boolean;\n}\n\n@Component({\n  selector: 'cf-scene',\n  template: `\n    \n      \n        \n          \n            \n            \n              \n                \n                  \n                    Account\n                  \n                  \n                \n\n                \n                  \n                    \n                      {{ item.name }}\n                    \n                    \n                      \n                    \n                  \n                \n\n                \n              \n            \n\n            \n              \n                \n              \n            \n          \n\n          \n            \n              \n                \n              \n            \n          \n        \n        \n        \n      \n    \n  `,\n})\nexport class AppScene implements OnInit {\n  title = 'Metaverse Portal';\n  sidebarIsOpen = false;\n\n  sidebarItems: SidebarItem[] = [\n    {\n      name: 'Play',\n      routerLink: ['/play'],\n      icon: 'assets/icons/mdi/play.svg',\n      active: false,\n    },\n    {\n      name: 'Avatar',\n      routerLink: ['/selected-avatar'],\n      icon: 'assets/icons/mdi/account.svg',\n      active: false,\n    },\n    {\n      name: 'Inventory',\n      routerLink: ['/inventory'],\n      icon: 'assets/icons/mdi/bag-personal.svg',\n      active: false,\n    },\n    {\n      name: 'Marketplace',\n      routerLink: ['/marketplace'],\n      icon: 'assets/icons/mdi/store.svg',\n      active: false,\n    },\n    {\n      name: 'Settings',\n      routerLink: ['/settings'],\n      icon: 'assets/icons/mdi/cog.svg',\n      active: false,\n    },\n  ];\n\n  selectedAvatar$: Observable =\n    this.selectedAvatarState.avatar$;\n\n  constructor(\n    private router: Router,\n    private selectedAvatarState: SelectedAvatarState\n  ) {}\n\n  ngOnInit() {\n    this.setSidebarItemsActive();\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => this.setSidebarItemsActive());\n  }\n\n  private setSidebarItemsActive() {\n    this.sidebarItems.forEach((item) => {\n      item.active = this.router.url.endsWith(item.routerLink.join('/'));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    SidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\n\nCloseSidebarDirective\n\nCloseSidebarDirective\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nCloseSidebarDirective->SidebarModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nSidebarContainerComponent\n\nSidebarContainerComponent\n\nSidebarModule -->\n\nSidebarContainerComponent->SidebarModule\n\n\n\n\n\nCloseSidebarDirective \n\nCloseSidebarDirective \n\nCloseSidebarDirective  -->\n\nSidebarModule->CloseSidebarDirective \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\nSidebarContainerComponent \n\nSidebarContainerComponent \n\nSidebarContainerComponent  -->\n\nSidebarModule->SidebarContainerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/sidebar/sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CloseSidebarDirective\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            SidebarContainerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CloseSidebarDirective\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            SidebarContainerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CloseSidebarDirective } from './close-sidebar.directive';\nimport { SidebarContainerComponent } from './sidebar-container.component';\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    SidebarComponent,\n    SidebarContainerComponent,\n    CloseSidebarDirective,\n  ],\n  exports: [SidebarComponent, SidebarContainerComponent, CloseSidebarDirective],\n})\nexport class SidebarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgHttpLoader.html":{"url":"injectables/SvgHttpLoader.html","title":"injectable - SvgHttpLoader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SvgHttpLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-loader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SvgLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/svg-icon/svg-loader.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSvg\n                        \n                    \n                \n            \n            \n                \ngetSvg(url: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SvgLoader\n\n                \n            \n            \n                \n                        Defined in         SvgLoader:15\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport abstract class SvgLoader {\n  abstract getSvg(url: string): Observable;\n}\n\n@Injectable()\nexport class SvgHttpLoader extends SvgLoader {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getSvg(url: string): Observable {\n    return this.http.get(url, { responseType: 'text' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SvgIconComponent.html":{"url":"components/SvgIconComponent.html","title":"component - SvgIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SvgIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/angular/svg-icon/svg-icon.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cf-svg-icon\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _svgStyle\n                            \n                            \n                                    Private\n                                helper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyChanges\n                            \n                            \n                                    Private\n                                copyNgContentAttribute\n                            \n                            \n                                    Private\n                                destroy\n                            \n                            \n                                    Private\n                                doAria\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                initSvg\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetDiffer\n                            \n                            \n                                    Private\n                                setClass\n                            \n                            \n                                    Private\n                                setNgContentAttribute\n                            \n                            \n                                    Private\n                                setStyle\n                            \n                            \n                                    Private\n                                setSvg\n                            \n                            \n                                    Private\n                                stylize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyClass\n                            \n                            \n                                class\n                            \n                            \n                                name\n                            \n                            \n                                src\n                            \n                            \n                                stretch\n                            \n                            \n                                svgAriaLabel\n                            \n                            \n                                svgClass\n                            \n                            \n                                svgStyle\n                            \n                            \n                                viewBox\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    svgStyle\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, differs: KeyValueDiffers, renderer: Renderer2, iconReg: SvgIconRegistryService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        differs\n                                                  \n                                                        \n                                                                        KeyValueDiffers\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iconReg\n                                                  \n                                                        \n                                                                        SvgIconRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        applyClass\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        src\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stretch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgAriaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgStyle\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewBox\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:42\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        applyChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyChanges(changes: KeyValueChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            KeyValueChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        copyNgContentAttribute\n                        \n                    \n                \n            \n            \n                \n                    \n                    copyNgContentAttribute(hostElem: any, icon: SVGElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hostElem\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    icon\n                                    \n                                            SVGElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doAria\n                        \n                    \n                \n            \n            \n                \n                    \n                    doAria(label: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:326\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initSvg\n                        \n                    \n                \n            \n            \n                \n                    \n                    initSvg(svg: SVGElement | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                            SVGElement | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changeRecord: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changeRecord\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resetDiffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetDiffer()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    setClass(target: HTMLElement | SVGSVGElement, previous: string | string[] | null, current: string | string[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            HTMLElement | SVGSVGElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previous\n                                    \n                                            string | string[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    current\n                                    \n                                            string | string[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setNgContentAttribute\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNgContentAttribute(parent: Node, attributeName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attributeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setStyle\n                        \n                    \n                \n            \n            \n                \n                    \n                    setStyle(nameAndUnit: string, value: string | number | null | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:286\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameAndUnit\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            string | number | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setSvg\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSvg(svg: SVGElement)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    svg\n                                    \n                                            SVGElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        stylize\n                        \n                    \n                \n            \n            \n                \n                    \n                    stylize()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _svgStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        helper\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new SvgIconHelper()\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        svgStyle\n                    \n                \n\n\n                \n                    \n                        setsvgStyle(values: literal type | null)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/angular/svg-icon/svg-icon.component.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            values\n                                                    \n                                                            \n                                                                        literal type | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueChangeRecord,\n  KeyValueChanges,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SvgIconRegistryService } from './svg-icon-registry.service';\n\nclass SvgIconHelper {\n  svg!: SVGElement;\n  icnSub!: Subscription;\n  differ?: KeyValueDiffer;\n  loaded = false;\n}\n\n@Component({\n  selector: 'cf-svg-icon',\n  template: '',\n})\nexport class SvgIconComponent implements OnInit, OnDestroy, OnChanges, DoCheck {\n  @Input() src!: string;\n  @Input() name?: string;\n  @Input() stretch = false;\n  @Input() applyClass = false;\n  @Input() svgClass?: any;\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('class') klass?: any;\n  @Input() viewBox?: string;\n  @Input() svgAriaLabel?: string;\n\n  // Adapted from ngStyle (see:  angular/packages/common/src/directives/ng_style.ts)\n  @Input()\n  set svgStyle(values: { [klass: string]: any } | null) {\n    this._svgStyle = values;\n    if (!this.helper.differ && values) {\n      this.helper.differ = this.differs.find(values).create();\n    }\n  }\n\n  private helper = new SvgIconHelper();\n  private _svgStyle: { [key: string]: any } | null = null;\n\n  constructor(\n    private element: ElementRef,\n    private differs: KeyValueDiffers,\n    private renderer: Renderer2,\n    private iconReg: SvgIconRegistryService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.init();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  ngOnChanges(changeRecord: SimpleChanges) {\n    const elemSvg = this.element.nativeElement.firstChild;\n\n    if (changeRecord.src || changeRecord.name) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n    if (changeRecord.stretch) {\n      this.stylize();\n    }\n\n    if (changeRecord.applyClass) {\n      if (this.applyClass) {\n        this.setClass(elemSvg, null, this.klass);\n      } else {\n        this.setClass(elemSvg, this.klass, null);\n      }\n    }\n\n    if (changeRecord.svgClass) {\n      this.setClass(\n        elemSvg,\n        changeRecord.svgClass.previousValue,\n        changeRecord.svgClass.currentValue\n      );\n    }\n\n    if (changeRecord.klass) {\n      const elem = this.element.nativeElement;\n      this.setClass(\n        elem,\n        changeRecord.klass.previousValue,\n        changeRecord.klass.currentValue\n      );\n\n      if (this.applyClass) {\n        this.setClass(\n          elemSvg,\n          changeRecord.klass.previousValue,\n          changeRecord.klass.currentValue\n        );\n      } else {\n        this.setClass(elemSvg, changeRecord.klass.previousValue, null);\n      }\n    }\n\n    if (changeRecord.viewBox) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n\n    if (changeRecord.svgAriaLabel) {\n      this.doAria(changeRecord.svgAriaLabel.currentValue);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.helper.svg && this.helper.differ) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const changes = this.helper.differ.diff(this._svgStyle!);\n      if (changes) {\n        this.applyChanges(changes);\n      }\n    }\n  }\n\n  private init() {\n    if (this.name) {\n      const svgObs = this.iconReg.getSvgByName(this.name);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe((svg) => this.initSvg(svg));\n      }\n    } else if (this.src) {\n      const svgObs = this.iconReg.loadSvg(this.src);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe((svg) => this.initSvg(svg));\n      }\n    } else {\n      const elem = this.element.nativeElement;\n      elem.innerHTML = '';\n      this.cdr.markForCheck();\n    }\n  }\n\n  private initSvg(svg: SVGElement | undefined): void {\n    if (!this.helper.loaded && svg) {\n      this.setSvg(svg);\n      this.resetDiffer();\n    }\n  }\n\n  private destroy() {\n    if (this.helper.icnSub) {\n      this.helper.icnSub.unsubscribe();\n    }\n    this.helper = new SvgIconHelper();\n  }\n\n  private resetDiffer() {\n    if (this._svgStyle && !this.helper.differ) {\n      this.helper.differ = this.differs.find(this._svgStyle).create();\n    }\n  }\n\n  private setSvg(svg: SVGElement) {\n    if (!this.helper.loaded && svg) {\n      this.helper.svg = svg;\n      const icon = svg.cloneNode(true) as SVGElement;\n      const elem = this.element.nativeElement;\n\n      elem.innerHTML = '';\n      this.renderer.appendChild(elem, icon);\n      this.helper.loaded = true;\n\n      this.copyNgContentAttribute(elem, icon);\n\n      if (this.klass && this.applyClass) {\n        this.setClass(elem.firstChild, null, this.klass);\n      }\n\n      if (this.svgClass) {\n        this.setClass(elem.firstChild, null, this.svgClass);\n      }\n\n      if (this.viewBox) {\n        if (this.viewBox === 'auto') {\n          // Attempt to convert height & width to a viewBox.\n          const w = icon.getAttribute('width');\n          const h = icon.getAttribute('height');\n          if (h && w) {\n            const vb = `0 0 ${w} ${h}`;\n            this.renderer.setAttribute(icon, 'viewBox', vb);\n            this.renderer.removeAttribute(icon, 'width');\n            this.renderer.removeAttribute(icon, 'height');\n          }\n        } else if (this.viewBox !== '') {\n          this.renderer.setAttribute(icon, 'viewBox', this.viewBox);\n          this.renderer.removeAttribute(icon, 'width');\n          this.renderer.removeAttribute(icon, 'height');\n        }\n      }\n\n      this.stylize();\n\n      // If there is not a svgAriaLabel and the SVG has an arial-label, then do not override\n      // the SVG's aria-label.\n      if (\n        !(\n          this.svgAriaLabel === undefined &&\n          elem.firstChild.hasAttribute('aria-label')\n        )\n      ) {\n        this.doAria(this.svgAriaLabel || '');\n      }\n\n      this.cdr.markForCheck();\n    }\n  }\n\n  private copyNgContentAttribute(hostElem: any, icon: SVGElement) {\n    const attributes = hostElem.attributes as NamedNodeMap;\n    const len = attributes.length;\n    for (let i = 0; i ) {\n    changes.forEachRemovedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, null)\n    );\n    changes.forEachAddedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, record.currentValue)\n    );\n    changes.forEachChangedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, record.currentValue)\n    );\n  }\n\n  private setStyle(\n    nameAndUnit: string,\n    value: string | number | null | undefined\n  ) {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value !== null && unit ? `${value}${unit}` : value;\n    const svg = this.element.nativeElement.firstChild;\n\n    if (value !== null) {\n      this.renderer.setStyle(svg, name, value as string);\n    } else {\n      this.renderer.removeStyle(svg, name);\n    }\n  }\n\n  private setClass(\n    target: HTMLElement | SVGSVGElement,\n    previous: string | string[] | null,\n    current: string | string[] | null\n  ) {\n    if (target) {\n      if (previous) {\n        const klasses = (\n          Array.isArray(previous) ? previous : previous.split(' ')\n        ).filter((klass) => klass);\n        for (const k of klasses) {\n          this.renderer.removeClass(target, k);\n        }\n      }\n      if (current) {\n        const klasses = (\n          Array.isArray(current) ? current : current.split(' ')\n        ).filter((klass) => klass);\n        for (const k of klasses) {\n          this.renderer.addClass(target, k);\n        }\n      }\n    }\n  }\n\n  private doAria(label: string) {\n    const svg = this.element.nativeElement.firstChild;\n    if (svg) {\n      if (label === '') {\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n        this.renderer.removeAttribute(svg, 'aria-label');\n      } else {\n        this.renderer.removeAttribute(svg, 'aria-hidden');\n        this.renderer.setAttribute(svg, 'aria-label', label);\n      }\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppScene', 'selector': 'cf-scene'},{'name': 'NavbarComponent', 'selector': 'cf-navbar'},{'name': 'SidebarComponent', 'selector': 'cf-sidebar'},{'name': 'SidebarContainerComponent', 'selector': 'cf-sidebar-container'},{'name': 'SvgIconComponent', 'selector': 'cf-svg-icon'}];\n    var DIRECTIVES = [{'name': 'BlockDirective', 'selector': '[cfBlock]'},{'name': 'CloseSidebarDirective', 'selector': '[cfCloseSidebar]'},{'name': 'ElemDirective', 'selector': '[cfElem]'},{'name': 'ModDirective', 'selector': '[cfMod]'}];\n    var ACTUAL_COMPONENT = {'name': 'SvgIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SvgIconConfig.html":{"url":"interfaces/SvgIconConfig.html","title":"interface - SvgIconConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SvgIconConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-icon.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            loader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loader:         Provider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Provider\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { SVG_ICON_REGISTRY_PROVIDER } from './svg-icon-registry.service';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { SvgHttpLoader, SvgLoader } from './svg-loader';\n\nexport interface SvgIconConfig {\n  loader?: Provider;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SvgIconComponent],\n  exports: [SvgIconComponent],\n})\nexport class SvgIconModule {\n  static forRoot(\n    config: SvgIconConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: SvgIconModule,\n      providers: [\n        SVG_ICON_REGISTRY_PROVIDER,\n        config.loader || { provide: SvgLoader, useClass: SvgHttpLoader },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvgIconHelper.html":{"url":"classes/SvgIconHelper.html","title":"class - SvgIconHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvgIconHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-icon.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                differ\n                            \n                            \n                                icnSub\n                            \n                            \n                                loaded\n                            \n                            \n                                svg\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        differ\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValueDiffer\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icnSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        svg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SVGElement\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueChangeRecord,\n  KeyValueChanges,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SvgIconRegistryService } from './svg-icon-registry.service';\n\nclass SvgIconHelper {\n  svg!: SVGElement;\n  icnSub!: Subscription;\n  differ?: KeyValueDiffer;\n  loaded = false;\n}\n\n@Component({\n  selector: 'cf-svg-icon',\n  template: '',\n})\nexport class SvgIconComponent implements OnInit, OnDestroy, OnChanges, DoCheck {\n  @Input() src!: string;\n  @Input() name?: string;\n  @Input() stretch = false;\n  @Input() applyClass = false;\n  @Input() svgClass?: any;\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('class') klass?: any;\n  @Input() viewBox?: string;\n  @Input() svgAriaLabel?: string;\n\n  // Adapted from ngStyle (see:  angular/packages/common/src/directives/ng_style.ts)\n  @Input()\n  set svgStyle(values: { [klass: string]: any } | null) {\n    this._svgStyle = values;\n    if (!this.helper.differ && values) {\n      this.helper.differ = this.differs.find(values).create();\n    }\n  }\n\n  private helper = new SvgIconHelper();\n  private _svgStyle: { [key: string]: any } | null = null;\n\n  constructor(\n    private element: ElementRef,\n    private differs: KeyValueDiffers,\n    private renderer: Renderer2,\n    private iconReg: SvgIconRegistryService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.init();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  ngOnChanges(changeRecord: SimpleChanges) {\n    const elemSvg = this.element.nativeElement.firstChild;\n\n    if (changeRecord.src || changeRecord.name) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n    if (changeRecord.stretch) {\n      this.stylize();\n    }\n\n    if (changeRecord.applyClass) {\n      if (this.applyClass) {\n        this.setClass(elemSvg, null, this.klass);\n      } else {\n        this.setClass(elemSvg, this.klass, null);\n      }\n    }\n\n    if (changeRecord.svgClass) {\n      this.setClass(\n        elemSvg,\n        changeRecord.svgClass.previousValue,\n        changeRecord.svgClass.currentValue\n      );\n    }\n\n    if (changeRecord.klass) {\n      const elem = this.element.nativeElement;\n      this.setClass(\n        elem,\n        changeRecord.klass.previousValue,\n        changeRecord.klass.currentValue\n      );\n\n      if (this.applyClass) {\n        this.setClass(\n          elemSvg,\n          changeRecord.klass.previousValue,\n          changeRecord.klass.currentValue\n        );\n      } else {\n        this.setClass(elemSvg, changeRecord.klass.previousValue, null);\n      }\n    }\n\n    if (changeRecord.viewBox) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n\n    if (changeRecord.svgAriaLabel) {\n      this.doAria(changeRecord.svgAriaLabel.currentValue);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.helper.svg && this.helper.differ) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const changes = this.helper.differ.diff(this._svgStyle!);\n      if (changes) {\n        this.applyChanges(changes);\n      }\n    }\n  }\n\n  private init() {\n    if (this.name) {\n      const svgObs = this.iconReg.getSvgByName(this.name);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe((svg) => this.initSvg(svg));\n      }\n    } else if (this.src) {\n      const svgObs = this.iconReg.loadSvg(this.src);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe((svg) => this.initSvg(svg));\n      }\n    } else {\n      const elem = this.element.nativeElement;\n      elem.innerHTML = '';\n      this.cdr.markForCheck();\n    }\n  }\n\n  private initSvg(svg: SVGElement | undefined): void {\n    if (!this.helper.loaded && svg) {\n      this.setSvg(svg);\n      this.resetDiffer();\n    }\n  }\n\n  private destroy() {\n    if (this.helper.icnSub) {\n      this.helper.icnSub.unsubscribe();\n    }\n    this.helper = new SvgIconHelper();\n  }\n\n  private resetDiffer() {\n    if (this._svgStyle && !this.helper.differ) {\n      this.helper.differ = this.differs.find(this._svgStyle).create();\n    }\n  }\n\n  private setSvg(svg: SVGElement) {\n    if (!this.helper.loaded && svg) {\n      this.helper.svg = svg;\n      const icon = svg.cloneNode(true) as SVGElement;\n      const elem = this.element.nativeElement;\n\n      elem.innerHTML = '';\n      this.renderer.appendChild(elem, icon);\n      this.helper.loaded = true;\n\n      this.copyNgContentAttribute(elem, icon);\n\n      if (this.klass && this.applyClass) {\n        this.setClass(elem.firstChild, null, this.klass);\n      }\n\n      if (this.svgClass) {\n        this.setClass(elem.firstChild, null, this.svgClass);\n      }\n\n      if (this.viewBox) {\n        if (this.viewBox === 'auto') {\n          // Attempt to convert height & width to a viewBox.\n          const w = icon.getAttribute('width');\n          const h = icon.getAttribute('height');\n          if (h && w) {\n            const vb = `0 0 ${w} ${h}`;\n            this.renderer.setAttribute(icon, 'viewBox', vb);\n            this.renderer.removeAttribute(icon, 'width');\n            this.renderer.removeAttribute(icon, 'height');\n          }\n        } else if (this.viewBox !== '') {\n          this.renderer.setAttribute(icon, 'viewBox', this.viewBox);\n          this.renderer.removeAttribute(icon, 'width');\n          this.renderer.removeAttribute(icon, 'height');\n        }\n      }\n\n      this.stylize();\n\n      // If there is not a svgAriaLabel and the SVG has an arial-label, then do not override\n      // the SVG's aria-label.\n      if (\n        !(\n          this.svgAriaLabel === undefined &&\n          elem.firstChild.hasAttribute('aria-label')\n        )\n      ) {\n        this.doAria(this.svgAriaLabel || '');\n      }\n\n      this.cdr.markForCheck();\n    }\n  }\n\n  private copyNgContentAttribute(hostElem: any, icon: SVGElement) {\n    const attributes = hostElem.attributes as NamedNodeMap;\n    const len = attributes.length;\n    for (let i = 0; i ) {\n    changes.forEachRemovedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, null)\n    );\n    changes.forEachAddedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, record.currentValue)\n    );\n    changes.forEachChangedItem(\n      (record: KeyValueChangeRecord) =>\n        this.setStyle(record.key, record.currentValue)\n    );\n  }\n\n  private setStyle(\n    nameAndUnit: string,\n    value: string | number | null | undefined\n  ) {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value !== null && unit ? `${value}${unit}` : value;\n    const svg = this.element.nativeElement.firstChild;\n\n    if (value !== null) {\n      this.renderer.setStyle(svg, name, value as string);\n    } else {\n      this.renderer.removeStyle(svg, name);\n    }\n  }\n\n  private setClass(\n    target: HTMLElement | SVGSVGElement,\n    previous: string | string[] | null,\n    current: string | string[] | null\n  ) {\n    if (target) {\n      if (previous) {\n        const klasses = (\n          Array.isArray(previous) ? previous : previous.split(' ')\n        ).filter((klass) => klass);\n        for (const k of klasses) {\n          this.renderer.removeClass(target, k);\n        }\n      }\n      if (current) {\n        const klasses = (\n          Array.isArray(current) ? current : current.split(' ')\n        ).filter((klass) => klass);\n        for (const k of klasses) {\n          this.renderer.addClass(target, k);\n        }\n      }\n    }\n  }\n\n  private doAria(label: string) {\n    const svg = this.element.nativeElement.firstChild;\n    if (svg) {\n      if (label === '') {\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n        this.renderer.removeAttribute(svg, 'aria-label');\n      } else {\n        this.renderer.removeAttribute(svg, 'aria-hidden');\n        this.renderer.setAttribute(svg, 'aria-label', label);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SvgIconModule.html":{"url":"modules/SvgIconModule.html","title":"module - SvgIconModule","body":"\n                   \n\n\n\n\n    Modules\n    SvgIconModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SvgIconModule\n\n\n\ncluster_SvgIconModule_exports\n\n\n\ncluster_SvgIconModule_declarations\n\n\n\n\nSvgIconComponent\n\nSvgIconComponent\n\n\n\nSvgIconModule\n\nSvgIconModule\n\nSvgIconModule -->\n\nSvgIconComponent->SvgIconModule\n\n\n\n\n\nSvgIconComponent \n\nSvgIconComponent \n\nSvgIconComponent  -->\n\nSvgIconModule->SvgIconComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-icon.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SvgIconComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SvgIconComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: SvgIconConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon.module.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                SvgIconConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { SVG_ICON_REGISTRY_PROVIDER } from './svg-icon-registry.service';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { SvgHttpLoader, SvgLoader } from './svg-loader';\n\nexport interface SvgIconConfig {\n  loader?: Provider;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SvgIconComponent],\n  exports: [SvgIconComponent],\n})\nexport class SvgIconModule {\n  static forRoot(\n    config: SvgIconConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: SvgIconModule,\n      providers: [\n        SVG_ICON_REGISTRY_PROVIDER,\n        config.loader || { provide: SvgLoader, useClass: SvgHttpLoader },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgIconRegistryService.html":{"url":"injectables/SvgIconRegistryService.html","title":"injectable - SvgIconRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SvgIconRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-icon-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                document\n                            \n                            \n                                    Private\n                                iconsByUrl\n                            \n                            \n                                    Private\n                                iconsLoadingByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSvg\n                            \n                            \n                                getSvgByName\n                            \n                            \n                                loadSvg\n                            \n                            \n                                unloadSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: SvgLoader, platformId: Record, serverUrl: string | undefined, _document: any)\n                    \n                \n                        \n                            \n                                Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        SvgLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serverUrl\n                                                  \n                                                        \n                                                                    string | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSvg\n                        \n                    \n                \n            \n            \n                \naddSvg(name: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:37\n                \n            \n\n\n            \n                \n                    Add a SVG to the registry by passing a name and the SVG.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSvgByName\n                        \n                    \n                \n            \n            \n                \ngetSvgByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:84\n                \n            \n\n\n            \n                \n                    Get loaded SVG from registry by name. (also works by url because of blended map)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSvg\n                        \n                    \n                \n            \n            \n                \nloadSvg(url: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:47\n                \n            \n\n\n            \n                \n                    Load a SVG to the registry from a URL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        url\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unloadSvg\n                        \n                    \n                \n            \n            \n                \nunloadSvg(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:94\n                \n            \n\n\n            \n                \n                    Remove a SVG from the registry by URL (or name).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iconsByUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        iconsLoadingByUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in src/lib/angular/svg-icon/svg-icon-registry.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  InjectionToken,\n  Optional,\n  PLATFORM_ID,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n  throwError as observableThrowError,\n} from 'rxjs';\nimport { catchError, finalize, map, share, tap } from 'rxjs/operators';\nimport { SvgLoader } from './svg-loader';\n\nexport const SERVER_URL = new InjectionToken('SERVER_URL');\n\n@Injectable()\nexport class SvgIconRegistryService {\n  private document: Document;\n  private iconsByUrl = new Map();\n  private iconsLoadingByUrl = new Map>();\n\n  constructor(\n    private loader: SvgLoader,\n    @Inject(PLATFORM_ID) private platformId: Record,\n    @Optional() @Inject(SERVER_URL) protected serverUrl: string | undefined,\n    @Optional() @Inject(DOCUMENT) private _document: any\n  ) {\n    this.document = this._document;\n  }\n\n  /** Add a SVG to the registry by passing a name and the SVG. */\n  addSvg(name: string, data: string) {\n    if (!this.iconsByUrl.has(name)) {\n      const div = this.document.createElement('DIV');\n      div.innerHTML = data;\n      const svg = div.querySelector('svg') as SVGElement;\n      this.iconsByUrl.set(name, svg);\n    }\n  }\n\n  /** Load a SVG to the registry from a URL. */\n  loadSvg(\n    url: string,\n    name: string = url\n  ): Observable | undefined {\n    // not sure if there should be a possibility to use name for server usage\n    // so overriding it for now if provided\n    // maybe should separate functionality for url and name use-cases\n    if (this.serverUrl && url.match(/^(http(s)?):/) === null) {\n      url = this.serverUrl + url;\n      name = url;\n    }\n\n    if (this.iconsByUrl.has(name)) {\n      return observableOf(this.iconsByUrl.get(name));\n    } else if (this.iconsLoadingByUrl.has(name)) {\n      return this.iconsLoadingByUrl.get(name);\n    }\n    const o = this.loader.getSvg(url).pipe(\n      map((svg) => {\n        const div = this.document.createElement('DIV');\n        div.innerHTML = svg;\n        return div.querySelector('svg') as SVGElement;\n      }),\n      tap((svg) => this.iconsByUrl.set(name, svg)),\n      catchError((err) => {\n        console.error(err);\n        return observableThrowError(err);\n      }),\n      finalize(() => this.iconsLoadingByUrl.delete(name)),\n      share()\n    ) as Observable;\n\n    this.iconsLoadingByUrl.set(name, o);\n    return o;\n  }\n\n  /** Get loaded SVG from registry by name. (also works by url because of blended map) */\n  getSvgByName(name: string): Observable | undefined {\n    if (this.iconsByUrl.has(name)) {\n      return observableOf(this.iconsByUrl.get(name));\n    } else if (this.iconsLoadingByUrl.has(name)) {\n      return this.iconsLoadingByUrl.get(name);\n    }\n    return observableThrowError(`No svg with name '${name}' has been loaded`);\n  }\n\n  /** Remove a SVG from the registry by URL (or name). */\n  unloadSvg(url: string) {\n    if (this.iconsByUrl.has(url)) {\n      this.iconsByUrl.delete(url);\n    }\n  }\n}\n\nexport function SVG_ICON_REGISTRY_PROVIDER_FACTORY(\n  parentRegistry: SvgIconRegistryService,\n  loader: SvgLoader,\n  platformId: any,\n  serverUrl?: string,\n  document?: any\n) {\n  return (\n    parentRegistry ||\n    new SvgIconRegistryService(loader, platformId, serverUrl, document)\n  );\n}\n\nexport const SVG_ICON_REGISTRY_PROVIDER = {\n  provide: SvgIconRegistryService,\n  deps: [\n    [new Optional(), new SkipSelf(), SvgIconRegistryService],\n    SvgLoader,\n    [PLATFORM_ID as InjectionToken],\n    [new Optional(), SERVER_URL as InjectionToken],\n    [new Optional(), DOCUMENT as InjectionToken],\n  ],\n  useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvgLoader.html":{"url":"classes/SvgLoader.html","title":"class - SvgLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvgLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/angular/svg-icon/svg-loader.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getSvg\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSvg(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/angular/svg-icon/svg-loader.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport abstract class SvgLoader {\n  abstract getSvg(url: string): Observable;\n}\n\n@Injectable()\nexport class SvgHttpLoader extends SvgLoader {\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getSvg(url: string): Observable {\n    return this.http.get(url, { responseType: 'text' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/angular/bem/bem.config.ts\n            \n            class\n            BemConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/angular/bem/bem.service.ts\n            \n            injectable\n            BemService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/angular/bem/block.directive.ts\n            \n            directive\n            BlockDirective\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lib/angular/bem/elem.directive.ts\n            \n            directive\n            ElemDirective\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lib/angular/bem/mod.directive.ts\n            \n            directive\n            ModDirective\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/angular/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/angular/scene/app.scene.ts\n            \n            component\n            AppScene\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/angular/scene/app.scene.ts\n            \n            interface\n            SidebarItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/angular/sidebar/close-sidebar.directive.ts\n            \n            directive\n            CloseSidebarDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/angular/sidebar/sidebar-container.component.ts\n            \n            component\n            SidebarContainerComponent\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                src/lib/angular/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                17 %\n                (11/64)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon-registry.service.ts\n            \n            injectable\n            SvgIconRegistryService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon-registry.service.ts\n            \n            function\n            SVG_ICON_REGISTRY_PROVIDER_FACTORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon-registry.service.ts\n            \n            variable\n            SERVER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon-registry.service.ts\n            \n            variable\n            SVG_ICON_REGISTRY_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon.component.ts\n            \n            component\n            SvgIconComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon.component.ts\n            \n            class\n            SvgIconHelper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-icon.module.ts\n            \n            interface\n            SvgIconConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-loader.ts\n            \n            class\n            SvgLoader\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/angular/svg-icon/svg-loader.ts\n            \n            injectable\n            SvgHttpLoader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/shared/platform/browser/is-ios.ts\n            \n            variable\n            isIOS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/shared/platform/browser/is-ltr.ts\n            \n            variable\n            isLTR\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SVG_ICON_REGISTRY_PROVIDER_FACTORY   (src/.../svg-icon-registry.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/angular/svg-icon/svg-icon-registry.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SVG_ICON_REGISTRY_PROVIDER_FACTORY\n                        \n                    \n                \n            \n            \n                \nSVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry: SvgIconRegistryService, loader: SvgLoader, platformId: any, serverUrl?: string, document?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentRegistry\n                                    \n                                                SvgIconRegistryService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loader\n                                    \n                                                SvgLoader\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platformId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    serverUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    document\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nweb-components\nThis library was generated with Nx.\nRunning unit tests\nRun nx test web-components to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SceneModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SvgIconModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BemModule\n\n\n\ncluster_BemModule_declarations\n\n\n\ncluster_BemModule_exports\n\n\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_imports\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_SceneModule\n\n\n\ncluster_SceneModule_declarations\n\n\n\ncluster_SceneModule_imports\n\n\n\ncluster_SceneModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_SvgIconModule\n\n\n\ncluster_SvgIconModule_declarations\n\n\n\ncluster_SvgIconModule_exports\n\n\n\n\nBlockDirective\n\nBlockDirective\n\n\n\nBemModule\n\nBemModule\n\nBemModule -->\n\nBlockDirective->BemModule\n\n\n\n\n\nElemDirective\n\nElemDirective\n\nBemModule -->\n\nElemDirective->BemModule\n\n\n\n\n\nModDirective\n\nModDirective\n\nBemModule -->\n\nModDirective->BemModule\n\n\n\n\n\nBlockDirective \n\nBlockDirective \n\nBlockDirective  -->\n\nBemModule->BlockDirective \n\n\n\n\n\nElemDirective \n\nElemDirective \n\nElemDirective  -->\n\nBemModule->ElemDirective \n\n\n\n\n\nModDirective \n\nModDirective \n\nModDirective  -->\n\nBemModule->ModDirective \n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nBemModule->NavbarModule\n\n\n\n\n\nSceneModule\n\nSceneModule\n\nSceneModule -->\n\nBemModule->SceneModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\nSceneModule -->\n\nNavbarModule->SceneModule\n\n\n\n\n\nSvgIconModule\n\nSvgIconModule\n\nNavbarModule -->\n\nSvgIconModule->NavbarModule\n\n\n\nSceneModule -->\n\nSvgIconModule->SceneModule\n\n\n\n\n\nSvgIconComponent \n\nSvgIconComponent \n\nSvgIconComponent  -->\n\nSvgIconModule->SvgIconComponent \n\n\n\n\n\nAppScene\n\nAppScene\n\nSceneModule -->\n\nAppScene->SceneModule\n\n\n\n\n\nAppScene \n\nAppScene \n\nAppScene  -->\n\nSceneModule->AppScene \n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nSceneModule -->\n\nSidebarModule->SceneModule\n\n\n\n\n\nCloseSidebarDirective \n\nCloseSidebarDirective \n\nCloseSidebarDirective  -->\n\nSidebarModule->CloseSidebarDirective \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSidebarModule->SidebarComponent \n\n\n\n\n\nSidebarContainerComponent \n\nSidebarContainerComponent \n\nSidebarContainerComponent  -->\n\nSidebarModule->SidebarContainerComponent \n\n\n\n\n\nCloseSidebarDirective\n\nCloseSidebarDirective\n\nSidebarModule -->\n\nCloseSidebarDirective->SidebarModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSidebarModule -->\n\nSidebarComponent->SidebarModule\n\n\n\n\n\nSidebarContainerComponent\n\nSidebarContainerComponent\n\nSidebarModule -->\n\nSidebarContainerComponent->SidebarModule\n\n\n\n\n\nSvgIconComponent\n\nSvgIconComponent\n\nSvgIconModule -->\n\nSvgIconComponent->SvgIconModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isIOS   (src/.../is-ios.ts)\n                        \n                        \n                            isLTR   (src/.../is-ltr.ts)\n                        \n                        \n                            SERVER_URL   (src/.../svg-icon-registry.service.ts)\n                        \n                        \n                            SVG_ICON_REGISTRY_PROVIDER   (src/.../svg-icon-registry.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/shared/platform/browser/is-ios.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isIOS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): boolean => {\n  if (typeof window !== 'undefined' && typeof navigator !== 'undefined') {\n    return (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream\n    );\n  }\n\n  return false;\n}\n                    \n                \n\n            \n                \n                    Returns whether or not the current device is an iOS device.\n\n                \n            \n\n        \n    \n\n    src/lib/shared/platform/browser/is-ltr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLTR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): boolean => {\n  let dir = 'ltr';\n\n  if (typeof window !== 'undefined') {\n    if (window.getComputedStyle) {\n      dir = window\n        .getComputedStyle(document.body, null)\n        .getPropertyValue('direction');\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      dir = (document.body as any).currentStyle.direction;\n    }\n  }\n\n  return dir === 'ltr';\n}\n                    \n                \n\n            \n                \n                    Returns whether the page is in LTR mode. Defaults to true if it can't be computed.\n\n                \n            \n\n        \n    \n\n    src/lib/angular/svg-icon/svg-icon-registry.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SERVER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SERVER_URL')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_ICON_REGISTRY_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: SvgIconRegistryService,\n  deps: [\n    [new Optional(), new SkipSelf(), SvgIconRegistryService],\n    SvgLoader,\n    [PLATFORM_ID as InjectionToken],\n    [new Optional(), SERVER_URL as InjectionToken],\n    [new Optional(), DOCUMENT as InjectionToken],\n  ],\n  useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
