name: Deploy Web
on:
  push:
    branches: [main]
env:
  BEFORE_SHA: ${{ github.event.before }}
  cache-name: npm
jobs:

  # test:

  #   name: Run Lint & Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

  #     - name: Use Node.js 16.x
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16.x

  #     - name: Cache node modules
  #       uses: actions/cache@v2
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         # npm cache files are stored in `~/.npm` on Linux/macOS
  #         path: ~/.npm
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #           ${{ runner.os }}-build-
  #           ${{ runner.os }}-

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Run lint
  #       run: npm run lint

  #     - name: Send notification to Discord
  #       uses: sarisia/actions-status-discord@v1
  #       if: always()
  #       with:
  #         webhook: ${{ secrets.DISCORD_WEBHOOK }}
  #         title: 'Deploy Web: Run Tests'

  build:
    runs-on: ubuntu-latest
    # needs: test
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Fetch repository
        run: git fetch origin main

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build docs
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          shell: bash
          command: npx nx build codex

      - name: Build Portal
        run: npx nx build portal

      - name: Build Metadrones
        run: npx nx build metadrones

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.6
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: dist/ #

      - name: Send notification to Discord
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: 'Generate Release: Publish Release'
